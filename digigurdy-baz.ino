// VERSION 117 with 5th tuning option
// Has louder buzz to work with latest version of FluidSynth on Android phones.
// On bs-16i turn down buzz slider else will be too loud. ADDING EEPROM to
// remember previous settings.   // If you do not already have the EEPROM
// library in Documents--->Arduino----> libraries folder, you can download it
// from here. Put the files into a folder just called EEPROM inside your
// libraries folder.
//    https://github.com/PaulStoffregen/EEPROM

// Do Re Mi display version, experimental to see what people think. DUAL display
// selector at start. DJ duplicated all usbMIDI lines to MIDI included MIDI.h
// and MIDI serial to allow Teensy 3.6 or 3.5 to output to a serial DIN socket
// as well using the MIDI library EXPERIMENTAL PITCHBEND VERSION. For now
// commented out but it could be used and does work

// DJ Add Serial/Midiout put via 5 pin midi din socket  Teensy Pin 1 TX to  midi
// pin 5 Teensy 3.3V out to midi pin 4

// NOTE:
// To CHANGE TUNING you now press top left and top right keys at same time.
// To enter DEMO MODE you now press left top dark blue button and rightmost
// LOWER button together.

// This stops people accidentally entering Demo mode as happened with the
// earlier system.

// For Digi Nerdy Gurdy there are now 3 extra digital pins which allow easier
// navigation of the tuning options rather than using key combinations.

// This is for the white Adafruit 1.3" 126 x 64 monochrome OLED screen

// Bug fixed so can still play it using big button if motor totally fails i.e.
// is in effect disconnected OR if keybox is disconnected from soundbox in the
// case of the DigiNerdyGurdy

// Has crank override button, one press for ON next press for OFF instead of
// holding it down all the time.

// On Fluid synth you are using the soundfont viennaaltomod10.sf2 or later
// modified by me to include buzzes of different types and also keyclicks of
// different types. This is a soundfont from the open source Midi-Gurdy project
// at midigurdy.com to which I have just added a few extra sounds, mainly some
// trompette buzzes recorded for me by Nigel Eaton, some keyclick sounds and
// some extra drum and cymbal sounds just for fun if you want the crank to make
// a drum sound instead of a buzz for example.

// SUMMARY OF PINS

// DJ Add Serial/Midiout put via 5 pin midi din socket  Teensy Pin 1 TX to  midi
// pin 5 Teensy 3.3V out to midi pin 4

// Note to self regarding wiring an OLED to an Uno and alternative terminology
// for pins
//   OLED(adafruit)   Arduino UNO    Teensy
//   DATA                D9            D9
//   CLK                 D10           D10
//   D/C                 D11           D11
//   CS                  D12           D12
//   RST                 D13           D13

// Pin15 is also A1 so attach + wire from junction of the crank motor resistor
// pair to Pin 15

// Pin 16 is also A2 so we connect potentiometer wiper for the crank sensitivity
// setting to Pin 16

// Pins for each of the keys are described later

#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h> // Note used in this version. This is used if you have an Adafruit OLED screen that requires the SSD1306 driver
#include <Bounce.h> // Bounce library makes button change detection easy
#include <SPI.h>
#include <Wire.h>
//#include <Adafruit_SH1106.h>   //
//<-------------------------------------------------------------------------------------
//Must use the Wonho-maker version of the Adafruit_SH1106 library for it to work
//correctly
#include <EEPROM.h>
#include <MIDI.h> // The MIDI Library

// Baz added these:
#include <string>
using namespace std;

// MIDI_CREATE_DEFAULT_INSTANCE();
// Two lines below added from https://www.pjrc.com/teensy/td_libs_MIDI.html
// DJ Add
MIDI_CREATE_INSTANCE(
    HardwareSerial, Serial1,
    MIDI); // NOTE Serial1 transmit Pin in all Teensy 3.x boards is Pin 1
// const int channel = 1;

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// XXXXXXXXXXXXXXXXXXX  Setup variables XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
int debug; // Set this to 1 if you want data to appear in Serial viewer for
           // debugging
int crankmodulepresent; //  NOTE If crank module is present change this is
                        //  changed by the auto crank module detection code in
                        //  setup section to 1,   if not it is left as zero.
// NOTE: If a crank is NOT detected, machine will still beplayable using the big
// gaming button to turn drones and melody string on or off.

int buzzsamplinginterval =
    100; // Value from about 100 to 500, sets how frequently to sample the crank
         // voltage to see if buzz threshold has, or still is, exceeded
int buzzcountdownstartvalue =
    1000; // Bigger value makes buzz last longer before it decays to zero after
          // each initiation.
int buzzcountdown2startvalue = 1000;

int dronethreshold =
    25; // Adjust as required  Sets crank value that causes note to sound not
        // the buzz, just detects that crank is turning
// Note: If set too low the buzz can occasionally come on even when not
// cranking. Usually needs to be set at around 15 to 25
// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX SET THE MIDI VELOCITY VALUES
// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//  Drones = 0-127
//  For Melody Soft, use a velocity range of 0-31
//  For Melody Medium, use a velocity range of 32-63
//  For Melody Attack, use a velocity range of 64-127
// int noteVol = 56; // Velocity of melody notes range  zero to 127
int noteVol = 56;
int DVol = 56; // volume of DRONES where 127 is highest value possible

int buzzvolume = 127;
int buzzrootkey = 62;

int clickvolume = 127;

int buzzthreshold = 20; // Potentiometer code has been set up to give a value of
                        // 20 at its mid point when cranking at medium speed

const int channel = 1;

int tonestatus;
int octavestatus;

float pulsefrequency;

int displaystyle;

int tempcounter;

int tweaktuning;

int MIDInote;

int chan1midi = 67; // default is G4
int chan2midi = 55; // default is G3
int trompmidi = 60; // default is C4
int dronemidi = 36; // default is C2

// XXXXXXXXXXXXXXXXXXXXXXXXX   EEPROM XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//  start reading from the first byte (address 0) of the EEPROM
int tuningaddress = 1; // address for tuning value 1 to 14 in the EEPROM is 1
int displaytypeaddress =
    2; // address for display type value of 1 or 2 in the EEPROM is 2
int droneaddress = 3; // address for drones on or off type value of 1 or 2 in
                      // the EEPROM is 3      1 is drones ON and 2 is drones OFF
int chan1midiaddress = 4;
int chan2midiaddress = 5;
int trompmidiaddress = 6;
int dronemidiaddress = 7;
int tonestatusaddress = 8;
int octavestatusaddress = 9;

byte value;

int settings;

int but2status;
int but18status;
int but19status;
int but24status;
int but36status;
int but37status;
int but20status;

int octaveupbuttonstatus;
int octavedownbuttonstatus;
int capobuttonstatus;

// int keyboxstatus[25];  // array representing status of each key at any time
// XXXXXXXXXXXXXXXXXXX End of setup variables XXXXXXXXXXXXXXXXXXXXXXXXXXXX

// XXXXXXXXXXXXXXXXX  Everything for the analog Pin reading the voltage
// generated by cranking the gearmotor which is acting as a dynamo XXXXXXXXXXXX
int samplethebuzzpotentiometer; // Counter which samples the analog pot value
                                // every 2000 cycles

int buzzcountdown = 500;
int buzzcountdown2;
int cut;

float buzzsensitivity;
int buzzstatus;
float pulsefrequencyrollingmean = 20.0;
float limit;
int chienstatus;
int setchiendecaytime = 5000;

int crankvoltage;
int samplecrankvoltage;
float potvalueadjusted;
int potvalue;

long pausecounter;
int initialrun;

double sum = 0;
int count = 0;

int dronestate;
int crankbutton;
int crankbuttonprevious;
int stationary;

// int middy;
int note2;
int choosekey;

int highestnotebeingplayed;
int prevhighestnotebeingplayed;
int secondmelodyhighest;
int prevsecondmelodyhighest;
int shift;

int recrank;

/*
//XXXXXXXXXXXXXXXXXXX PITCHBEND variables XXXXXXXXXXXXXXXXXXXXXXXXXXX
int pitchbendsample;
int PitchValue;

int lowertrigger;
int highertrigger;
*/

// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  Everything for note bitmaps etc
// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
//  If using software SPI (the default case for regular arduinos):
#define OLED_MOSI                                                              \
  9 // Also known as DATA and sometimes as SDA
    // <---------------------------------------------------------------------------------------------------------------------------------------
#define OLED_CLK                                                               \
  10 // Also known as SCK sometimes
     // <---------------------------------------------------------------------------------------------------------------------------------------------------
#define OLED_DC 11
#define OLED_CS 12
#define OLED_RESET 13
// Adafruit_SH1106 display(OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET, OLED_CS);
// //
// <-----------------------------------------------------------------------------------------------
// Changed to this for our SH1106 driver screen

Adafruit_SSD1306
    display(OLED_MOSI, OLED_CLK, OLED_DC, OLED_RESET,
            OLED_CS); //        <-------------------------------------------------------------------------------------------
                      //        Comment this out as this is only used if you
                      //        have an Adafruit 1.3 inch OLED STEMMA screen

#define NUMFLAKES 10
#define LOGO_HEIGHT 16
#define LOGO_WIDTH 16

// Define my own bitmaps for the notes which will be displayed on the OLED
// screen along with their position on staves

// Main group for G/C tuning
#define LOGO17_GLCD_HEIGHT 64 // G4
#define LOGO17_GLCD_WIDTH 128

#define LOGO18_GLCD_HEIGHT 64 // A4
#define LOGO18_GLCD_WIDTH 128

#define LOGO19_GLCD_HEIGHT 64 // B4
#define LOGO19_GLCD_WIDTH 128

#define LOGO20_GLCD_HEIGHT 64 // C5
#define LOGO20_GLCD_WIDTH 128

#define LOGO21_GLCD_HEIGHT 64 // D5
#define LOGO21_GLCD_WIDTH 128

#define LOGO22_GLCD_HEIGHT 64 // E5
#define LOGO22_GLCD_WIDTH 128

#define LOGO23_GLCD_HEIGHT 64 // F5
#define LOGO23_GLCD_WIDTH 128

#define LOGO24_GLCD_HEIGHT 64 // G5
#define LOGO24_GLCD_WIDTH 128

#define LOGO25_GLCD_HEIGHT 64 // A5
#define LOGO25_GLCD_WIDTH 128

#define LOGO26_GLCD_HEIGHT 64 // B5
#define LOGO26_GLCD_WIDTH 128

#define LOGO27_GLCD_HEIGHT 64 // C6
#define LOGO27_GLCD_WIDTH 128

#define LOGO28_GLCD_HEIGHT 64 // D6
#define LOGO28_GLCD_WIDTH 128

#define LOGO29_GLCD_HEIGHT 64 // E6
#define LOGO29_GLCD_WIDTH 128

#define LOGO30_GLCD_HEIGHT 64 // F6
#define LOGO30_GLCD_WIDTH 128

#define LOGO31_GLCD_HEIGHT 64 // G6
#define LOGO31_GLCD_WIDTH 128

#define LOGO32_GLCD_HEIGHT 64 // G4s
#define LOGO32_GLCD_WIDTH 128

#define LOGO33_GLCD_HEIGHT 64 // A4s
#define LOGO33_GLCD_WIDTH 128

#define LOGO34_GLCD_HEIGHT 64 // C5s
#define LOGO34_GLCD_WIDTH 128

#define LOGO35_GLCD_HEIGHT 64 // D5s
#define LOGO35_GLCD_WIDTH 128

#define LOGO36_GLCD_HEIGHT 64 // F5s
#define LOGO36_GLCD_WIDTH 128

#define LOGO37_GLCD_HEIGHT 64 // G5s
#define LOGO37_GLCD_WIDTH 128

#define LOGO38_GLCD_HEIGHT 64 // A5s
#define LOGO38_GLCD_WIDTH 128

#define LOGO39_GLCD_HEIGHT 64 // C6s
#define LOGO39_GLCD_WIDTH 128

#define LOGO40_GLCD_HEIGHT 64 // D6s
#define LOGO40_GLCD_WIDTH 128

#define LOGO41_GLCD_HEIGHT 64 // F6s
#define LOGO41_GLCD_WIDTH 128

// XXXXXXXXXXXXXXXXXX Extra ones for additional tunings XXXXXXXXXXXXXXXXXXXXXXXX
#define LOGO42_GLCD_HEIGHT 64 // F4s
#define LOGO42_GLCD_WIDTH 128

#define LOGO43_GLCD_HEIGHT 64 // F4
#define LOGO43_GLCD_WIDTH 128

#define LOGO44_GLCD_HEIGHT 64 // E4
#define LOGO44_GLCD_WIDTH 128

#define LOGO45_GLCD_HEIGHT 64 // D4s
#define LOGO45_GLCD_WIDTH 128

#define LOGO46_GLCD_HEIGHT 64 // D4
#define LOGO46_GLCD_WIDTH 128

// XXXXXXXXXXXXXXXXX Define bitmaps for startup hurdygurdy images
// XXXXXXXXXXXXXXX
#define LOGO47_GLCD_HEIGHT 64 // Gurdy1
#define LOGO47_GLCD_WIDTH 128

#define LOGO48_GLCD_HEIGHT 64 // Gurdy2
#define LOGO48_GLCD_WIDTH 128

#define LOGO49_GLCD_HEIGHT 64 // Gurdy3
#define LOGO49_GLCD_WIDTH 128

#define LOGO50_GLCD_HEIGHT 64 // Gurdy4
#define LOGO50_GLCD_WIDTH 128

#define LOGO51_GLCD_HEIGHT 64 // Gurdy5
#define LOGO51_GLCD_WIDTH 128

#define LOGO52_GLCD_HEIGHT 64 // Gurdy6
#define LOGO52_GLCD_WIDTH 128

#define LOGO53_GLCD_HEIGHT 64 // Gurdy7
#define LOGO53_GLCD_WIDTH 128

#define LOGO54_GLCD_HEIGHT 64 // Gurdy8
#define LOGO54_GLCD_WIDTH 128

#define LOGO55_GLCD_HEIGHT 64 // Gurdy9       Screen for when crank stopped
#define LOGO55_GLCD_WIDTH 128

// Bitmaps for extra notes 2020
#define LOGO56_GLCD_HEIGHT 64 // A6 MIDI 93
#define LOGO56_GLCD_WIDTH 128

#define LOGO57_GLCD_HEIGHT 64 // G6# MIDI 92
#define LOGO57_GLCD_WIDTH 128

#define LOGO58_GLCD_HEIGHT 64 // C4# MIDI 61
#define LOGO58_GLCD_WIDTH 128

#define LOGO59_GLCD_HEIGHT 64 // C4 MIDI 60
#define LOGO59_GLCD_WIDTH 128

#define LOGO60_GLCD_HEIGHT 64 // B3 MIDI 59
#define LOGO60_GLCD_WIDTH 128

#define LOGO61_GLCD_HEIGHT 64 // A3# MIDI 58
#define LOGO61_GLCD_WIDTH 128

#define LOGO62_GLCD_HEIGHT 64 // A3 MIDI 57
#define LOGO62_GLCD_WIDTH 128

#define LOGO63_GLCD_HEIGHT 64 // G3# MIDI 56
#define LOGO63_GLCD_WIDTH 128

#define LOGO64_GLCD_HEIGHT 64 // G3 MIDI 55
#define LOGO64_GLCD_WIDTH 128

// Adafruit logo. Not used any more in fact as in some of the DG's I have not
// always used the Adafruit display.

static const unsigned char PROGMEM logo_bmp[] = {
    B00000000, B11000000, B00000001, B11000000, B00000001, B11000000, B00000011,
    B11100000, B11110011, B11100000, B11111110, B11111000, B01111110, B11111111,
    B00110011, B10011111, B00011111, B11111100, B00001101, B01110000, B00011011,
    B10100000, B00111111, B11100000, B00111111, B11110000, B01111100, B11110000,
    B01110000, B01110000, B00000000, B00110000};

// BITMAPS FOR EACH OF THE NOTES TO SHOW ON A 128 X 64 monochrome OLED SCREEN
// Bitmap G4
static const unsigned char PROGMEM logo17_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFC, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF,
    0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xFF, 0x80, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFE, 0x00, 0x07, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFC,
    0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x3F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x3F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x3F, 0xFF, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x3F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x3F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x3F, 0xFF, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x7F, 0x80, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0x00, 0x07,
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0,
    0x00, 0x3F, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x3F, 0x00, 0x0F,
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x3F, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xF0, 0x00, 0x3F, 0x00, 0x3E, 0xF0, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0F, 0xF8, 0x00, 0x3F, 0x00, 0x3C,
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFE,
    0x00, 0x3F, 0x00, 0x78, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xFF, 0x80, 0xFF, 0x00, 0x78, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0x00, 0xF0,
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xFF, 0x00, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0x01, 0xE0,
    0xF0, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x0F,
    0xFF, 0xFC, 0x03, 0xC0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0xFF, 0xC0, 0x07, 0xC0, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80,
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF,
    0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00

};

// Bitmap A4
static const unsigned char PROGMEM logo18_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
    0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
    0xBF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3F, 0x9F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x1F, 0xE0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F,
    0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x7F, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x0F, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
    0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFE, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC,
    0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFC, 0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x03, 0xFC, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8,
    0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xF8, 0x01, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x01, 0xFE, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF,
    0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xC0,
    0x00, 0x7F, 0x80, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xC0, 0x00, 0x7F, 0xC0, 0x00, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x01,
    0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0,
    0x00, 0x3F, 0xC0, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0xE0, 0x03, 0xFE, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x7F, 0x80, 0x00, 0x1F, 0xE0, 0x07,
    0xDE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x1F, 0xE0, 0x07, 0x9E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x00, 0x00, 0x1F, 0xF0, 0x0F, 0x1E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x0F, 0xE0, 0x0F,
    0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1E, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x1E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C,
    0x1E, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3C, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x1E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8,
    0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xF0, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

// Bitmap B4
static const unsigned char PROGMEM logo19_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x03, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0xFF, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x7F, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0xFE, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x03, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x01, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x7F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x1F, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x01, 0xFE, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x1F, 0xE0, 0x00,
    0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x7F, 0xC0, 0x00, 0x3F, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0xFF, 0xC0, 0x00,
    0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xFF, 0x80, 0x00, 0xFB, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xF3, 0xC0, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x01,
    0xE3, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xFC, 0x00, 0x01, 0xE3, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x03, 0xC3, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x80, 0x00, 0x03,
    0xC3, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x07, 0x83, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x83, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
    0x03, 0xC0, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1F, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x03, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
    0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
    0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

// Bitmap C5
static const unsigned char PROGMEM logo20_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
    0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x80, 0x0F, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF8,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x00, 0x03, 0x00, 0x3F,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0x80, 0x07, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xE0, 0x3F, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x3C,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x7F,
    0xFF, 0xFF, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00,
    0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFE, 0x00, 0x3C,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x03,
    0xFF, 0xF8, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x3F, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F,
    0xFC, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x60, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F,
    0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x7F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

};

// Bitmap D5
static const unsigned char PROGMEM logo21_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF,
    0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFC, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF,
    0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xE0, 0x1F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x03, 0xFF, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x01, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xE0, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x7F, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x1F, 0xE0, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0xFF, 0x80, 0xFF,
    0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x01, 0xFF, 0x00, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xE0, 0x03, 0xFF, 0x00, 0xFF, 0xFC, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x1F, 0xFE, 0x00, 0xFF,
    0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x1F, 0xFF,
    0xFF, 0xFC, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00,
    0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xF8, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x1F, 0xFF, 0xFF, 0xF0, 0x00, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x1F, 0xFF,
    0xFF, 0xE0, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00,
    0x00, 0x00, 0x1F, 0xFF, 0xFF, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xF0, 0x00, 0x00, 0xFF,
    0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
    0xFC, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0xFC, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xE0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00

};

// Bitmap E5
static const unsigned char PROGMEM logo22_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
    0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
    0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
    0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
    0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x07, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x00, 0x07, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x07, 0xFF, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x07, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0xFE, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x7F, 0xFF, 0xFE, 0x07, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
    0xFF, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0xFF, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFE, 0x07, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF,
    0xFE, 0x07, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x07, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x07, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x0F, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00

};

// Bitmap F5
static const unsigned char PROGMEM logo23_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x07, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x07, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0xFE, 0x00, 0x07, 0xFF, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x07, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x07, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC,
    0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x07, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x07, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x07, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x0F, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

};

// Bitmap G5
static const unsigned char PROGMEM logo24_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFE, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
    0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xC0, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFE,
    0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0,
    0x1F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xC0, 0x1F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x1F, 0xFF, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0,
    0x1F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00,
    0x00, 0x00, 0x3F, 0xC0, 0x1F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x1F, 0xFF, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x3F, 0xC0,
    0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00,
    0x00, 0x00, 0x3F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0,
    0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFC, 0x00, 0x1F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF,
    0x00, 0x1F, 0xC0, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xFF, 0xC0, 0x7F, 0xC0, 0xFF, 0xFC, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xC0, 0xFF,
    0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
    0xFF, 0xFF, 0xC0, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xC0, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0x80, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
    0xFF, 0xFE, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xE0, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
    0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80,
    0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xF8, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

};

// Bitmap A5
static const unsigned char PROGMEM logo25_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
    0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
    0xBF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3F, 0x9F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x1F, 0xE0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F,
    0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x7F, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x0F, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
    0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFE, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x01, 0xFC,
    0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00,
    0x00, 0x00, 0x01, 0xFC, 0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x03, 0xFC, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xF0, 0x00, 0x00, 0x03, 0xF8,
    0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00,
    0x00, 0x00, 0x03, 0xF8, 0x01, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x01, 0xFE, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x07, 0xFF,
    0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xC0,
    0x00, 0x7F, 0x80, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xC0, 0x00, 0x7F, 0xC0, 0xFF, 0xFC, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0xFF,
    0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0,
    0x00, 0x3F, 0xC0, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0xE0, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x7F, 0x80, 0x00, 0x1F, 0xE0, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x1F, 0xE0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x00, 0x00, 0x1F, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x0F, 0xE0, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
    0xFC, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80,
    0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xF8, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00

};

// Bitmap B5
static const unsigned char PROGMEM logo26_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF,
    0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x1F, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x1F, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0xFF, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x7F, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x7F, 0xFF,
    0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xE0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x7F, 0x80,
    0x7F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x0F, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x07, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x7F, 0x80, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x0F, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xE0, 0x1F, 0xFF,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
    0xFF, 0xC0, 0x1F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0xFF, 0x80, 0x1F, 0xFF, 0x80, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x7F, 0xFF, 0xFF, 0x00, 0x1F, 0xFF,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
    0xFC, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xFF, 0xE0, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF8,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xC0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
    0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
    0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x1F, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

};

// Bitmap C6
static const unsigned char PROGMEM logo27_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xE0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF,
    0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xFC, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF0, 0x01, 0xE0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xE0,
    0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00,
    0x00, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x07, 0xFF, 0xF0, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0xFF, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00,
    0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xF0, 0x00, 0x01, 0xFF, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xC0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x60, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF0,
    0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xFC, 0x07, 0xE0, 0x01, 0xFC, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x1F, 0xFF, 0xFF, 0xE0, 0x0F, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF,
    0xFF, 0xE0, 0x1F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xFF, 0xFF, 0xE0, 0x3F, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xC0, 0x3F, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F,
    0xFF, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0F, 0xF8, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF9, 0xF8, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x1F,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF8, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0F, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0F,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF8, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0F, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7C, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

};

// Bitmap D6
static const unsigned char PROGMEM logo28_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF,
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF,
    0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x03, 0xFF, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00,
    0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFC, 0x00, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x60, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x1F, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x03, 0xFC, 0x00,
    0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00,
    0x00, 0x03, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xF8, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x07, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x03, 0xFC, 0x00,
    0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00,
    0x00, 0x03, 0xFC, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFE, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00,
    0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00,
    0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x03, 0xFC, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x03, 0xFC, 0x00,
    0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFC, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x07, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00,
    0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFC, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x0F, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00,
    0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x03, 0xFC, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x7F, 0xE0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x03,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0xFC,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF,
    0xFE, 0x00, 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFF, 0xFF, 0xFC, 0x00, 0x1F, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0xFF, 0xFF, 0xE0, 0x00, 0x3F, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE,
    0x00, 0x00, 0x3F, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF9, 0xF8,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0F, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0F,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF8, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0F, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0F,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x3F, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00

};

// Bitmap E6
static const unsigned char PROGMEM logo29_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFC, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
    0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1C, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00,
    0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFC, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xF0,
    0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0xFF, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3E, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
    0xFF, 0xF0, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x07, 0xFF, 0xF0, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xFF, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
    0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFC, 0x00, 0x3F, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
    0xFF, 0xFF, 0xFE, 0x01, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFE, 0x03,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0xFF, 0xFC, 0x07, 0xFF, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
    0xFC, 0x07, 0xE0, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x1F, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xC0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
    0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x83, 0xE0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x1F, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF,
    0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x01, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1F, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
    0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x01, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x1F, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x87, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x07,
    0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00

};

// Bitmap F6
static const unsigned char PROGMEM logo30_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x07, 0xFF,
    0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00,
    0x00, 0x00, 0x0F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x0F, 0xFF,
    0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00,
    0x00, 0x00, 0x0F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x0F, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x00,
    0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF,
    0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF,
    0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x1F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0,
    0x00, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xF0, 0x01, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0F, 0xF0, 0x03, 0xFF, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0,
    0x03, 0xF0, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xE0, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x9F, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x0F, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xF0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0F, 0xC1, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0xF8, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0F, 0x80, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x0F, 0x80, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0xF8, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0F, 0x81, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x07, 0xC3, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

};

// Bitmap G6
static const unsigned char PROGMEM logo31_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00,
    0x00, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x03, 0xFF,
    0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF,
    0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xF0,
    0x00, 0x00, 0x3F, 0xF8, 0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xE0, 0x00, 0x78, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xC0,
    0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x07, 0xFF, 0xF0, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x03,
    0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x07, 0xF8, 0x03, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x03, 0xFF, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xF0, 0x00, 0x07, 0xF8, 0x03,
    0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x07, 0xF8, 0x03, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x03, 0xFF, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00,
    0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x07, 0xF8, 0x00, 0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00,
    0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x03, 0xFC, 0x00, 0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x03, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00,
    0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0x00, 0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x80, 0x03, 0xF8, 0x00, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xE0,
    0x03, 0xF8, 0x07, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xF8, 0x0F, 0xF8, 0x0F, 0xFF, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x3F, 0xFF, 0xFF, 0xF8, 0x1F, 0xFF,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF,
    0xFF, 0xF8, 0x1F, 0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xF8, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xF0, 0x3C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
    0xFF, 0xC0, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1F, 0xFC, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0xFC,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7E, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x07, 0xC0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x07,
    0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7C, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x07, 0xC0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x07,
    0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7C, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x1F, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00

};

// Bitmap G4s
static const unsigned char PROGMEM logo32_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0x00, 0x00,
    0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x18, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFE, 0x1C, 0x00,
    0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0F, 0xFC, 0x3C, 0x00, 0x00, 0x67, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0x3C, 0x00, 0x00, 0x7F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x07, 0x38, 0x3C, 0x07,
    0xC0, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFE,
    0x06, 0x30, 0x78, 0x07, 0xE0, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xFF, 0x1F, 0xFC, 0x78, 0x0F, 0xE0, 0x60, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x07, 0x1F, 0xFC, 0x70, 0x0F,
    0xE0, 0x60, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x01,
    0x06, 0x30, 0xF0, 0x0E, 0xF0, 0x60, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF0, 0x00, 0x06, 0x30, 0xF0, 0x1E, 0xF0, 0x70, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x06, 0x30, 0xE0, 0x1C,
    0x70, 0x79, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x00,
    0x06, 0x71, 0xE0, 0x1C, 0x78, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xE0, 0x00, 0x00, 0x01, 0xE0, 0x3C, 0x78, 0x67, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0xFF, 0x00, 0x03, 0xC0, 0x38,
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0xFF,
    0x00, 0x03, 0xC0, 0x78, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xE0, 0xFF, 0x00, 0x03, 0xC0, 0x78, 0x3C, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x0F, 0x00, 0x07, 0x80, 0x7F,
    0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F,
    0x00, 0x07, 0x80, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0xF0, 0x0F, 0x00, 0x07, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0F, 0x00, 0x0F, 0x00, 0xE0,
    0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x0F,
    0x1E, 0x0F, 0x01, 0xE0, 0x0F, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xFF, 0x3E, 0x0E, 0x01, 0xE0, 0x0F, 0x0F, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0x7E, 0x1E, 0x01, 0xE0,
    0x0F, 0x9F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8,
    0x6E, 0x1E, 0x01, 0xC0, 0x07, 0x9B, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xEE, 0x1C, 0x00, 0x00, 0x00, 0x3B, 0x80, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xCE, 0x3C, 0x00, 0x00,
    0x00, 0x33, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0xCE, 0x3C, 0x00, 0x00, 0x00, 0x73, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0x8E, 0x78, 0x00, 0x00, 0x00, 0x63, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x8E, 0x78, 0x00, 0x00,
    0x00, 0xE3, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
    0x0E, 0x00, 0x00, 0x00, 0x00, 0xC3, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x01, 0xFF, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0x80, 0x00, 0x00,
    0x00, 0xFF, 0xE0, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x0E, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00,
    0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00

};

// Bitmap A4s
static const unsigned char PROGMEM logo33_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x18, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0x00, 0x00,
    0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x18, 0x07, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0F, 0xFE, 0x0F, 0x00, 0x00, 0x0C, 0xF0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFC, 0x0F, 0x00,
    0x00, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8,
    0x03, 0x18, 0x0F, 0x1F, 0xF8, 0x0F, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFC, 0x07, 0x38, 0x1E, 0x1F, 0xFE, 0x0E, 0x1C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x06, 0x30, 0x1E, 0x1F,
    0xFF, 0x0C, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC,
    0x1F, 0xFC, 0x1C, 0x1E, 0x0F, 0x0C, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xDE, 0x1F, 0xFC, 0x3C, 0x1E, 0x0F, 0x0C, 0x1C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xDE, 0x06, 0x30, 0x3C, 0x1E,
    0x0F, 0x0E, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x8E,
    0x06, 0x30, 0x38, 0x1E, 0x0F, 0x0F, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x8F, 0x06, 0x30, 0x78, 0x1E, 0x1F, 0x0F, 0xF8, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x8F, 0x06, 0x70, 0x78, 0x1F,
    0xFE, 0x0C, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07,
    0x80, 0x00, 0xF0, 0x1F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0x07, 0x80, 0x00, 0xF0, 0x1F, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x07, 0x80, 0x00, 0xF0, 0x1E,
    0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF,
    0xC0, 0x01, 0xE0, 0x1E, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xFF, 0xC0, 0x01, 0xE0, 0x1E, 0x03, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xC0, 0x01, 0xC0, 0x1E,
    0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x03,
    0xE0, 0x03, 0xC0, 0x1E, 0x07, 0x80, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x3C, 0x01, 0xE0, 0x03, 0xC0, 0x1E, 0x0F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x01, 0xE0, 0x03, 0x80, 0x1F,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x01,
    0xF0, 0x07, 0x80, 0x1F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x38, 0x00, 0xF3, 0xC7, 0x80, 0x1F, 0xF8, 0x3C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC7, 0x00, 0x00,
    0x00, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0F, 0xCF, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0D, 0xCF, 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x1D, 0xDE, 0x00, 0x00,
    0x01, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x19, 0xDE, 0x00, 0x00, 0x01, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x39, 0xC0, 0x00, 0x00, 0x03, 0x9C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0xC0, 0x00, 0x00,
    0x03, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x71, 0xC0, 0x00, 0x00, 0x07, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x61, 0xC0, 0x00, 0x00, 0x06, 0x1C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF0, 0x00, 0x00,
    0x0F, 0xFF, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x7F, 0xF0, 0x00, 0x00, 0x07, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00,
    0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0xC0, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00

};

// Bitmap C5s
static const unsigned char PROGMEM logo34_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x31, 0x80, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x80, 0x00, 0x00,
    0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x31, 0x80, 0xE0, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x31, 0x81, 0xE0, 0x00, 0x00, 0x30, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xE1, 0xE0, 0x00,
    0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE0,
    0xFF, 0xC1, 0xE3, 0xFF, 0x00, 0x33, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xF8, 0x31, 0x83, 0xC3, 0xFF, 0xE0, 0x3F, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x73, 0x83, 0xC3, 0xFF,
    0xF0, 0x3C, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x1C,
    0x63, 0x03, 0x83, 0xC1, 0xF8, 0x38, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x78, 0x05, 0xFF, 0xC7, 0x83, 0xC0, 0x7C, 0x30, 0x70, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x01, 0xFF, 0xC7, 0x83, 0xC0,
    0x3C, 0x30, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00,
    0x63, 0x07, 0x03, 0xC0, 0x3C, 0x30, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF0, 0x00, 0x63, 0x0F, 0x03, 0xC0, 0x1E, 0x38, 0x70, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x63, 0x0F, 0x03, 0xC0,
    0x1E, 0x3C, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00,
    0x67, 0x1E, 0x03, 0xC0, 0x1E, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xF0, 0x00, 0x00, 0x1E, 0x03, 0xC0, 0x1E, 0x33, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x1E, 0x03, 0xC0,
    0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00,
    0x00, 0x3C, 0x03, 0xC0, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF0, 0x00, 0x00, 0x3C, 0x03, 0xC0, 0x3C, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x38, 0x03, 0xC0,
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x04,
    0x00, 0x78, 0x03, 0xC0, 0x7C, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x7C, 0x1C, 0x00, 0x78, 0x03, 0xC1, 0xF8, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x70, 0x03, 0xFF,
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF8,
    0x00, 0xF0, 0x03, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xE0, 0x00, 0xF0, 0x03, 0xFF, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0xE0, 0x00, 0x00,
    0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
    0xF9, 0xE0, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x06, 0x01, 0xE0, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x06, 0x03, 0xC0, 0x00, 0x00,
    0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x06,
    0x03, 0xC0, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00,
    0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00,
    0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x07,
    0xF8, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00,
    0x00, 0x70, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x1C, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x38, 0x00, 0x00, 0x00,
    0x20, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
    0xF0, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// Bitmap D5s
static const unsigned char PROGMEM logo35_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x18, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0x0E, 0x00, 0x00, 0x60, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0x1E, 0x00,
    0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x18, 0x1E, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xE0, 0x0F, 0xFE, 0x1E, 0x1F, 0xFC, 0x67, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFC, 0x0F, 0xFC, 0x3C, 0x3F,
    0xFC, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFE,
    0x03, 0x18, 0x3C, 0x3F, 0xFC, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x78, 0x3F, 0x07, 0x38, 0x38, 0x3C, 0x00, 0x70, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x0F, 0x86, 0x30, 0x78, 0x3C,
    0x00, 0x60, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x07,
    0x9F, 0xFC, 0x78, 0x3C, 0x00, 0x60, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x78, 0x07, 0x9F, 0xFC, 0x70, 0x3C, 0x00, 0x60, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x03, 0xC6, 0x30, 0xF0, 0x3C,
    0x00, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x03,
    0xC6, 0x30, 0xF0, 0x3F, 0xF8, 0x79, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x78, 0x03, 0xC6, 0x31, 0xE0, 0x3F, 0xF8, 0x7F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x03, 0xC6, 0x71, 0xE0, 0x3F,
    0xF8, 0x67, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x03,
    0xC0, 0x01, 0xE0, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x78, 0x03, 0xC0, 0x03, 0xC0, 0x3C, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x07, 0x80, 0x03, 0xC0, 0x3C,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x07,
    0x80, 0x03, 0x80, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x78, 0x0F, 0x80, 0x07, 0x80, 0x3C, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x3F, 0x00, 0x07, 0x80, 0x3C,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFE,
    0x00, 0x07, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xFC, 0x00, 0x0F, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x7F, 0xE0, 0xFF, 0x0F, 0x00, 0x1F,
    0xFC, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xFF, 0x0E, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xC0, 0x1E, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xC0, 0x1E, 0x00, 0x00,
    0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xC0, 0x3C, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xC0, 0x3C, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00,
    0x00, 0x03, 0x80, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x03, 0x80, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x00, 0x00, 0x00,
    0x01, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0xFE, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00

};

// Bitmap F5s
static const unsigned char PROGMEM logo36_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xC6, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xC6, 0x07, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x0F, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xC6, 0x0F, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0xC3, 0xFF, 0x8F, 0x00, 0x7F, 0x03, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xE3, 0xFF, 0x1E, 0x01, 0xFF,
    0xC3, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xC0,
    0xC6, 0x1E, 0x07, 0xFF, 0xE3, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xE0, 0x01, 0xCE, 0x1C, 0x0F, 0xC0, 0xE3, 0xCF, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x01, 0x8C, 0x3C, 0x0F, 0x00,
    0x23, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x07,
    0xFF, 0x3C, 0x1E, 0x00, 0x03, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xE0, 0x07, 0xFF, 0x38, 0x1E, 0x00, 0x03, 0x07, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x01, 0x8C, 0x78, 0x3C, 0x00,
    0x03, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x01,
    0x8C, 0x78, 0x3C, 0x00, 0x03, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0xC1, 0x8C, 0xF0, 0x3C, 0x1F, 0xE3, 0xCE, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xC1, 0x9C, 0xF0, 0x3C, 0x1F,
    0xE3, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xC0,
    0x00, 0xF0, 0x3C, 0x1F, 0xE3, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00,
    0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x3C, 0x01, 0xE0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3E, 0x00, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x1E, 0x01,
    0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x01, 0xE0, 0x00,
    0x01, 0xC0, 0x1E, 0x01, 0xE0, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x01, 0xE0, 0x00, 0x03, 0xC0, 0x1F, 0x01, 0xE0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x00, 0x00, 0x01, 0xE0, 0x00, 0x03, 0xC0, 0x0F, 0xC1,
    0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x01, 0xE1, 0xFE,
    0x03, 0x80, 0x07, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00,
    0x00, 0x01, 0xE1, 0xFE, 0x07, 0x80, 0x03, 0xFF, 0xE7, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE1, 0x80, 0x07, 0x80, 0x00, 0x7F,
    0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80,
    0x07, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0x80, 0x0F, 0x00, 0x00, 0x00,
    0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC,
    0x1E, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x1E, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00,
    0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x1C, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x02, 0x0E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x08, 0x38, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00,
    0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

};

// Bitmap G5s
static const unsigned char PROGMEM logo37_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x06, 0x30, 0x01, 0xC0, 0x00, 0x30, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x30, 0x03, 0xC0,
    0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x06, 0x30, 0x03, 0xC0, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xF8, 0x06, 0x30, 0x03, 0xC7, 0xC0, 0x30, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFE, 0x1F, 0xFC, 0x07, 0x87,
    0xE0, 0x33, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF,
    0x1F, 0xF8, 0x07, 0x8F, 0xE0, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7E, 0x07, 0x06, 0x30, 0x07, 0x0F, 0xE0, 0x3C, 0xF0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x01, 0x0E, 0x70, 0x0F, 0x0E,
    0xF0, 0x38, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00,
    0x0C, 0x60, 0x0F, 0x1E, 0xF0, 0x30, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF0, 0x00, 0x3F, 0xF8, 0x0E, 0x1C, 0x70, 0x30, 0x70, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x00, 0x3F, 0xF8, 0x1E, 0x1C,
    0x78, 0x30, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x00,
    0x0C, 0x60, 0x1E, 0x3C, 0x78, 0x38, 0x70, 0x00, 0x00, 0x00, 0x18, 0x00,
    0x00, 0x01, 0xE0, 0xFF, 0x0C, 0x60, 0x3C, 0x38, 0x3C, 0x3C, 0xE0, 0x00,
    0x00, 0x00, 0x3C, 0x00, 0x00, 0x01, 0xE0, 0xFF, 0x0C, 0x60, 0x3C, 0x78,
    0x3C, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x01, 0xE0, 0xFF,
    0x0C, 0x60, 0x3C, 0x78, 0x3C, 0x33, 0xC0, 0x00, 0x00, 0x00, 0x7E, 0x00,
    0x00, 0x01, 0xE0, 0x0F, 0x00, 0x00, 0x78, 0x7F, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x78, 0xFF,
    0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xF0, 0x0F,
    0x00, 0x00, 0x70, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0xF8, 0x0F, 0x00, 0x00, 0xF0, 0xE0, 0x1F, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x0F, 0x00, 0x00, 0xF1, 0xE0,
    0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF,
    0x00, 0x00, 0xE1, 0xE0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xFF, 0x00, 0x01, 0xE1, 0xE0, 0x0F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x7F, 0x81, 0xE1, 0xC0,
    0x07, 0xBF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7F, 0x81, 0xC0, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x60, 0x03, 0xC0, 0x00, 0x00, 0x30, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x60, 0x03, 0xC0, 0x00,
    0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x60, 0x07, 0x80, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x60, 0x07, 0x80, 0x00, 0x00, 0x30, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00,
    0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7F, 0x80, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0xE0, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0x80, 0x00, 0x00,
    0x00, 0x41, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

};

// Bitmap A5s
static const unsigned char PROGMEM logo38_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x06, 0x30, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x30, 0x0E, 0x00,
    0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x06, 0x30, 0x1E, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x06, 0x30, 0x1E, 0x00, 0x00, 0x18, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x1F, 0xFC, 0x1E, 0x3F,
    0xF0, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8,
    0x1F, 0xF8, 0x3C, 0x3F, 0xFC, 0x19, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xF8, 0x06, 0x30, 0x3C, 0x3F, 0xFE, 0x1F, 0xF0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x0E, 0x70, 0x38, 0x3C,
    0x1E, 0x1E, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xBC,
    0x0C, 0x60, 0x78, 0x3C, 0x1E, 0x1C, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xBC, 0x3F, 0xF8, 0x78, 0x3C, 0x1E, 0x18, 0x38, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1C, 0x3F, 0xF8, 0x70, 0x3C,
    0x1E, 0x18, 0x38, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x07, 0x1E,
    0x0C, 0x60, 0xF0, 0x3C, 0x3E, 0x18, 0x38, 0x00, 0x00, 0x00, 0x3E, 0x00,
    0x00, 0x00, 0x0F, 0x1E, 0x0C, 0x60, 0xF0, 0x3F, 0xFC, 0x1C, 0x38, 0x00,
    0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x0E, 0x0F, 0x0C, 0x61, 0xE0, 0x3F,
    0xFC, 0x1E, 0x70, 0x00, 0x00, 0x07, 0xFF, 0xF0, 0x00, 0x00, 0x1E, 0x0F,
    0x0C, 0xE1, 0xE0, 0x3F, 0xFE, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x7F, 0x00,
    0x00, 0x00, 0x1E, 0x0F, 0x00, 0x01, 0xE0, 0x3C, 0x1F, 0x19, 0xE0, 0x00,
    0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0x80, 0x03, 0xC0, 0x3C,
    0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x3F, 0xFF,
    0x80, 0x03, 0xC0, 0x3C, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xFF, 0x80, 0x03, 0x80, 0x3C, 0x07, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x07, 0xC0, 0x07, 0x80, 0x3C,
    0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x03,
    0xC0, 0x07, 0x80, 0x3C, 0x1F, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x78, 0x03, 0xC0, 0x07, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x03, 0xE0, 0x0F, 0x00, 0x3F,
    0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x01,
    0xE0, 0x0F, 0x00, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x9E, 0x00, 0x00,
    0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7F, 0x9E, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x60, 0x3C, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x60, 0x3C, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x60, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00,
    0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7F, 0x80, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00,
    0x00, 0x0E, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x01, 0xC0, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x83, 0x80, 0x00, 0x00,
    0x04, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xFF, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00

};

// Bitmap C6s
static const unsigned char PROGMEM logo39_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x31, 0x80, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x80, 0xE0, 0x00,
    0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x31, 0x81, 0xE0, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x31, 0x81, 0xE0, 0x00, 0x00, 0x30, 0x00, 0x00,
    0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x03, 0xE0, 0xFF, 0xE1, 0xE3, 0xFF,
    0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x1F, 0xF8,
    0xFF, 0xC3, 0xC3, 0xFF, 0xE0, 0x33, 0xC0, 0x00, 0x00, 0x00, 0x7F, 0x00,
    0x00, 0x00, 0x3F, 0xFC, 0x31, 0x83, 0xC3, 0xFF, 0xF0, 0x3F, 0xE0, 0x00,
    0x00, 0x07, 0xFF, 0xF0, 0x00, 0x00, 0x7C, 0x1C, 0x73, 0x83, 0x83, 0xC1,
    0xF8, 0x3C, 0xF0, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x78, 0x04,
    0x63, 0x07, 0x83, 0xC0, 0x7C, 0x38, 0x70, 0x00, 0x00, 0x00, 0x3E, 0x00,
    0x00, 0x00, 0xF0, 0x01, 0xFF, 0xC7, 0x83, 0xC0, 0x3C, 0x30, 0x70, 0x00,
    0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0xF0, 0x01, 0xFF, 0xC7, 0x03, 0xC0,
    0x3C, 0x30, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00,
    0x63, 0x0F, 0x03, 0xC0, 0x1E, 0x30, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xF0, 0x00, 0x63, 0x0F, 0x03, 0xC0, 0x1E, 0x38, 0x70, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x63, 0x1E, 0x03, 0xC0,
    0x1E, 0x3C, 0xE0, 0x00, 0x00, 0x07, 0xFF, 0xF0, 0x00, 0x01, 0xF0, 0x00,
    0x67, 0x1E, 0x03, 0xC0, 0x1E, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xF0, 0x00, 0x00, 0x1E, 0x03, 0xC0, 0x1E, 0x33, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x3C, 0x03, 0xC0,
    0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00,
    0x00, 0x3C, 0x03, 0xC0, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF0, 0x00, 0x00, 0x38, 0x03, 0xC0, 0x3C, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x04, 0x00, 0x78, 0x03, 0xC0,
    0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x1C,
    0x00, 0x78, 0x03, 0xC1, 0xF8, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x3F, 0xFC, 0x00, 0x70, 0x03, 0xFF, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0xF0, 0x03, 0xFF,
    0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE1,
    0xF0, 0xF0, 0x03, 0xFF, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x07, 0xF0, 0xE0, 0x00, 0x00, 0x1F, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x01, 0xE0, 0x00, 0x00,
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E,
    0x01, 0xE0, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1C, 0x03, 0xC0, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x1C, 0x03, 0xC0, 0x00, 0x00,
    0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1D,
    0xE0, 0x00, 0x00, 0x00, 0x77, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x00, 0x7F, 0xE0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x38, 0x00, 0x00, 0x00,
    0x70, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C,
    0x38, 0x00, 0x00, 0x00, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1C, 0x38, 0x00, 0x00, 0x00, 0x70, 0xE0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x38, 0x00, 0x00, 0x00,
    0x70, 0xE0, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x0E,
    0x38, 0x00, 0x00, 0x00, 0x38, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00,
    0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

};

// Bitmap D6s
static const unsigned char PROGMEM logo40_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x8C, 0x07, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x8C, 0x0F, 0x00, 0x00, 0x30, 0x00, 0x00,
    0x00, 0x01, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x8C, 0x0F, 0x00,
    0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x3F, 0xF0,
    0x01, 0x8C, 0x0F, 0x0F, 0xFE, 0x30, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00,
    0x00, 0x00, 0x3F, 0xFE, 0x07, 0xFF, 0x1E, 0x1F, 0xFE, 0x33, 0xC0, 0x00,
    0x00, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0x07, 0xFE, 0x1E, 0x1F,
    0xFE, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x1F,
    0x81, 0x8C, 0x1C, 0x1E, 0x00, 0x3C, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x07, 0xC3, 0x9C, 0x3C, 0x1E, 0x00, 0x38, 0x70, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x03, 0xC3, 0x18, 0x3C, 0x1E,
    0x00, 0x30, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x03,
    0xCF, 0xFE, 0x38, 0x1E, 0x00, 0x30, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x01, 0xEF, 0xFE, 0x78, 0x1E, 0x00, 0x30, 0x70, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x01, 0xE3, 0x18, 0x78, 0x1F,
    0xFC, 0x38, 0x70, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x3C, 0x01,
    0xE3, 0x18, 0xF0, 0x1F, 0xFC, 0x3C, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x01, 0xE3, 0x18, 0xF0, 0x1F, 0xFC, 0x3F, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x01, 0xE3, 0x38, 0xF0, 0x1E,
    0x00, 0x33, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x01,
    0xE0, 0x01, 0xE0, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x03, 0xC0, 0x01, 0xE0, 0x1E, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x03, 0xC0, 0x01, 0xC0, 0x1E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x07,
    0xC0, 0x03, 0xC0, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x3C, 0x1F, 0x80, 0x03, 0xC0, 0x1E, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0x00, 0x03, 0x80, 0x1F,
    0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFE,
    0x1F, 0x07, 0x80, 0x1F, 0xFE, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xF0, 0x7F, 0x07, 0x80, 0x0F, 0xFE, 0x7F, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x07, 0x00, 0x00,
    0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xE0, 0x0F, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0xC0, 0x0F, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x01, 0xC0, 0x1E, 0x00, 0x00,
    0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0xDE, 0x1E, 0x00, 0x00, 0x01, 0xDE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x00, 0x01, 0xFF, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC3, 0x80, 0x00, 0x00,
    0x01, 0xC3, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0xC3, 0x80, 0x00, 0x00, 0x01, 0xC3, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0xC3, 0x80, 0x00, 0x00, 0x01, 0xC3, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC3, 0x80, 0x00, 0x00,
    0x01, 0xC3, 0x80, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0xE3, 0x80, 0x00, 0x00, 0x00, 0xE3, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00,
    0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00

};

// Bitmap F6s
static const unsigned char PROGMEM logo41_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x31, 0x80, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x80, 0xE0, 0x00,
    0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x31, 0x81, 0xE0, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x31, 0x81, 0xE0, 0x00, 0x00, 0x60, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF8, 0xFF, 0xE1, 0xE0, 0x0F,
    0xE0, 0x67, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC,
    0xFF, 0xC3, 0xC0, 0x3F, 0xF8, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xF8, 0x31, 0x83, 0xC0, 0xFF, 0xFC, 0x79, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x73, 0x83, 0x81, 0xF8,
    0x1C, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00,
    0x63, 0x07, 0x81, 0xE0, 0x04, 0x60, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x01, 0xFF, 0xC7, 0x83, 0xC0, 0x00, 0x60, 0xE0, 0x00,
    0x00, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x3C, 0x01, 0xFF, 0xC7, 0x03, 0xC0,
    0x00, 0x60, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00,
    0x63, 0x0F, 0x07, 0x80, 0x00, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x00, 0x63, 0x0F, 0x07, 0x80, 0x00, 0x79, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF8, 0x63, 0x1E, 0x07, 0x83,
    0xFC, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF8,
    0x67, 0x1E, 0x07, 0x83, 0xFC, 0x67, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xF8, 0x00, 0x1E, 0x07, 0x83, 0xFC, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x3C, 0x07, 0x80,
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00,
    0x00, 0x3C, 0x03, 0xC0, 0x3C, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x3C, 0x00, 0x00, 0x38, 0x03, 0xC0, 0x3C, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x78, 0x03, 0xE0,
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00,
    0x00, 0x78, 0x01, 0xF8, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x07, 0xC0, 0x70, 0x00, 0xFF, 0xFC, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x1F, 0xC0, 0xF0, 0x00, 0x7F,
    0xFC, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x3C,
    0x00, 0xF0, 0x00, 0x0F, 0xE1, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x38, 0x00, 0xE0, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x70, 0x01, 0xE0, 0x00, 0x00,
    0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70,
    0x01, 0xE0, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x77, 0x83, 0xC0, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xE3, 0xC0, 0x00, 0x00,
    0x07, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70,
    0xE0, 0x00, 0x00, 0x00, 0x07, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x07, 0x0E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xE0, 0x00, 0x00, 0x00,
    0x07, 0x0E, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x70,
    0xE0, 0x00, 0x00, 0x00, 0x07, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x38, 0xE0, 0x00, 0x00, 0x00, 0x07, 0x0E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00,
    0x03, 0x8E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
    0x80, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// Bitmap F4s
static const unsigned char PROGMEM logo42_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xC6, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xC6, 0x07, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x0F, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xC6, 0x0F, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0xC3, 0xFF, 0x8F, 0x00, 0x7F, 0x03, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xE3, 0xFF, 0x1E, 0x01, 0xFF,
    0xC3, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xC0,
    0xC6, 0x1E, 0x07, 0xFF, 0xE3, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xE0, 0x01, 0xCE, 0x1C, 0x0F, 0xC0, 0xE3, 0xCF, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x01, 0x8C, 0x3C, 0x0F, 0x00,
    0x23, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x07,
    0xFF, 0x3C, 0x1E, 0x00, 0x03, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xE0, 0x07, 0xFF, 0x38, 0x1E, 0x00, 0x03, 0x07, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x01, 0x8C, 0x78, 0x3C, 0x00,
    0x03, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x01,
    0x8C, 0x78, 0x3C, 0x00, 0x03, 0x87, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0xC1, 0x8C, 0xF0, 0x3C, 0x1F, 0xE3, 0xCE, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xC1, 0x9C, 0xF0, 0x3C, 0x1F,
    0xE3, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xC0,
    0x00, 0xF0, 0x3C, 0x1F, 0xE3, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x3C, 0x01, 0xE0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x00, 0x01, 0xE0, 0x1E, 0x01,
    0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x00,
    0x01, 0xC0, 0x1E, 0x01, 0xE0, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x01, 0xE0, 0x00, 0x03, 0xC0, 0x1F, 0x01, 0xE0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x00, 0x03, 0xC0, 0x0F, 0xC1,
    0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x00,
    0x03, 0x80, 0x07, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xE0, 0x1E, 0x07, 0x80, 0x03, 0xFF, 0xE0, 0x3C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x3E, 0x07, 0x80, 0x00, 0x7F,
    0x00, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E,
    0x07, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x6E, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xEE, 0x0F, 0x00, 0x00, 0x00,
    0x01, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCE,
    0x1E, 0x00, 0x00, 0x00, 0x01, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xCE, 0x1E, 0x00, 0x00, 0x00, 0x03, 0x9C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x8E, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x8E,
    0x00, 0x00, 0x00, 0x00, 0x07, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x06, 0x1C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x00,
    0x0F, 0xFF, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x03, 0xFF,
    0x80, 0x00, 0x00, 0x00, 0x07, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// Bitmap F4
static const unsigned char PROGMEM logo43_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x7F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0xFF, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xEF, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0xFE, 0x00, 0x03, 0xCF, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x07, 0x8F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x07, 0x8F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x0F, 0x0F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC,
    0x00, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x0F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x3C, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x0F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x7F, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x7F, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// Bitmap E4
static const unsigned char PROGMEM logo44_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
    0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
    0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
    0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
    0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x01, 0xFE, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0xFE, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x7F, 0xFF, 0xFE, 0x07, 0xDE, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF,
    0xFF, 0x07, 0x9E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0xFF, 0xFF, 0x0F, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFE, 0x0F, 0x1E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF,
    0xFE, 0x1E, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x1E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x3C, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0xF0, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xC0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

// Bitmap D4s
static const unsigned char PROGMEM logo45_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x8C, 0x07, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x8C, 0x0F, 0x00, 0x00, 0x30, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x8C, 0x0F, 0x00,
    0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF0,
    0x01, 0x8C, 0x0F, 0x0F, 0xFE, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xFE, 0x07, 0xFF, 0x1E, 0x1F, 0xFE, 0x33, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0x07, 0xFE, 0x1E, 0x1F,
    0xFE, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x1F,
    0x81, 0x8C, 0x1C, 0x1E, 0x00, 0x3C, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x07, 0xC3, 0x9C, 0x3C, 0x1E, 0x00, 0x38, 0x70, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x03, 0xC3, 0x18, 0x3C, 0x1E,
    0x00, 0x30, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x03,
    0xCF, 0xFE, 0x38, 0x1E, 0x00, 0x30, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x01, 0xEF, 0xFE, 0x78, 0x1E, 0x00, 0x30, 0x70, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x01, 0xE3, 0x18, 0x78, 0x1F,
    0xFC, 0x38, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x01,
    0xE3, 0x18, 0xF0, 0x1F, 0xFC, 0x3C, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x01, 0xE3, 0x18, 0xF0, 0x1F, 0xFC, 0x3F, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x01, 0xE3, 0x38, 0xF0, 0x1E,
    0x00, 0x33, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x01,
    0xE0, 0x01, 0xE0, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x3C, 0x03, 0xC0, 0x01, 0xE0, 0x1E, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x03, 0xC0, 0x01, 0xC0, 0x1E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x07,
    0xC0, 0x03, 0xC0, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3C, 0x1F, 0x80, 0x03, 0xC0, 0x1E, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0x00, 0x03, 0x80, 0x1F,
    0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFE,
    0x00, 0x07, 0x80, 0x1F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xF0, 0x00, 0x07, 0x80, 0x0F, 0xFE, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x3C, 0x07, 0x00, 0x00,
    0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7C, 0x0F, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xFC, 0x0F, 0x00, 0x00, 0x00, 0x0F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xDC, 0x1E, 0x00, 0x00,
    0x00, 0x0D, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0xDC, 0x1E, 0x00, 0x00, 0x00, 0x1D, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0x9C, 0x00, 0x00, 0x00, 0x00, 0x19, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x9C, 0x00, 0x00, 0x00,
    0x00, 0x39, 0xC0, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x03,
    0x1C, 0x00, 0x00, 0x00, 0x00, 0x31, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x07, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x71, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x1C, 0x00, 0x00, 0x00,
    0x00, 0x61, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x07, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xF0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1C, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

// Bitmap D4
static const unsigned char PROGMEM logo46_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF,
    0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFC, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF,
    0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xE0, 0x1F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x03, 0xFF, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x01, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xE0, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x7F, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x3F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xE0, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0xFF, 0x80, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x01, 0xFF, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xE0, 0x03, 0xFF, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x1F, 0xE0, 0x1F, 0xFE, 0x01, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF,
    0xFF, 0xFC, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xF8, 0x07, 0xDE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xF0, 0x07, 0x9E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF,
    0xFF, 0xE0, 0x0F, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xFF, 0xFF, 0x00, 0x0F, 0x1E, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xF0, 0x00, 0x1E, 0x1E,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1E, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x1E, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x1E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x78, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1E, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x1E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
    0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

// End of bitmaps to show notes etc on 128 x 64 OLED screen

// Bitmaps for Hurdy Gurdy image at startup
// Bitmap Gurdy1
static const unsigned char PROGMEM logo47_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
    0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3F, 0x9C, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF2, 0x06, 0x19, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC1,
    0x83, 0x11, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0x00, 0x41, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x27, 0xE3, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00,
    0x18, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x7F, 0xE0, 0x00, 0x20, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xFD, 0x80, 0x00, 0xC0, 0x1C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x03, 0x00, 0x01,
    0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F,
    0x80, 0x0C, 0x00, 0x06, 0x0F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xF8, 0x00, 0x10, 0x00, 0x18, 0x1C, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x60, 0x00, 0x25,
    0xD0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00,
    0x07, 0x80, 0x00, 0xCB, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x38, 0x00, 0x1E, 0x00, 0x01, 0x2C, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0xFC, 0x00, 0x06, 0xF5,
    0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC1, 0xC1,
    0xF0, 0x00, 0x19, 0x66, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0x83, 0xC7, 0xC0, 0x00, 0x24, 0x8C, 0xE0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x03, 0xCF, 0x80, 0x00, 0xCB, 0xB0,
    0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x01, 0xF2,
    0x00, 0x01, 0x6E, 0xE1, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x18, 0x00, 0x0C, 0x00, 0x06, 0xDD, 0x81, 0xC0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x30, 0x00, 0x1B, 0x77, 0x01,
    0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x40,
    0x00, 0x27, 0xD4, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x60, 0x07, 0xC0, 0x00, 0xDB, 0xD8, 0x03, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x18, 0x20, 0x01, 0x2E, 0x6E, 0x02,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x60, 0x10,
    0x06, 0xDD, 0xDF, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0xC0, 0x78, 0x08, 0x19, 0x5B, 0x1F, 0x81, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x66, 0x04, 0x35, 0x76, 0x03, 0x85,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x33, 0x02,
    0xCA, 0xD8, 0x03, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x80, 0x11, 0x81, 0x0B, 0x70, 0x06, 0x05, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x08, 0x80, 0x8C, 0xC0, 0x1C, 0x0B,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x81, 0x84, 0x40,
    0x99, 0x80, 0xF8, 0x0B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFC,
    0x00, 0x80, 0xC2, 0x20, 0x72, 0x01, 0xF0, 0x13, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x00, 0x00, 0xC0, 0x41, 0x20, 0x4C, 0x01, 0xF0, 0x12,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x01, 0xC0, 0x20, 0x90,
    0x00, 0x03, 0xC0, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00,
    0x3F, 0xE0, 0x10, 0x50, 0x20, 0x07, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x00, 0x7B, 0xF0, 0x18, 0x68, 0x20, 0x0C, 0x00, 0x44,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x51, 0xF8, 0x0C, 0x28,
    0x10, 0x18, 0x00, 0x8C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00,
    0x41, 0xE4, 0x06, 0x1C, 0x10, 0x3F, 0x01, 0x8C, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x00, 0x62, 0xF2, 0x02, 0x0C, 0x08, 0x3F, 0x01, 0x18,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x67, 0x72, 0x01, 0x04,
    0x10, 0x1F, 0x82, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00,
    0x37, 0x2D, 0x00, 0x82, 0x60, 0x1F, 0x04, 0x30, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x00, 0x1F, 0xA5, 0x00, 0xC1, 0x80, 0x00, 0x08, 0x30,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0xD5, 0x80, 0x60,
    0x00, 0x00, 0x10, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE,
    0x00, 0xD4, 0xC0, 0x00, 0x00, 0x00, 0x60, 0xC0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0xFE, 0x00, 0x78, 0xA0, 0x00, 0x00, 0x00, 0x80, 0xC0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x3A, 0x90, 0x00,
    0x00, 0x03, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE,
    0x00, 0x1E, 0x8C, 0x00, 0x00, 0x0C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0xFE, 0x00, 0x0E, 0x46, 0x00, 0x00, 0x30, 0x06, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x07, 0x41, 0x80,
    0x01, 0xC0, 0x0E, 0x00, 0x00, 0x00, 0x3F, 0xF8, 0x00, 0x01, 0xFF, 0xFE,
    0x00, 0x03, 0xC0, 0x7C, 0x7E, 0x00, 0x1E, 0x00, 0x00, 0x01, 0xC0, 0x07,
    0xE0, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0x60, 0x03, 0x80, 0x00, 0x39, 0x80,
    0x00, 0x0E, 0x00, 0x00, 0x1E, 0x03, 0xFF, 0xFE, 0x00, 0x00, 0x30, 0x00,
    0x00, 0x00, 0x60, 0x60, 0x00, 0x30, 0x00, 0x00, 0x01, 0xE7, 0xFF, 0xFE,
    0x00, 0x00, 0x18, 0x00, 0x00, 0x01, 0xC0, 0x1E, 0x00, 0xC0, 0x00, 0x00,
    0x00, 0x1F, 0xFF, 0xFE, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x07, 0x00, 0x01,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFE, 0x00, 0x00, 0x07, 0x00,
    0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFE,
    0x00, 0x00, 0x01, 0xC0, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0xF8, 0x07, 0xE0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x1F,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0xFE};

// Bitmap Gurdy2
static const unsigned char PROGMEM logo48_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0xB8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D,
    0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3F, 0x9C, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF2, 0x06, 0x19, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC1,
    0x83, 0x11, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0xF8, 0x07, 0x00, 0x41, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xE0, 0x1C, 0x00, 0x27, 0xE3, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x78, 0x00,
    0x18, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
    0x00, 0x01, 0xE0, 0x00, 0x20, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xE0, 0x00, 0x05, 0x80, 0x00, 0xC0, 0x1C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x03, 0x00, 0x01,
    0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00,
    0x00, 0x0C, 0x00, 0x06, 0x0F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xE0, 0x00, 0x40, 0x10, 0x00, 0x18, 0x1C, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x03, 0x00, 0x60, 0x00, 0x25,
    0xD1, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x04,
    0x07, 0x80, 0x00, 0xCB, 0x47, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0x18, 0x0E, 0x00, 0x01, 0x2C, 0x0D, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x20, 0x3C, 0x00, 0x06, 0xF4,
    0x35, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80,
    0xF0, 0x00, 0x19, 0x60, 0x67, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x24, 0x81, 0x83, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0x80, 0x00, 0xCB, 0x97,
    0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x12,
    0x00, 0x01, 0x6C, 0x2C, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x80, 0x00, 0x0C, 0x00, 0x06, 0xD8, 0x38, 0x0E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x30, 0x00, 0x1B, 0x70, 0xA0,
    0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x40,
    0x00, 0x27, 0xC2, 0xC0, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x06, 0x00, 0x01, 0xC0, 0x00, 0xDB, 0x83, 0x70, 0x14, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0xC0, 0x20, 0x01, 0x2E, 0x0E, 0xF8,
    0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x03, 0x00, 0x10,
    0x06, 0xDC, 0x58, 0xFC, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x18, 0x0C, 0x00, 0x08, 0x19, 0x50, 0xB0, 0x1C, 0x2C, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x18, 0x0F, 0x00, 0x04, 0x35, 0x62, 0xC0, 0x18,
    0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x0C, 0xC0, 0x02,
    0xCA, 0x8B, 0x80, 0x30, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, 0x06, 0x60, 0x01, 0x0A, 0x06, 0x00, 0xE0, 0x58, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x10, 0x02, 0x30, 0x00, 0x8C, 0xCC, 0x07, 0xC0,
    0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x21, 0x10, 0x00,
    0x80, 0x00, 0x0F, 0x80, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, 0x30, 0x88, 0x00, 0x00, 0x00, 0x06, 0x80, 0x10, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x10, 0x18, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x08, 0x24, 0x00,
    0x01, 0xC8, 0x00, 0x24, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x38, 0x04, 0x10, 0x00, 0x01, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xFC, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00,
    0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x02, 0x00, 0x00,
    0x00, 0x80, 0x1C, 0x00, 0x98, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x30, 0x01, 0x10, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3C, 0x80, 0x00, 0x20, 0x00, 0x40, 0x60, 0x02,
    0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFC, 0x5E, 0x40, 0x00, 0xA0,
    0x00, 0x40, 0xFC, 0x06, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFC,
    0xEE, 0x40, 0x10, 0xC0, 0x00, 0x20, 0xFC, 0x04, 0x60, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x00, 0xE5, 0xA0, 0x18, 0x40, 0x00, 0x40, 0x7E, 0x08,
    0x60, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0xF4, 0x80, 0x0C, 0x30,
    0x41, 0x80, 0x7C, 0x10, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE,
    0x1A, 0x80, 0x04, 0x10, 0x42, 0x00, 0x00, 0x20, 0xC0, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0xFE, 0x1A, 0x80, 0x02, 0x08, 0x20, 0x00, 0x00, 0x41,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0x0F, 0x00, 0x01, 0x04,
    0x20, 0x00, 0x01, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE,
    0x07, 0x02, 0x01, 0x82, 0x00, 0x00, 0x02, 0x03, 0x00, 0x00, 0x11, 0x20,
    0x00, 0x01, 0xFF, 0xFE, 0x03, 0x0B, 0x00, 0xC0, 0x00, 0x00, 0x0C, 0x06,
    0x00, 0x00, 0x80, 0x04, 0x80, 0x01, 0xFF, 0xFE, 0x00, 0x01, 0x80, 0x00,
    0x00, 0x00, 0x30, 0x0C, 0x00, 0x04, 0x3F, 0xF8, 0xB4, 0x01, 0xFF, 0xFE,
    0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0xC0, 0x18, 0x00, 0x21, 0xC0, 0x07,
    0xE0, 0x81, 0xFF, 0xFE, 0x00, 0x05, 0x20, 0x00, 0x00, 0x00, 0x00, 0x38,
    0x01, 0x0E, 0x04, 0x90, 0x1E, 0x13, 0xFF, 0xFE, 0x00, 0x0D, 0x18, 0x00,
    0x00, 0x00, 0x00, 0x79, 0x24, 0x30, 0x20, 0x02, 0x41, 0xE7, 0xFF, 0xFE,
    0x00, 0x0C, 0x8C, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x00, 0xC0, 0x80, 0x00,
    0x04, 0x1F, 0xFF, 0xFE, 0x00, 0x0E, 0x83, 0x00, 0x03, 0x80, 0x01, 0x83,
    0xFF, 0x08, 0x00, 0x00, 0x00, 0x47, 0xFF, 0xFE, 0x00, 0x07, 0x80, 0xF8,
    0xFC, 0x00, 0x00, 0x08, 0x00, 0x40, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFE,
    0x00, 0x00, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x01, 0x12, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0x30, 0x00,
    0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE,
    0x00, 0x00, 0x1C, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0xFE};

// Bitmap Gurdy3
static const unsigned char PROGMEM logo49_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
    0xCC, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0F, 0xC0, 0x00, 0x09, 0x8C, 0x04, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x07, 0xFF, 0x00, 0x00, 0xC2, 0x04, 0x00, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x01, 0xC1,
    0x80, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0,
    0x00, 0x00, 0x01, 0x00, 0x40, 0xA1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x27, 0xE0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x18, 0x00,
    0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00,
    0x00, 0x01, 0x80, 0x00, 0x20, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x07, 0x00, 0x02, 0x00, 0x05, 0x80, 0x00, 0x40, 0x04, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x18, 0x00, 0x03, 0x00, 0x00,
    0x01, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x38, 0x20,
    0x00, 0x0C, 0x00, 0x06, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x78, 0xC0, 0x00, 0x10, 0x00, 0x18, 0x04, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x79, 0x00, 0x00, 0x00, 0x00, 0x21,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00,
    0x03, 0x80, 0x00, 0xC1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0xC4,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x30, 0x00, 0x10, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1C, 0x00, 0x00, 0x01, 0x00, 0x00, 0x24, 0x80, 0x00, 0x78, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x07, 0x80, 0x00, 0x0B, 0x80,
    0x00, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x12,
    0x00, 0x01, 0x20, 0x00, 0x03, 0x50, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xC0, 0x00, 0x00, 0x0C, 0x00, 0x02, 0x10, 0x00, 0x06, 0x70, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x30, 0x00, 0x0A, 0x30, 0x00,
    0x18, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x40,
    0x00, 0x04, 0x40, 0x01, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x30, 0x01, 0xC0, 0x00, 0xC8, 0x00, 0x02, 0xC0, 0xE0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x01, 0x20, 0x00, 0x03,
    0x80, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x10,
    0x06, 0x90, 0x00, 0x0A, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0xC0, 0x00, 0x08, 0x19, 0x10, 0x00, 0x2C, 0x01, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x30, 0x00, 0x04, 0x35, 0x60, 0x00, 0x37,
    0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x98, 0x00, 0x00,
    0xC2, 0x80, 0x00, 0xEF, 0x81, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x8C, 0x00, 0x00, 0x00, 0x00, 0x05, 0x8F, 0xC0, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x08, 0x44, 0x00, 0x00, 0x80, 0x00, 0x0B, 0x01,
    0xC2, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x22, 0x00, 0x00,
    0x80, 0x00, 0x2C, 0x01, 0x82, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x06, 0x11, 0x00, 0x00, 0x00, 0x00, 0xB8, 0x03, 0x02, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x02, 0x09, 0x00, 0x00, 0x00, 0x00, 0x60, 0x0E,
    0x05, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x04, 0x00, 0x00,
    0x00, 0x4C, 0xC0, 0x7C, 0x05, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x09, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68,
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x20, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x80, 0x02, 0x40, 0x20, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x90, 0x00, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFC, 0x90, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xF0, 0x09, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFC,
    0x68, 0x00, 0x00, 0x00, 0x00, 0x08, 0x01, 0xC0, 0x09, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x08, 0x03, 0x00,
    0x11, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0xA0, 0x00, 0x02, 0x00,
    0x00, 0x04, 0x06, 0x00, 0x23, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE,
    0xA0, 0x00, 0x0A, 0x00, 0x00, 0x04, 0x0F, 0xC0, 0x63, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0xFE, 0xC0, 0x01, 0x0C, 0x00, 0x00, 0x02, 0x0F, 0xC0,
    0x46, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0xC0, 0x01, 0x84, 0x00,
    0x00, 0x04, 0x07, 0xE0, 0x86, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE,
    0xC0, 0x00, 0xC3, 0x04, 0x00, 0x18, 0x07, 0xC1, 0x0C, 0x00, 0x12, 0x48,
    0x00, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0x41, 0x04, 0x00, 0x20, 0x00, 0x02,
    0x0C, 0x01, 0x00, 0x01, 0x20, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0x20, 0x82,
    0x00, 0x00, 0x00, 0x04, 0x18, 0x04, 0x3F, 0xF8, 0x04, 0x01, 0xFF, 0xFE,
    0x00, 0x00, 0x10, 0x42, 0x00, 0x00, 0x00, 0x18, 0x30, 0x21, 0xC1, 0x07,
    0xE1, 0x91, 0xFF, 0xFE, 0x00, 0x20, 0x18, 0x20, 0x00, 0x00, 0x00, 0x20,
    0x38, 0x8E, 0x08, 0x58, 0x1E, 0x03, 0xFF, 0xFE, 0x00, 0xB0, 0x0C, 0x00,
    0x00, 0x00, 0x00, 0xC0, 0x62, 0x30, 0xC0, 0x02, 0x01, 0xE7, 0xFF, 0xFE,
    0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0xF0, 0xC6, 0x00, 0x00,
    0x44, 0x1F, 0xFF, 0xFE, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x01,
    0x9F, 0x10, 0x00, 0x00, 0x00, 0x87, 0xFF, 0xFE, 0x00, 0x52, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0x80, 0x40, 0x00, 0x00, 0x00, 0x23, 0xFF, 0xFE,
    0x00, 0xD1, 0x80, 0x00, 0x00, 0x00, 0x00, 0x07, 0x12, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0xFE, 0x00, 0xC8, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x0E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0xE8, 0x30, 0x00,
    0x38, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE,
    0x00, 0x78, 0x0F, 0x8F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0xFE};

// Bitmap Gurdy4
static const unsigned char PROGMEM logo50_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFC, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xD0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x03,
    0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x0C, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x07, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x08, 0x00, 0x00, 0x00, 0x40,
    0x02, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x60,
    0x00, 0x00, 0x01, 0x80, 0x01, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0xE0, 0xE0, 0x80, 0x00, 0x00, 0x06, 0x00, 0x00, 0xE7, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE3, 0x00, 0x00, 0x00, 0x18, 0x00,
    0x00, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE4, 0x00,
    0x00, 0x00, 0x60, 0x00, 0x01, 0xDC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x80, 0x00, 0x06, 0x48, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00,
    0x08, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x0C, 0x00, 0x00, 0x31, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x01,
    0x8C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x80, 0x00, 0x0F, 0x90, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x0D, 0xE0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x31,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
    0x60, 0x00, 0x01, 0xDB, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x01, 0xDC, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x07, 0xD8,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C,
    0x00, 0x00, 0x0D, 0xA0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x7D, 0xC0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0xE1, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00,
    0x00, 0x01, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x18, 0x00, 0x01, 0x00, 0x00, 0x0E, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x01, 0x80, 0x00, 0x0F, 0xA0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x01, 0x40,
    0x00, 0x3D, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x66, 0x00, 0x01, 0x20, 0x00, 0xFD, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x01, 0x10, 0x01, 0x8E, 0x00, 0x00,
    0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x80, 0x00, 0x90,
    0x07, 0xE8, 0x00, 0x00, 0x00, 0x06, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x08, 0x80, 0x00, 0x48, 0x18, 0x70, 0x00, 0x00, 0x00, 0x1A, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x84, 0x40, 0x00, 0x44, 0x3F, 0x40, 0x00, 0x00,
    0x00, 0x33, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC2, 0x20, 0x00, 0x23,
    0xC7, 0x80, 0x00, 0x00, 0x00, 0xC1, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x41, 0x20, 0x00, 0x11, 0x32, 0x00, 0x00, 0x00, 0x0B, 0x87, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x20, 0x80, 0x00, 0x09, 0x3C, 0x00, 0x00, 0x00,
    0x16, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x05,
    0x10, 0x00, 0x00, 0x00, 0x1C, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, 0x00, 0x00, 0x05, 0x60, 0x00, 0x00, 0x00, 0x50, 0x07, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x01,
    0x60, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0x00, 0x00, 0x00, 0x01, 0xB8, 0x0A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x7C, 0x0E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2C,
    0x7E, 0x06, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x58, 0x0E, 0x16, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFC,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x60, 0x0C, 0x14, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xC0,
    0x18, 0x14, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x00, 0x70, 0x2C, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x66, 0x03, 0xE0, 0x2C, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0xFE, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
    0xC0, 0x4C, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0x40, 0x08, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE4, 0x00,
    0x12, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0x08, 0x00,
    0x00, 0x00, 0x98, 0x00, 0x00, 0x04, 0x3F, 0xF8, 0x00, 0x01, 0xFF, 0xFE,
    0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x6D, 0xC0, 0x07,
    0xE0, 0x01, 0xFF, 0xFE, 0x00, 0x04, 0x30, 0x00, 0x00, 0x00, 0x40, 0x0E,
    0x00, 0x4E, 0x00, 0x00, 0x1E, 0x03, 0xFF, 0xFE, 0x00, 0x06, 0x10, 0x00,
    0x00, 0x00, 0x40, 0x18, 0x00, 0x98, 0x00, 0x00, 0x01, 0xE7, 0xFF, 0xFE,
    0x00, 0x03, 0x0C, 0x10, 0x00, 0x00, 0x20, 0x30, 0x01, 0x98, 0x00, 0x00,
    0x00, 0x1F, 0xFF, 0xFE, 0x00, 0x01, 0x04, 0x10, 0x00, 0x00, 0x20, 0x7E,
    0x03, 0x18, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFE, 0x00, 0x00, 0x82, 0x08,
    0x00, 0x00, 0x10, 0x7E, 0x02, 0x70, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFE,
    0x00, 0x00, 0x41, 0x08, 0x00, 0x00, 0x20, 0x3F, 0x06, 0x30, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0xFE, 0x00, 0x80, 0x60, 0x80, 0x00, 0x00, 0xC0, 0x3E,
    0x08, 0x60, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE, 0x02, 0xC0, 0x30, 0x00,
    0x00, 0x01, 0x00, 0x00, 0x10, 0x60, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFE,
    0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xC0, 0x00, 0x00,
    0x00, 0x01, 0xFF, 0xFE};

// Bitmap Gurdy5
static const unsigned char PROGMEM logo51_glcd_bmp[] = {
    0x00, 0xE0, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x0C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1C, 0x1C, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1F, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0xE1, 0xF2, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x3E, 0x01, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC7,
    0xC0, 0x19, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF8, 0xF8, 0x01, 0xF9, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0x00, 0x07, 0xF9, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE7, 0xC0, 0x00,
    0xE7, 0xFC, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3C, 0xF8, 0x00, 0x1C, 0x07, 0xFC, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x27, 0xDF, 0x00, 0x03, 0x80, 0x03, 0xFC, 0xE1, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7B, 0xE0, 0x00, 0x78, 0x00,
    0x03, 0xF0, 0xAF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5C,
    0x00, 0x0E, 0x00, 0x00, 0x33, 0x00, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x50, 0x01, 0xC0, 0x00, 0x03, 0x80, 0x01, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x1C, 0x00, 0x00, 0x70,
    0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29,
    0xC0, 0x00, 0x0E, 0x00, 0x0F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x28, 0x00, 0x01, 0xC0, 0x01, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x28, 0x00, 0x38, 0x00, 0x3E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28,
    0x07, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x18, 0xE0, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x3F, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x14,
    0x07, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x60, 0x00, 0x00, 0x0C, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x88, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xD0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x50, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x06, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x30, 0x00, 0x00, 0x00, 0xBB, 0x6C,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x70, 0xE0, 0x00,
    0x00, 0x00, 0x9F, 0xA4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x02, 0xC0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0xE0, 0x00, 0x00, 0x01, 0x7E, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x00, 0xE0, 0x00,
    0x00, 0x00, 0xDA, 0xFA, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x2C, 0x01, 0xC0, 0x00, 0x00, 0x01, 0xFF, 0xC2, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x37, 0x01, 0x40, 0x00, 0x00, 0x01, 0x45, 0x3E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEF, 0x81, 0xC0, 0x00,
    0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
    0x8F, 0xC0, 0xC0, 0x00, 0x00, 0x01, 0xF7, 0x32, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0B, 0x01, 0xC2, 0xC0, 0x00, 0x00, 0x01, 0x5B, 0xE6,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2C, 0x01, 0x82, 0xAA, 0xD8,
    0x00, 0x01, 0xFE, 0x7E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB8,
    0x03, 0x02, 0xC0, 0x03, 0x00, 0x01, 0xF7, 0xFA, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x60, 0x0E, 0x05, 0x80, 0x00, 0x1A, 0x03, 0x57, 0x7E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4C, 0xC0, 0x7C, 0x05, 0x80, 0x00,
    0x01, 0xA7, 0xFC, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xF8, 0x09, 0x80, 0x00, 0x00, 0x12, 0xF6, 0xFA, 0x00, 0x00, 0x40, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x68, 0x01, 0x00, 0x00, 0x00, 0x07, 0x97, 0xFC,
    0x00, 0x01, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xEF, 0x7C, 0x00, 0x21, 0x80, 0x00, 0x00, 0x00, 0x1C, 0x80,
    0x02, 0x40, 0x20, 0x00, 0x00, 0x01, 0x97, 0xF2, 0x00, 0x30, 0x80, 0x00,
    0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xAE,
    0x00, 0x18, 0x60, 0x80, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x09, 0x80, 0x00,
    0x00, 0x01, 0x8E, 0xFE};

// Bitmap Gurdy6
static const unsigned char PROGMEM logo52_glcd_bmp[] = {
    0x03, 0xC8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x13,
    0xBB, 0xBB, 0xBB, 0xBB, 0x9F, 0xE4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE4, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00,
    0x1F, 0xE7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x1F, 0xE7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE5, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0xDD, 0xDD, 0xDD, 0xB6,
    0x9F, 0xE5, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFD, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22, 0x48,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x95, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x6E, 0x3E,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C,
    0x00, 0x00, 0x92, 0x5A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3C, 0x00, 0x01, 0xD7, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x68, 0x00, 0x01, 0x45, 0x30,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xA8,
    0x00, 0x00, 0x1E, 0xEE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x38, 0x00, 0x01, 0x15, 0x22, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x18, 0x00, 0x00, 0x19, 0xE2,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xB8, 0x70,
    0x00, 0x00, 0x4C, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0x60, 0x70, 0x00, 0x01, 0x84, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x70, 0x00, 0x00, 0x57, 0x60,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x70,
    0x00, 0x06, 0x58, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x16, 0x00, 0xE0, 0x00, 0x12, 0xF0, 0x38, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x1B, 0x80, 0xA0, 0x00, 0x04, 0x81, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xC0, 0xE0,
    0x00, 0x03, 0x6E, 0x24, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x02, 0xC7, 0xE0, 0x60, 0x00, 0x00, 0x92, 0x32, 0x00, 0x02, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x05, 0x80, 0xE1, 0x60, 0x00, 0x01, 0x7D, 0xA4,
    0x00, 0x43, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0xC1, 0x40,
    0x00, 0x01, 0x0E, 0xEA};

// Bitmap Gurdy7
static const unsigned char PROGMEM logo53_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xBF, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFD, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0xBF, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xE7, 0xE7, 0x9E, 0x79, 0xCE, 0x73,
    0xFF, 0xE5, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xE7, 0xE7,
    0x9E, 0x79, 0xCE, 0x73, 0xFF, 0xE5, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xE7, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
    0xFF, 0xE7, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0xFF, 0xE7, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xE7, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
    0xFF, 0xE7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17, 0xCF, 0x9E,
    0x79, 0xE7, 0x39, 0xB3, 0xFF, 0xE4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x17, 0xCF, 0x9E, 0x79, 0xE7, 0x39, 0xB3, 0xFF, 0xE4, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x80, 0x00, 0x03, 0x00, 0x60, 0x00, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC3, 0x00, 0x61, 0xF0, 0x00, 0x00,
    0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x60, 0x00,
    0x03, 0x08, 0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x06, 0x33, 0x1F, 0x66, 0x01, 0x99, 0xE7, 0xD8, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x33, 0x36, 0x66, 0x01, 0x99, 0x8C,
    0xD8, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x33, 0x36,
    0x66, 0x79, 0x99, 0x8C, 0xCD, 0x80, 0x00, 0x00, 0x00, 0x00, 0x22, 0x48,
    0x00, 0x06, 0x33, 0x36, 0x66, 0x19, 0x99, 0x8C, 0xCD, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x95, 0x24, 0x00, 0x06, 0x33, 0x1C, 0x66, 0x19, 0x99, 0x8C,
    0xCD, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x63, 0x30,
    0x63, 0x19, 0x99, 0x8C, 0xC7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x20,
    0x00, 0x07, 0xC3, 0x1E, 0x61, 0xF0, 0xF9, 0x87, 0xC7, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x10, 0x40, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x33,
    0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x10,
    0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x04, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x10, 0x22, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x02,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x08, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x44, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
    0x00, 0x06, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1A, 0x00, 0x10, 0x80, 0x28, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6A, 0x00, 0x04, 0x81, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCE,
    0x00, 0x02, 0x48, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x06, 0x00, 0x00, 0x90, 0x02, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2E, 0x1C, 0x00, 0x00, 0x41, 0x04,
    0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x1C,
    0x00, 0x01, 0x0C, 0xAA};

// Bitmap Gurdy8
static const unsigned char PROGMEM logo54_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x7E, 0x7E, 0x79, 0xE7, 0x9C, 0xE7, 0x3F,
    0xFE, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x7E, 0x7E, 0x79,
    0xE7, 0x9C, 0xE7, 0x3F, 0xFE, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFE, 0x40, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F,
    0xFE, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3F, 0xFE, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFE, 0x78, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F,
    0xFE, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x7C, 0xF9, 0xE7,
    0x9E, 0x73, 0x9B, 0x3F, 0xFE, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x7C, 0xF9, 0xE7, 0x9E, 0x73, 0x9B, 0x3F, 0xFE, 0x58, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5B, 0xF0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
    0xFF, 0xDF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x1B, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x1C, 0x00, 0x00, 0x00,
    0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x0E, 0x00,
    0x1C, 0x07, 0xE0, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0xFF, 0x0E, 0x00, 0x1C, 0x1F, 0xF0, 0x00, 0x00, 0x03, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0xC7, 0x80, 0x00, 0x00, 0x3C, 0x10, 0x00,
    0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC3, 0xCE, 0x1F,
    0xDC, 0x38, 0x03, 0x8E, 0x76, 0x3B, 0xB8, 0x70, 0x00, 0x00, 0x00, 0x00,
    0x01, 0xC1, 0xCE, 0x7F, 0x9C, 0x70, 0x03, 0x8E, 0x7E, 0x7F, 0x9C, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x01, 0xC1, 0xCE, 0x63, 0x1C, 0x70, 0x03, 0x8E,
    0x78, 0xF7, 0x9C, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC1, 0xCE, 0x63,
    0x1C, 0x71, 0xF3, 0x8E, 0x70, 0xE3, 0x9C, 0xE0, 0x00, 0x00, 0x00, 0x00,
    0x01, 0xC1, 0xCE, 0x63, 0x1C, 0x71, 0xF3, 0x8E, 0x70, 0xE3, 0x8E, 0xC0,
    0x00, 0x00, 0x00, 0x00, 0x01, 0xC1, 0xCE, 0x7F, 0x1C, 0x70, 0x73, 0x8E,
    0x70, 0xE3, 0x8E, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC3, 0x8E, 0x7E,
    0x1C, 0x38, 0x73, 0x8E, 0x70, 0xE3, 0x86, 0xC0, 0x00, 0x00, 0x00, 0x00,
    0x01, 0xC7, 0x8E, 0x60, 0x1C, 0x3C, 0x73, 0x9E, 0x70, 0xF7, 0x87, 0xC0,
    0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x0E, 0x7F, 0x1C, 0x1F, 0xF3, 0xFE,
    0x70, 0x7F, 0x87, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x0E, 0x7F,
    0x9C, 0x07, 0xE1, 0xEE, 0x70, 0x3B, 0x83, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xE1, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE1, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0xE0,
    0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0xE0, 0x0D, 0x80, 0xC0, 0x00, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x90, 0x0D, 0x80, 0xC0, 0x00, 0x60, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x83, 0xCF, 0xC1,
    0xE7, 0x8E, 0xFE, 0xF8, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0xE6, 0x6D, 0x80, 0xCC, 0xD8, 0x66, 0xCD, 0xB0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0xF7, 0xED, 0x9C, 0xCF, 0xDC, 0x66, 0xCD,
    0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36, 0x0D, 0x80,
    0xCC, 0x0E, 0x66, 0xCC, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x36, 0x0D, 0x80, 0xCC, 0x06, 0x66, 0xCD, 0x86, 0xDB, 0x6D, 0xB6,
    0x00, 0x00, 0x00, 0x00, 0x00, 0xE3, 0xED, 0x80, 0x67, 0xDC, 0x76, 0xCC,
    0xF6, 0xDB, 0x6D, 0xB6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

// End of bitmaps for intro screen

// Bitmap Gurdy9    for screen that shows when you stop cranking
static const unsigned char PROGMEM logo55_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x1C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1B,
    0xF8, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x7F, 0x38, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE4, 0x0C, 0x33, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x83,
    0x06, 0x23, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0E, 0x00, 0x83, 0x42, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x4F, 0xC6, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00,
    0x30, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0xFF, 0xC0, 0x00, 0x40, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x7F, 0xFB, 0x00, 0x01, 0x80, 0x38, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x06, 0x00, 0x02,
    0x03, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F,
    0x00, 0x18, 0x00, 0x0C, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xF0, 0x00, 0x20, 0x00, 0x30, 0x38, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0xC0, 0x00, 0x4B,
    0xA0, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00,
    0x0F, 0x00, 0x01, 0x96, 0xE0, 0x07, 0xC0, 0x00, 0x00, 0x03, 0x00, 0x00,
    0x00, 0x00, 0x70, 0x00, 0x3C, 0x00, 0x02, 0x59, 0xE0, 0x1F, 0xE0, 0x00,
    0x00, 0x03, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x01, 0xF8, 0x00, 0x0D, 0xEB,
    0x40, 0x18, 0x20, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x03, 0x83, 0x83,
    0xE0, 0x00, 0x32, 0xCD, 0x40, 0x30, 0x0D, 0x8F, 0x8D, 0xE3, 0x1C, 0x00,
    0x00, 0x07, 0x07, 0x8F, 0x80, 0x00, 0x49, 0x19, 0xC0, 0x30, 0x0F, 0x9F,
    0xCF, 0xF3, 0x38, 0x00, 0x00, 0x0C, 0x07, 0x9F, 0x00, 0x01, 0x97, 0x60,
    0xC0, 0x30, 0x0E, 0x10, 0xCE, 0x33, 0x70, 0x00, 0x00, 0x18, 0x03, 0xE4,
    0x00, 0x02, 0xDD, 0xC3, 0x80, 0x30, 0x0C, 0x00, 0xCC, 0x33, 0xE0, 0x00,
    0x00, 0x30, 0x00, 0x18, 0x00, 0x0D, 0xBB, 0x03, 0x80, 0x30, 0x0C, 0x0F,
    0xCC, 0x33, 0xE0, 0x00, 0x00, 0x60, 0x00, 0x60, 0x00, 0x36, 0xEE, 0x03,
    0x80, 0x30, 0x0C, 0x18, 0xCC, 0x33, 0x70, 0x00, 0x00, 0x60, 0x00, 0x80,
    0x00, 0x4F, 0xA8, 0x03, 0x80, 0x18, 0x2C, 0x18, 0xCC, 0x33, 0x38, 0x00,
    0x00, 0xC0, 0x0F, 0x80, 0x01, 0xB7, 0xB0, 0x07, 0x00, 0x1F, 0xEC, 0x1F,
    0xCC, 0x33, 0x1C, 0x00, 0x00, 0x80, 0x30, 0x40, 0x02, 0x5C, 0xDC, 0x05,
    0x00, 0x07, 0xCC, 0x0E, 0xCC, 0x33, 0x0C, 0x00, 0x01, 0x80, 0xC0, 0x20,
    0x0D, 0xBB, 0xBE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x80, 0xF0, 0x10, 0x32, 0xB6, 0x3F, 0x03, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xCC, 0x08, 0x6A, 0xEC, 0x07, 0x0B,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x66, 0x05,
    0x95, 0xB0, 0x06, 0x0A, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00,
    0x01, 0x00, 0x23, 0x02, 0x16, 0xE0, 0x0C, 0x0A, 0x00, 0x00, 0x00, 0x01,
    0x80, 0x00, 0x00, 0x00, 0x01, 0x02, 0x11, 0x01, 0x19, 0x80, 0x38, 0x16,
    0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x01, 0x03, 0x08, 0x81,
    0x33, 0x01, 0xF0, 0x16, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00,
    0x01, 0x01, 0x84, 0x40, 0xE4, 0x03, 0xE0, 0x26, 0x00, 0x0F, 0x0D, 0xE1,
    0x80, 0x00, 0x00, 0x00, 0x01, 0x80, 0x82, 0x40, 0x98, 0x03, 0xE0, 0x24,
    0x00, 0x1F, 0x8F, 0xF1, 0x80, 0x00, 0x00, 0x00, 0x03, 0x80, 0x41, 0x20,
    0x00, 0x07, 0x80, 0x4C, 0x00, 0x39, 0xCE, 0x31, 0x80, 0x00, 0x00, 0x00,
    0x7F, 0xC0, 0x20, 0xA0, 0x40, 0x0E, 0x00, 0x4C, 0x00, 0x30, 0xCC, 0x31,
    0x80, 0x01, 0xF8, 0x00, 0xF7, 0xE0, 0x30, 0xD0, 0x40, 0x18, 0x00, 0x88,
    0x00, 0x30, 0xCC, 0x31, 0x80, 0x06, 0x06, 0x00, 0xA3, 0xF0, 0x18, 0x50,
    0x20, 0x30, 0x01, 0x18, 0x00, 0x30, 0xCC, 0x31, 0x80, 0x18, 0x01, 0x80,
    0x83, 0xC8, 0x0C, 0x38, 0x20, 0x7E, 0x03, 0x18, 0x00, 0x39, 0xCC, 0x30,
    0x00, 0x20, 0x00, 0x40, 0xC5, 0xE4, 0x04, 0x18, 0x10, 0x7E, 0x02, 0x30,
    0x00, 0x1F, 0x8C, 0x31, 0x80, 0x40, 0x00, 0x20, 0xCE, 0xE4, 0x02, 0x08,
    0x20, 0x3F, 0x04, 0x30, 0x00, 0x0F, 0x0C, 0x31, 0x80, 0x80, 0x00, 0x10,
    0x6E, 0x5A, 0x01, 0x04, 0xC0, 0x3E, 0x08, 0x60, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x06, 0x0C, 0x08, 0x3F, 0x4A, 0x01, 0x83, 0x00, 0x00, 0x10, 0x60,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x09, 0x12, 0x08, 0x01, 0xAB, 0x00, 0xC0,
    0x00, 0x00, 0x20, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0B, 0x16, 0x08,
    0x01, 0xA9, 0x80, 0x00, 0x00, 0x00, 0xC1, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x02, 0x06, 0x0C, 0x04, 0x00, 0xF1, 0x40, 0x00, 0x00, 0x01, 0x01, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x04, 0x00, 0x75, 0x20, 0x00,
    0x00, 0x06, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x04,
    0x00, 0x3D, 0x18, 0x00, 0x00, 0x18, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x02, 0x00, 0x00, 0x04, 0x00, 0x1C, 0x8C, 0x00, 0x00, 0x60, 0x0C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x02, 0x08, 0x02, 0x04, 0x00, 0x0E, 0x83, 0x00,
    0x03, 0x80, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x18, 0x03, 0x08,
    0x00, 0x07, 0x80, 0xF8, 0xFC, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x01, 0x08, 0x02, 0x08, 0x00, 0x00, 0xC0, 0x07, 0x00, 0x00, 0x70, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x01, 0x07, 0x1C, 0x08, 0x00, 0x00, 0x60, 0x00,
    0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xE0, 0x10,
    0x00, 0x00, 0x30, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x40, 0x00, 0x20, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x0E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x40, 0x00, 0x00, 0x0E, 0x00,
    0x00, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x01, 0x80,
    0x00, 0x00, 0x03, 0x80, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x06, 0x06, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x0F, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x3F,
    0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

// Extra note bitmaps added 27th Oct 2020

// Bitmap for A6  MIDI 93
static const unsigned char PROGMEM logo56_glcd_bmp[] = {
    0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00,
    0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
    0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
    0xBF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3F, 0x9F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x1F, 0xE0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x7F,
    0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x7F, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x0F, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
    0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFE, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC,
    0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xF0,
    0x00, 0x00, 0x01, 0xFC, 0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x03, 0xFC, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8,
    0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xF8, 0x01, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x01, 0xFE, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF,
    0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFF, 0xF0, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xC0,
    0x00, 0x7F, 0x80, 0x01, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xC0, 0x00, 0x7F, 0xC0, 0x0F, 0xFE, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC0, 0x1F,
    0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0,
    0x00, 0x3F, 0xC0, 0x3F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0xE0, 0x3F, 0x02, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x1F, 0xE0, 0x7C,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x1F, 0xE0, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x00, 0x00, 0x1F, 0xF0, 0xF8, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x7F, 0x00, 0x00, 0x0F, 0xE0, 0xF8,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xF9, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
    0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x1F, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8,
    0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xF8, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0F, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8,
    0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xF8, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C,
    0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
    0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

// Bitmap for G6#  MIDI 92
static const unsigned char PROGMEM logo57_glcd_bmp[] = {
    0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x06, 0x30, 0x01, 0xC0, 0x00, 0x30, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x30, 0x03, 0xC0,
    0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x06, 0x30, 0x03, 0xC0, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xF8, 0x06, 0x30, 0x03, 0xC7, 0xC0, 0x30, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFE, 0x1F, 0xFC, 0x07, 0x87,
    0xE0, 0x33, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF,
    0x1F, 0xF8, 0x07, 0x8F, 0xE0, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7E, 0x07, 0x06, 0x30, 0x07, 0x0F, 0xE0, 0x3C, 0xF0, 0x00,
    0x00, 0x01, 0xFF, 0xE0, 0x00, 0x00, 0x78, 0x01, 0x0E, 0x70, 0x0F, 0x0E,
    0xF0, 0x38, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00,
    0x0C, 0x60, 0x0F, 0x1E, 0xF0, 0x30, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF0, 0x00, 0x3F, 0xF8, 0x0E, 0x1C, 0x70, 0x30, 0x70, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x00, 0x3F, 0xF8, 0x1E, 0x1C,
    0x78, 0x30, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x00,
    0x0C, 0x60, 0x1E, 0x3C, 0x78, 0x38, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xE0, 0xFF, 0x0C, 0x60, 0x3C, 0x38, 0x3C, 0x3C, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0xFF, 0x0C, 0x60, 0x3C, 0x78,
    0x3C, 0x3F, 0xE0, 0x00, 0x00, 0x01, 0xFF, 0xE0, 0x00, 0x01, 0xE0, 0xFF,
    0x0C, 0x60, 0x3C, 0x78, 0x3C, 0x33, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xE0, 0x0F, 0x00, 0x00, 0x78, 0x7F, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x78, 0xFF,
    0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x0F,
    0x00, 0x00, 0x70, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF8, 0x0F, 0x00, 0x00, 0xF0, 0xE0, 0x1F, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x0F, 0x00, 0x00, 0xF1, 0xE0,
    0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF,
    0x07, 0xC0, 0xE1, 0xE0, 0x0F, 0x03, 0xE0, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x1F, 0xFF, 0x1F, 0xC1, 0xE1, 0xE0, 0x0F, 0x8F, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x3C, 0x01, 0xE1, 0xC0,
    0x07, 0x9E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x38, 0x01, 0xC0, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x70, 0x03, 0xC0, 0x00, 0x00, 0x38, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x03, 0xC0, 0x00,
    0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x77, 0x87, 0x80, 0x00, 0x00, 0x3B, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x7F, 0xE7, 0x80, 0x00, 0x00, 0x3F, 0xF0, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x70, 0xE0, 0x00, 0x00,
    0x00, 0x38, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x70, 0xE0, 0x00, 0x00, 0x00, 0x38, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x38, 0x70, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xE0, 0x00, 0x00,
    0x00, 0x38, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x38, 0xE0, 0x00, 0x00, 0x00, 0x1C, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00,
    0x00, 0x07, 0xC0, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// Bitmap for C4#  MIDI 61
static const unsigned char PROGMEM logo58_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x31, 0x80, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31, 0x80, 0x00, 0x00,
    0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x31, 0x80, 0xE0, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x31, 0x81, 0xE0, 0x00, 0x00, 0x30, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xE1, 0xE0, 0x00,
    0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE0,
    0xFF, 0xC1, 0xE3, 0xFF, 0x00, 0x33, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xF8, 0x31, 0x83, 0xC3, 0xFF, 0xE0, 0x3F, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x73, 0x83, 0xC3, 0xFF,
    0xF0, 0x3C, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x1C,
    0x63, 0x03, 0x83, 0xC1, 0xF8, 0x38, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x78, 0x05, 0xFF, 0xC7, 0x83, 0xC0, 0x7C, 0x30, 0x70, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x01, 0xFF, 0xC7, 0x83, 0xC0,
    0x3C, 0x30, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00,
    0x63, 0x07, 0x03, 0xC0, 0x3C, 0x30, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF0, 0x00, 0x63, 0x0F, 0x03, 0xC0, 0x1E, 0x38, 0x70, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x63, 0x0F, 0x03, 0xC0,
    0x1E, 0x3C, 0xE0, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0x81, 0xF0, 0x00,
    0x67, 0x1E, 0x03, 0xC0, 0x1E, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xF0, 0x00, 0x00, 0x1E, 0x03, 0xC0, 0x1E, 0x33, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x1E, 0x03, 0xC0,
    0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00,
    0x00, 0x3C, 0x03, 0xC0, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF0, 0x00, 0x00, 0x3C, 0x03, 0xC0, 0x3C, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x38, 0x03, 0xC0,
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x04,
    0x00, 0x78, 0x03, 0xC0, 0x7C, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x80, 0x7C, 0x1C, 0x00, 0x78, 0x03, 0xC1, 0xF8, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x70, 0x03, 0xFF,
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFC,
    0x00, 0xF0, 0x03, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xE0, 0x00, 0xF0, 0x03, 0xFF, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0xE0, 0x00, 0x00,
    0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xF8, 0xE0, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0xF8, 0xE0, 0x00, 0x00, 0x03, 0xF0, 0x00, 0x00,
    0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x01, 0xB8, 0xC0, 0x00, 0x00,
    0x03, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
    0xB8, 0xC0, 0x00, 0x00, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0x38, 0x00, 0x00, 0x00, 0x06, 0x70, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x38, 0x00, 0x00, 0x00,
    0x0E, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
    0x38, 0x00, 0x00, 0x00, 0x0C, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0E, 0x38, 0x00, 0x00, 0x00, 0x1C, 0x70, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x38, 0x00, 0x00, 0x00,
    0x18, 0x70, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x1F,
    0xFE, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x1F, 0xFC, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00,
    0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x38, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x07, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// Bitmap for C4  MIDI 60
static const unsigned char PROGMEM logo59_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
    0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xE0, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x80, 0x0F, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0F, 0xF8,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE,
    0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x00, 0x03, 0x00, 0x01,
    0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0x80, 0x07, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xE0, 0x3F, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, 0x07,
    0xDE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F,
    0xFF, 0xFF, 0x00, 0x07, 0x9E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0x00, 0x0F, 0x1E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFE, 0x00, 0x0F,
    0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
    0xFF, 0xF8, 0x00, 0x1E, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x1E, 0x1E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C,
    0x1E, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3C, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x1E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8,
    0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xF0, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
    0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xC0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x0F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// Bitmap for B3  MIDI 59
static const unsigned char PROGMEM logo60_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x03, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0xFF, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x7F, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0xFE, 0x00, 0xFE, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x03, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0xFF,
    0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x01, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x7F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x1F, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x01, 0xFE, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x1F, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE,
    0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFE, 0x00, 0x7F, 0xC0, 0x7F, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0xFF, 0xC1, 0xFF,
    0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xFF, 0x83, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0x03, 0x83, 0xE0, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x01, 0xFF, 0xFF, 0xFE, 0x03, 0x01,
    0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xFC, 0x00, 0x01, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x01, 0xE0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x80, 0x00, 0x07,
    0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
    0xC0, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03,
    0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

// Bitmap for A3#  MIDI 58
static const unsigned char PROGMEM logo61_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x06, 0x30, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x30, 0x0E, 0x00,
    0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x06, 0x30, 0x1E, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x06, 0x30, 0x1E, 0x00, 0x00, 0x18, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x1F, 0xFC, 0x1E, 0x3F,
    0xF0, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8,
    0x1F, 0xF8, 0x3C, 0x3F, 0xFC, 0x19, 0xE0, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x03, 0xF8, 0x06, 0x30, 0x3C, 0x3F, 0xFE, 0x1F, 0xF0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x0E, 0x70, 0x38, 0x3C,
    0x1E, 0x1E, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xBC,
    0x0C, 0x60, 0x78, 0x3C, 0x1E, 0x1C, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xBC, 0x3F, 0xF8, 0x78, 0x3C, 0x1E, 0x18, 0x38, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1C, 0x3F, 0xF8, 0x70, 0x3C,
    0x1E, 0x18, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x1E,
    0x0C, 0x60, 0xF0, 0x3C, 0x3E, 0x18, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0x1E, 0x0C, 0x60, 0xF0, 0x3F, 0xFC, 0x1C, 0x38, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0E, 0x0F, 0x0C, 0x61, 0xE0, 0x3F,
    0xFC, 0x1E, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x0F,
    0x0C, 0xE1, 0xE0, 0x3F, 0xFE, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1E, 0x0F, 0x00, 0x01, 0xE0, 0x3C, 0x1F, 0x19, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0x80, 0x03, 0xC0, 0x3C,
    0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF,
    0x80, 0x03, 0xC0, 0x3C, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xFF, 0x80, 0x03, 0x80, 0x3C, 0x07, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x07, 0xC0, 0x07, 0x80, 0x3C,
    0x0F, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x78, 0x03,
    0xC0, 0x07, 0x80, 0x3C, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x78, 0x03, 0xC0, 0x07, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x03, 0xE0, 0x0F, 0x00, 0x3F,
    0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x01,
    0xE0, 0x0F, 0x00, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7E, 0x1E, 0x00, 0x00, 0x01, 0xF8, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0xFF, 0x3C, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87, 0x3C, 0x00, 0x00,
    0x02, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x07, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7C, 0x00, 0x00, 0x00,
    0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7F, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00,
    0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x80, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x87, 0x80, 0x00, 0x00, 0x02, 0x1E, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00,
    0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7E, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

// Bitmap for A3  MIDI 57
static const unsigned char PROGMEM logo62_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F,
    0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x1F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x1F,
    0xBF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x3F, 0x9F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x1F, 0xE0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F,
    0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x7F, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x0F, 0xF0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE,
    0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x80, 0x00, 0xFE, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x07, 0xF8, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC,
    0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFC, 0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x03, 0xFC, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8,
    0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xF8, 0x01, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x03, 0xF8, 0x01, 0xFE, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF,
    0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF,
    0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x1F, 0xC0,
    0x00, 0x7F, 0x80, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xC0, 0x00, 0x7F, 0xC0, 0xFF, 0xE0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x3F, 0xC1, 0xFF,
    0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0,
    0x00, 0x3F, 0xC1, 0xC1, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0x80, 0x00, 0x3F, 0xE1, 0x80, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x1F, 0xE0, 0x00,
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80,
    0x00, 0x1F, 0xE0, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x80, 0x7F, 0x00, 0x00, 0x1F, 0xF0, 0x03, 0xE0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x0F, 0xE0, 0x7F,
    0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x81, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

// Bitmap for G3#  MIDI 56
static const unsigned char PROGMEM logo63_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0x00, 0x00,
    0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x03, 0x18, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFE, 0x1C, 0x00,
    0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0F, 0xFC, 0x3C, 0x00, 0x00, 0x67, 0x80, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x03, 0x18, 0x3C, 0x00, 0x00, 0x7F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x07, 0x38, 0x3C, 0x07,
    0xC0, 0x79, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFE,
    0x06, 0x30, 0x78, 0x07, 0xE0, 0x70, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xFF, 0x1F, 0xFC, 0x78, 0x0F, 0xE0, 0x60, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x07, 0x1F, 0xFC, 0x70, 0x0F,
    0xE0, 0x60, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x01,
    0x06, 0x30, 0xF0, 0x0E, 0xF0, 0x60, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF0, 0x00, 0x06, 0x30, 0xF0, 0x1E, 0xF0, 0x70, 0xE0, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xF0, 0x00, 0x06, 0x30, 0xE0, 0x1C,
    0x70, 0x79, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x00,
    0x06, 0x71, 0xE0, 0x1C, 0x78, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xE0, 0x00, 0x00, 0x01, 0xE0, 0x3C, 0x78, 0x67, 0x80, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0xFF, 0x00, 0x03, 0xC0, 0x38,
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0xFF,
    0x00, 0x03, 0xC0, 0x78, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x01, 0xE0, 0xFF, 0x00, 0x03, 0xC0, 0x78, 0x3C, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x0F, 0x00, 0x07, 0x80, 0x7F,
    0xFE, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0xF0, 0x0F,
    0x00, 0x07, 0x80, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0xF0, 0x0F, 0x00, 0x07, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x0F, 0x00, 0x0F, 0x00, 0xE0,
    0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x0F,
    0x00, 0x0F, 0x01, 0xE0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xFF, 0x00, 0x0E, 0x01, 0xE0, 0x0F, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0x00, 0x1E, 0x01, 0xE0,
    0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8,
    0x00, 0x1E, 0x01, 0xC0, 0x07, 0x80, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x3C, 0x00, 0x00,
    0x00, 0x0F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
    0xFC, 0x3C, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x02, 0x1C, 0x78, 0x00, 0x00, 0x00, 0x10, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x78, 0x00, 0x00,
    0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3C, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00,
    0x00, 0x07, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x00,
    0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
    0x1E, 0x00, 0x00, 0x00, 0x00, 0x10, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF8, 0x00, 0x00, 0x00,
    0x00, 0x0F, 0xC0, 0x00, 0x00, 0x07, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00};

// Bitmap for G3  MIDI 55
static const unsigned char PROGMEM logo64_glcd_bmp[] = {
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFE, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F,
    0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF,
    0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x01, 0xFF, 0xC0, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0x00, 0x03, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFE,
    0x00, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x3F, 0xC0,
    0x1F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xC0, 0x1F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x1F, 0xFF, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0,
    0x1F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0xC0, 0x1F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x1F, 0xFF, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0,
    0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFF,
    0xFF, 0x00, 0x3F, 0xC0, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0,
    0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x1F, 0xE0, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x1F, 0xC0, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0,
    0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0F, 0xF8, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x07, 0xFC, 0x00, 0x1F, 0xC0, 0x7F,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF,
    0x00, 0x1F, 0xC1, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0xFF, 0xC0, 0x7F, 0xC3, 0xFF, 0xC0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xC3, 0x83,
    0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
    0xFF, 0xFF, 0xC3, 0x01, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xC0, 0x01, 0xE0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0x80, 0x01,
    0xE0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x07,
    0xFF, 0xFE, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xFF, 0xE0, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
    0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xF0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x03, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xE0, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF,
    0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x03, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  SONG LIST FOR DEMO MODE
// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Each block of 4
// characters represents a note. The first 2 digits are the MIDI code for the
// note, e.g. G4 would be 67.  NOTE: Silence is represented by 00 The next 2
// digits represent how long the note or silent pause sounds for on a scale of 1
// to 16.
//  16 is a whole note, 8 is a half note, 4 is a quarter note, 2 is an eighth
//  note and 1 is a sixteenth note in terms of duration. After each note there
//  is a space or a "|" symbol where the "|" represents the end of each bar. The
//  software plays the sequence of notes in each string until it reaches the end
//  where there are some X symbols which tell it that it has reached the end of
//  the song being played.

// 1 The Congress (reel)
const char signMessage1[] PROGMEM = {
    "7602 6902 6902 6702 6904 7102 7402|7602 8102 8102 7802 7902 7602 7402 "
    "7902|7602 6902 7202 6902 7602 6902 7202 6902|7102 6702 6702 6902 7102 "
    "7402 7602 7902|7602 6902 6902 6702 6904 7102 7402|7602 8102 8102 7802 "
    "7902 7602 7402 7102|7202 7102 7202 7402 7602 7902 7602 7402|7202 6902 "
    "7102 6702 6904 7102 7402|7602 6902 6902 6702 6904 7102 7402|7602 8102 "
    "8102 7802 7902 7602 7402 7902|7602 6902 7202 6902 7602 6902 7202 "
    "6902|7102 6702 6702 6902 7102 7402 7602 7902|7602 6902 6902 6702 6904 "
    "7102 7402|7602 8102 8102 7802 7902 7602 7402 7102|7202 7102 7202 7402 "
    "7602 7902 7602 7402|7202 6902 7102 6702 6904 7102 7402|7602 8102 8102 "
    "7902 8102 8302 8102 7902|7602 8102 8102 7902 7602 7902 7102 7902|7602 "
    "7902 7102 7902 7602 7902 7102 7902|7602 8102 8102 7802 7902 7602 7102 "
    "7902|7602 8102 8102 7902 8104 8102 7902|7602 8102 8102 7802 7902 7602 "
    "7402 7102|7204 7202 7402 7604 7602 7402|7202 6902 7102 6702 6904 7102 "
    "7402|7602 8102 8102 7902 8102 8302 8102 7902|7602 8102 8102 7902 7602 "
    "7902 7102 7902|7602 7902 7102 7902 7602 7902 7102 7902|7602 8102 8102 "
    "7802 7902 7602 7102 7902|7602 8102 8102 7902 8104 8102 7902|7602 8102 "
    "8102 7802 7902 7602 7402 7102|7204 7202 7402 7604 7602 7402|7202 6902 "
    "7102 6702 6908|XXXXXXXXXXXXXXXXXXXXX"};

// 2 The Gravel Walks (reel)
// const char signMessage2[] PROGMEM  = {"6904 7602 6902 7202 7102 6902 7602
// 6902|6904 7602 6902 7102 6902 6702 7102|6904 7602 6902 7102 7202 7402 7602
// 7802|7902 7602 7402 7202 7102 6902 6702 7102|6904 7602 6902 7202 7102 6902
// 7602 6902|6904 7602 6902 7102 6902 6702 7102|6904 7602 6902 7102 7202 7402
// 7602 7802|7902 7602 7402 7202 7102 6902 6702 7102|6904 8102 6902 7902 6902
// 7802 6902|6904 7602 6902 7102 6902 6702 7102|6904 8102 6902 7902 6902 7802
// 6902|7902 7602 7402 7202 7102 6902 6702 7102|6904 8102 6902 7702 6902 7802
// 6902|6904 7602 6902 7102 6902 6702 7102|6902 7102 7202 7402 7602 7802 7902
// 8102|7902 7602 7402 7202 7102 6902 6702 7102|7202 7102 6902 7102 6702 6904
// 6902 7102|7202 6902 6902 7402 7102 6902 6702 7102|7202 7102 6902 7102 6702
// 6902 7102 7202 7402|7602 7802 7902 7602 7402 7102 6702 7102|7202 7102 6902
// 7102 6702 6904 6902 7102|7202 6902 6902 7402 7102 6902 6702 7102|7202 7102
// 6902 7102 6702 6902 7102 7202 7402|7602 7802 7902 7602 7402 7102 6702
// 7102|7204 7902 7202 8102 7202 7902 7202|7204 7902 7202 7102 6902 6702
// 7102|7204 7902 7202 8102 7202 7902 8102|7902 7602 7402 7202 7102 6902 6702
// 7102|7204 7902 7202 8102 7202 7902 7202|7204 7902 7202 7102 6902 6702
// 7102|6902 7102 7202 7402 7602 7702 7902 8102|7902 7602 7402 7202 7102 6902
// 6702 7102|7204 7902 7202 8102 7202 7902 7202|7204 7902 7202 7102 6902 6702
// 7102|7204 7902 7202 8102 7202 7902 8102|7902 7602 7402 7202 7102 6902 6702
// 7102|7204 7902 7202 8102 7202 7902 7202|7204 7902 7202 7102 6902 6702
// 7102|6902 7102 7202 7402 7602 7702 7902 8102|7902 7602 7402 7202 7102 6902
// 6702 7102XXXXXXXXXXXXXXXXXXX"};
const char signMessage2[] PROGMEM = {
    "6904 7602 6902 7202 7102 6902 7602 6902|6904 7602 6902 7102 6902 6702 "
    "7102|6904 7602 6902 7102 7202 7402 7602 7802|7902 7602 7402 7202 7102 "
    "6902 6702 7102|6904 7602 6902 7202 7102 6902 7602 6902|6904 7602 6902 "
    "7102 6902 6702 7102|6904 7602 6902 7102 7202 7402 7602 7802|7902 7602 "
    "7402 7202 7102 6902 6702 7102|6904 8102 6902 7902 6902 7802 6902|6904 "
    "7602 6902 7102 6902 6702 7102|6904 8102 6902 7902 6902 7802 6902|7902 "
    "7602 7402 7202 7102 6902 6702 7102|6904 8102 6902 7702 6902 7802 "
    "6902|6904 7602 6902 7102 6902 6702 7102|6902 7102 7202 7402 7602 7802 "
    "7902 8102|7902 7602 7402 7202 7102 6902 6702 7102|7202 7102 6902 7102 "
    "6702 6904 6902 7102|7202 6902 6902 7402 7102 6902 6702 7102|7202 7102 "
    "6902 7102 6702 6902 7102 7202 7402|7602 7802 7902 7602 7402 7102 6702 "
    "7102|7202 7102 6902 7102 6702 6904 6902 7102|7202 6902 6902 7402 7102 "
    "6902 6702 7102|7202 7102 6902 7102 6702 6902 7102 7202 7402|7602 7802 "
    "7902 7602 7402 7102 6702 7102|7204 7902 7202 8102 7202 7902 7202|7204 "
    "7902 7202 7102 6902 6702 7102|7204 7902 7202 8102 7202 7902 8102|7902 "
    "7602 7402 7202 7102 6902 6702 7102|7204 7902 7202 8102 7202 7902 "
    "7202|7204 7902 7202 7102 6902 6702 7102|6902 7102 7202 7402 7602 7702 "
    "7902 8102|7902 7602 7402 7202 7102 6902 6702 7102|7204 7902 7202 8102 "
    "7202 7902 7202|7204 7902 7202 7102 6902 6702 7102|7204 7902 7202 8102 "
    "7202 7902 8102|7902 7602 7402 7202 7102 6902 6702 7102|7204 7902 7202 "
    "8102 7202 7902 7202|7204 7902 7202 7102 6902 6702 7102|6902 7102 7202 "
    "7402 7602 7702 7902 8102|7902 7602 7402 7202 7102 6902 6708 "
    "XXXXXXXXXXXXXXXXXXX"};

// 3 La Jument de Michao
const char signMessage3[] PROGMEM = {
    "7401 7202 7102|6903 7101 6902 6702 6904 7402 7201 7101|6901 6901 6901 "
    "7101 6902 6702 6903 7401 7202 7102|6903 7101 6902 6702 6904 7402 7201 "
    "7101|6901 6901 6901 7101 6902 6702 6904 6902 6901 6901|6902 6901 7101 "
    "7201 7201 7101 6901 6702 6702 7202 7101 7201|7401 7401 7201 7101 6902 "
    "6702 6904 6902 6901 6901|6902 6901 7101 7201 7201 7101 6901 6702 6702 "
    "7202 7101 7201|7401 7401 7201 7101 6902 6702 6903 7401 7202 7102|6903 "
    "7101 6902 6702 6903 6901 6901 6701 6901 7101|7202 7102 6901 6901 6901 "
    "6701 6903 6901 6901 6901 6901 6901|6902 6902 6901 7101 7201 6901 6702 "
    "6702 7201 7201 7101 7201|7402 7402 6901 6901 6901 6701 6903 6901 6901 "
    "6901 6901 6901|6902 6902 6901 7101 7201 6901 6702 6702 7201 7201 7101 "
    "7201|7402 7402 6901 6901 6901 6701 6903 6901 7402 7202|6901 6901 6901 "
    "6901 7402 7202 7103 7101 6901 6901 6901 7101|7202 7102 6901 6901 6901 "
    "6701 6903 6901 7402 7202|6901 6901 6901 6901 7402 7202 7103 7101 6901 "
    "6901 6901 7101|7202 7102 6901 6901 6901 6701 6908|XXXXXXXXXXXXX"};

// 4 Brenda Stubbert's (reel)
const char signMessage4[] PROGMEM = {
    "7102|6901 6901 6902 7102|6902 6702 6902 6902 7102 6901 6901 6902 7102 "
    "6902 7602 7402 7402 7602|6704 7102 6902 7102 6702 6702 7102|7204 7102 "
    "6902 7102 6702 6702 7102|6901 6901 6902 7102 6902 6702 6902 6902 "
    "7102|6901 6901 6902 7102 6902 7602 7402 7402 8102|7902 7602 7402 7102 "
    "6702 6902 7102 7402|7401 7603 7402 7102 7602 6902 6902|7102|6901 6901 "
    "6902 7102|6902 6702 6902 6902 7102 6901 6901 6902 7102 6902 7602 7402 "
    "7402 7602|6704 7102 6902 7102 6702 6702 7102|7204 7102 6902 7102 6702 "
    "6702 7102|6901 6901 6902 7102 6902 6702 6902 6902 7102|6901 6901 6902 "
    "7102 6902 7602 7402 7402 8102|7902 7602 7402 7102 6702 6902 7102 "
    "7402|7401 7603 7402 7102 7602 6902 6902|7102|6901 6901 6902 8104 6901 "
    "6901 6902 7904|6902 8102 7902 7602 8102 7902 7602 7902|6704 7102 6902 "
    "7102 6702 6702 7102|7204 7102 6902 7102 6702 6702 7102|6901 6901 6902 "
    "8104 6901 6901 6902 7904|6902 8102 7902 7602 8102 7902 7602 8102|7902 "
    "7602 7402 7102 6702 6902 7102 7402|7101 7603 7402 7102 7602 6902 "
    "6902|7102|6901 6901 6902 8104 6901 6901 6902 7904|6902 8102 7902 7602 "
    "8102 7902 7602 7902|6704 7102 6902 7102 6702 6702 7102|7204 7102 6902 "
    "7102 6702 6702 7102|6901 6901 6902 8104 6901 6901 6902 7904|6902 8102 "
    "7902 7602 8102 7902 7602 8102|7902 7602 7402 7102 6702 6902 7102 "
    "7402|7101 7603 7402 7102 7602 6902 6902|7102|6901 6901 6902 8104 6901 "
    "6901 6902 7904|6902 8102 7902 7602 8102 7902 7602 7902|6704 7102 6902 "
    "7102 6702 6702 7102|7204 7102 6902 7102 6702 6702 7102|6901 6901 6902 "
    "7102 6902 6702 6902 6902 7102|6901 6901 6902 7102 6902 7602 7402 7402 "
    "8102|7902 7602 7402 7102 6702 6902 7102 7402|7401 7603 7402 7102 7602 "
    "6902 6902 XXXXXXXXXXX"};

// 5 Father Kelly (reel)
const char signMessage5[] PROGMEM = {
    "7402 7602|7804 7402 7802 7602 7402 7102 7402|6902 7402 7402 7302 7402 "
    "7602 7802 8102|7904 7602 7802 7902 7802 7602 7402|7102 7602 7602 7402 "
    "7602 7802 7902 7602|7804 7402 7802 7602 7402 7102 7402|6902 7402 7402 "
    "7302 7402 7602 7802 7902|8104 7802 8102 8104 7802 8102|7902 7602 7302 "
    "7602 7404|7402 7602|7804 7402 7802 7602 7402 7102 7402|6902 7402 7402 "
    "7302 7402 7602 7802 8102|7904 7602 7802 7902 7802 7602 7402|7102 7602 "
    "7602 7402 7602 7802 7902 7602|7804 7402 7802 7602 7402 7102 7402|6902 "
    "7402 7402 7302 7402 7602 7802 7902|8104 7802 8102 8104 7802 8102|7902 "
    "7602 7302 7602 7404|7802 7902|8104 7802 8102 7402 8102 7802 8102|8104 "
    "7802 8102 7402 8102 7802 8102|7802 7102 7102 7102 7602 7402 7302 "
    "7102|6902 7102 7302 7402 7602 7402 7302 7102|8104 7802 8102 7402 8102 "
    "7802 8102|8104 7802 8102 7402 8102 7802 8102|7904 7602 7902 7804 7402 "
    "7802|7602 7402 7302 7602 7404|7802 7902|8104 7802 8102 7402 8102 7802 "
    "8102|8104 7802 8102 7402 8102 7802 8102|7802 7102 7102 7102 7602 7402 "
    "7302 7102|6902 7102 7302 7402 7602 7402 7302 7102|8104 7802 8102 7402 "
    "8102 7802 8102|8104 7802 8102 7402 8102 7802 8102|7904 7602 7902 7804 "
    "7402 7802|7602 7402 7302 7602 7404|XXXXXXXXXXXXXXXXXXXXX"};

// 6 The High (reel)
const char signMessage6[] PROGMEM = {
    "8104 7802 8102 7602 7302 6904|7302 6902 7602 6902 7802 6902 7602 "
    "6902|8104 7802 8102 7602 7302 6904|7102 7302 7402 7302 7102 6702 "
    "6704|8104 7802 8102 7602 7302 6904|7302 7402 7602 7802 7904 7802 "
    "7902|8102 7802 7902 7602 7802 7402 7602 7302|7102 7302 7402 7102 7102 "
    "6702 6704|8104 7802 8102 7602 7302 6904|7302 6902 7602 6902 7802 6902 "
    "7602 6902|8104 7802 8102 7602 7302 6904|7102 7302 7402 7302 7102 6702 "
    "6704|8104 7802 8102 7602 7302 6904|7302 7402 7602 7802 7904 7802 "
    "7902|8102 7802 7902 7602 7802 7402 7602 7302|7102 7302 7402 7102 7102 "
    "6702 6704|7302 6902 7602 6902 7802 6902 7602 6902|7302 6902 8102 7802 "
    "7602 7302 6904|7302 6902 7602 6902 7802 6902 7602 6902|7102 7302 7402 "
    "7302 7102 6702 6704|7302 6902 7602 6902 7802 6902 7602 6902|7302 7402 "
    "7602 7802 7904 7802 7902|8102 7802 7902 7602 7802 7402 7602 7302|7102 "
    "7302 7402 7302 7102 6702 6704|7302 6902 7602 6902 7802 6902 7602 "
    "6902|7302 6902 8102 7802 7602 7302 6904|7302 6902 7602 6902 7802 6902 "
    "7602 6902|7102 7302 7402 7302 7102 6702 6704|7302 6902 7602 6902 7802 "
    "6902 7602 6902|7302 7402 7602 7802 7904 7802 7902|8102 7802 7902 7602 "
    "7802 7402 7602 7302|7102 7302 7402 7302 7102 6702 "
    "6704|XXXXXXXXXXXXXXXXXXXXX"};

// 7 Medieval (Andrey Vinodgradov)
const char signMessage7[] PROGMEM = {
    "7402 7401 7501 7402 7002 6704 7004|7202 7201 7401 7202 7002 7202 "
    "7502|7401 7501 7401 7901 7402 7002 6704 7004|7202 7201 7401 7202 7002 "
    "6802 6702|6708 6702 6702 7901 7408 7402 7402|6708 6702 6701 7901|7408 "
    "7402 7202|6708 6702 6701 7901|7408 7402 7202|7402 7401 7501 7402 7002 "
    "6704 7004|7202 7201 7401 7202 7002 7202 7502|7401 7501 7401 7901 7402 "
    "7002 6704 7004|7202 7201 7401 7202 7002 6802 6702|6708 6702 6702 7901 "
    "7408 7402 7402|6708 6702 6701 7901|7408 7402 7202|6708 6702 6701 "
    "7901|7408 7402 7202|7202 7003 6901 7002 7202 7001 6901 7001 7201 6708 "
    "6704|7002 6802 6702 6902 7002 6904|6709|7202 7003 6901 7002 7202 7001 "
    "6901 7001 7201 6708 6704|7002 6802 6702 6902 7002 6904|6709|7402 7401 "
    "7501 7402 7002 6702 7002|7202 7201 7401 7202 7002 7202 7502|7401 7501 "
    "7401 7901 7402 7002 6702 7002|7202 7201 7401 7202 7002 6802 6702|6708 "
    "6702 6701 7901|7408 7402 7202|6708 6702 6701 7901|7408 7402 7202|6708 "
    "6702 6701 7901|7408 7402 7202|XXXXXXXXXXXXXXXXXXXXX"};

// 8 She sells sanctuary (The Cult) (needs a bit more work but getting there,
// feel free to improve it)
// const char signMessage8[] PROGMEM  = {"7402 8102 7402 8102 7902 7402 7902
// 7802|7402 7802 7402 0002 7202 7402 7202 7402|7402 0002 7402 7202 0002 7202
// 6904|0016|7402 8102 7402 8102 7902 7402 7902 8302|7402 8302 8102 7402 7902
// 8102 7902 8102|8102 7402 8102 7902 7402 7902 8304|0016|8106 7906 7804|7902
// 7802 7404 7404 7402 7402|7206 7406 6904|7902 7802 7404 7408|8106 7906
// 7804|7902 7802 7404 7404 7402 7402|7206 7406 6904|9102 9002 8604 8604 7402
// 7602|8104 8102 7904 7804 7402|7412 8102 7402|7204 7202 7202 7201 7407|7402
// 6702 6702 7402 6702 6702 7402 7602|8102 8104 7904 7802 7802 7402|7412 8102
// 7402|7202 7202 7202 7201 7404 7402 7202|7804 7802 7802 7408|8104 8102 8104
// 8102 8104|8102 8102 8304 8104 8102 8102|8102 7902 7902 7904 7902 7902
// 7902|7902 7802 7804 7802 7902 7902 7902|7902 8102 8102 8104 8102 8104|8102
// 8102 8304 8104 8102 8102|8102 7902 7902 7904 7902 7902 7902|7902 7802 7404
// 7402 7602 7402 7602|8102 8102 7902 7804 7906|7402 8102 7402 8102 7402 8102
// 7402|7202 7202 7202 7408 7202|7402 6702 6702 7402 6702 6702 7402 7602|8102
// 7902 7902 7804 7406|7402 8102 7402 7402 8102 7402 8102 7402|7202 7202 7202
// 7406 7202 7202|7804 7802 7404 0002 7802 8102|8112 8602 7402|8602 7402 8602
// 7402 8602 7402 7402 7802|8106 7904 7802 7404|7402 7402 6702 7402 6702 7402
// 7802|8102 7402 7802 8104 8102 7404|8602 7402 8602 7402 8602 7402 7402
// 7802|8106 7904 7802 7404|7404 7402 6702 7402 6702 7902 6702|8106 7906
// 7804|7902 7802 7404 7404 7402 7402|7206 7406 6904|7902 7802 7404 7408|8106
// 7906 7804|7902 7802 7404 7404 7402 7402|7206 7406 6904|9102 9002 8604 8604
// 7402 7602|8104 8102 7904 7804 7402|7412 8102 7402|7204 7202 7202 7201
// 7407|7402 6702 6702 7402 6702 6702 7402 7602|8102 8104 7904 7802 7802
// 7402|7412 8102 7402|7202 7202 7202 7201 7404 7402 7202|7804 7802 7802
// 7408|8104 8102 8104 8102 8104|8102 8102 8304 8104 8102 8102|8102 7902 7902
// 7904 7902 7902 7902|7902 7802 7804 7802 7902 7902 7902|7902 8102 8102 8104
// 8102 8104|8102 8102 8304 8104 8102 8102|8102 7902 7902 7904 7902 7902
// 7902|7902 7802 7404 7402 7602 7402 7602|8102 8102 7902 7804 7906|7402 8102
// 7402 8102 7402 8102 7402|7202 7202 7202 7408 7202|7402 6702 6702 7402 6702
// 6702 7402 7602|8102 7902 7902 7804 7406|7402 8102 7402 7402 8102 7402 8102
// 7402|7202 7202 7202 7406 7202 7202|7804 7802 7404 0002 7802 8102|8106 7904
// 7804 7918|7904 7802 7904 7802 7408|7402 6702 6702 7402 7402|8106 7904 7804
// 7418|7904 7802 7904 7801 7905|7902 7408 6702 7802 8102|8112 8602 7402|8602
// 7402 8602 7402 8602 7402 7402 7802|8106 7904 7802 7404|7404 7402 6702 7402
// 6702 7402 7802|8102 7402 7802 8106 8602 7402|8602 7402 8602 7402 8602 7402
// 8602 7402|8106 7904 7802 7404|7404 7402 6702 7402 6702 7402 7802|8102 7402
// 7802 8104 7402 7802 8102|8602 7402 8602 7402 8602 7402 8602 7402|8106 7904
// 7802 7404|7404 7402 6702 7402 6702 7402 7802|8102 7402 7802 8104 7402 7802
// 8102|8102 7402 7802 8104 7404 7402|8106 7904 7802 7404|7404 7402 6702 7402
// 6702 7902 6702|7402 8102 7402 8102 7902 7402 7902 7802|7402 6702 7402 6702
// 7402 6702 7402 6702|7816|7802 7402 6702 7402 7802 7902 6902 6902|7402 8102
// 7402 8102 7902 7402 7902 8302|7402 8302 8102 7402 7902 8102 7902 8102|8102
// 7402 8102 7902 7402 7902 8302|0016|8102 7902 7802 8102 7902 7802 8102
// 7902|7802 8102 7902 7802 8102 7902 7802|8102 7902 7402 8102 7902 7402 8102
// 7902|7402 7902 7904 7904 7402 7802|8102 7402 7802 8104 7402 7802 8102|8602
// 7402 8602 7402 8602 7402 8602 7402|8106 7904 7802 7404|7404 6702 6702 7402
// 6702 7902 7402|8108 8602 7402 8602 7402|8602 7402 8602 7402 8602 7402 8602
// 7402|8106 7904 7802 7404|7404 7402 6702 7402 6702 7402 7802|8102 7402 7802
// 8104 7402 7802 8102|8602 7402 8602 7402 8602 7402 8602 7402|8106 7904 7802
// 7404|7404 7402 6702 7402 6702 7902 6702|7402 8102 7402 8102 7902 7402 7902
// 7802|7402 7802 7402 7402 7201 7402 7202 7402|7402 7202 7402 7202 7202 7202
// 6904|6702 7402 6702 6702 7402 6702 6702 6702|8106 7906 7804|7902 7802 7404
// 7404 7402 7402|7206 7406 6904|7902 7802 7404 8104 7904|7402 8102 0002 8102
// 7902 0002 7902 7802|0002 7802 7402 0002 7202 7402 7202 7402|7402 0002 7402
// 7202 0002 7202 6920XXXXXXXXXXXXXXXXXXXXX"};
const char signMessage8[] PROGMEM = {
    "6202 8102 6202 8102 7902 6202 7902 7802|6202 7802 7402 6202 7202 7402 "
    "7202 7402|7402 6202 7402 7202 6202 7202 6904|0016|6202 8102 6202 8102 "
    "7902 6202 7902 8302|6202 8302 8102 6202 7902 8102 7902 8102|8102 6202 "
    "8102 7902 6202 7902 8302|0016|8106 7906 7804|7902 7802 7404 7404 7402 "
    "7402|7206 7406 6904|7902 7802 7404 7408|8106 7906 7804|7902 7802 7404 "
    "7404 7402 7402|7206 7406 6904|7902 7802 7404 7404 6202 6402|6904 6902 "
    "6704 6504 6214 6902 6202|6004 6002 6002 6208|7402 6702 6702 7402 6702 "
    "6702 6202 6402|6902 6904 6704 6602 6602 6214 6902 6202|6002 6002 6002 "
    "6206 6202 6002|6604 6602 6602 6208|8104 8102 8104 8102 8104|8102 8102 "
    "8304 8104 8102 8102|8102 7902 7902 7904 7902 7902 7902|7902 7802 7804 "
    "7802 7902 7902 7902|7902 8102 8102 8104 8102 8104|8102 8102 8304 8104 "
    "8102 8102|8102 7902 7902 7904 7902 7902 7902|7902 7802 7404 7402 7602 "
    "0002 6402|8102 8102 7902 7804 7906|6202 6902 6202 6202 6902 6202 6902 "
    "6202|7202 7202 7202 7408 6002|7402 6702 6702 7402 6702 6702 7402 "
    "7602|8102 7902 7902 7804 7406|7402 8102 7402 7402 8102 7402 8102 "
    "7402|7202 7202 7202 7406 7302 7202|7804 7802 7404 6702 7802 8102|8112 "
    "8102 7402|8102 7402 8102 7402 8102 7402 7402 7802|8106 7904 7802 "
    "7404|7404 7102 6702 7102 6702 7402 7802|8102 7402 7802 8104 8102 "
    "7404|8102 7402 8102 7402 8102 7402 7402 7802|8106 7904 7802 7408 7102 "
    "6702 7102 6702 7902 6702|8106 7906 7804|7902 7802 7404 7404 7402 "
    "7402|7206 7406 6904|7902 7802 7404 7408|8106 7906 7804|7902 7802 7404 "
    "7404 7402 7402|7206 7406 6904|7902 7802 7404 7404 6202 6402|6904 6902 "
    "6704 6504 6214 6902 6202|6004 6002 6002 6208|7402 6702 6702 7402 6702 "
    "6702 6202 6402|6902 6904 6704 6602 6602 6214 6902 6202|6002 6002 6002 "
    "6206 6202 6102|6604 6602 6602 6208|8104 8102 8104 8102 8104|8102 8102 "
    "8304 8104 8102 8102|8102 7902 7902 7904 7902 7902 7902|7902 7802 7804 "
    "7802 7902 7902 7902|7902 8102 8102 8104 8102 8104|8102 8102 8304 8104 "
    "8102 8102|8102 7902 7902 7904 7902 7902 7902|7902 7802 7404 7402 7602 "
    "0002 6402|8102 8102 7902 7804 7906|6202 6902 6202 6202 6902 6202 6902 "
    "6202|7202 7202 7202 7408 6002|7402 6702 6702 7402 6702 6702 7402 "
    "7602|8102 7902 7902 7804 7406|7402 8102 7402 7402 8102 7402 8102 "
    "7402|7202 7202 7202 7406 7302 7302|7804 7802 7404 6702 7802 8102|8106 "
    "7904 7804 7902|7916|7904 7802 7904 7804 7408 7402 6702 6702 7402 "
    "7402|8106 7904 7804 7402|7416|7904 7802 7904 7908 7408 6702 7802 8114 "
    "8102 7402|8102 7402 8102 7402 8102 7402 7402 7802|8106 7904 7802 "
    "7404|7404 0004 7402 6702 7402 7802|8102 7402 7802 8106 0002 8102 "
    "7402|8102 7402 8102 7402 8102 7402 8102 7402|8106 7904 7802 7404|7404 "
    "7102 6702 7102 6702 7402 7802|8102 7402 7802 8104 7402 7802 8102|8102 "
    "7102 8102 7102 8102 7102 8102 7402|8106 7904 7802 7404|7404 7102 6702 "
    "7102 6702 7402 7802|8102 7402 7802 8104 7402 7802 8102|8102 7402 7802 "
    "8104 7404 7402|8106 7904 7802 7404|7404 7102 6702 7102 6702 7902 "
    "6702|8102 8102 8602 8102 7902 8602 7902 7802|8602 7802 7402 8602 7202 "
    "7402 7202 7402|7402 8602 7402 7202 8602 7202 6904|0016|6202 8102 8602 "
    "8102 7902 8602 7902 8302|8602 8302 8102 8602 7902 8102 7902 8102|8102 "
    "8602 8102 7902 8602 7902 8304|0016|8102 7902 7802 8102 7902 7802 8102 "
    "7902|7802 8102 7902 7802 8102 7902 7802 7402|8102 7902 7402 8102 7902 "
    "7402 8102 7902|7402 7902 7904 7904 7402 7802|8102 7402 7802 8104 7402 "
    "7802 8102|8102 7402 8102 7402 8102 7402 8102 7402|8106 7904 7802 "
    "7404|7404 7102 6702 7102 6702 7902 7402|8108 8102 7102 8102 7102|8102 "
    "7102 8102 7102 8102 7102 8102 7402|8106 7904 7802 7408 7102 6702 7102 "
    "6702 7402 7802|8102 7402 7802 8104 7402 7802 8102|8102 7402 8102 7402 "
    "8102 7402 8102 7402|8106 7904 7802 7408 7102 6702 7102 6702 7902 "
    "6702|8102 8102 8102 8102 7902 7402 7902 7802|8102 7802 7402 7402 7202 "
    "7402 7202 7402|7402 7202 7402 7202 7902 7202 6904|0008 7102 6702 7902 "
    "6702|8106 7906 7804|7902 7802 7404 7404 7402 7402|7206 7406 6904|7902 "
    "7802 7404 8104 7904|7402 8102 0002 8102 7902 0002 7902 7802|0002 7802 "
    "7402 0002 7202 7402 7202 7402|7402 0002 7402 7202 0002 7202 "
    "6904|XXXXXXXXXXXXXXXXXXXXX"};

// 9 Alan's Scottische (after Dede)
const char signMessage9[] PROGMEM = {
    "7604 7604 7604 7402 7602|7702 7402 7702 7402 7604 7402 7202|7106 6902 "
    "7106 7202|7102 6902 7102 7202 7102 6902 7102 7202|7604 7604 7604 7402 "
    "7602|7702 7102 7702 7102 7604 7102 7202|7106 6902 7102 7202 7404|7204 "
    "7602 7402 7208|7604 7604 7604 7402 7602|7702 7402 7702 7402 7604 7402 "
    "7202|7106 6902 7106 7202|7102 6902 7102 7202 7102 6902 7102 7202|7604 "
    "7604 7604 7402 7602|7702 7102 7702 7102 7604 7102 7202|7106 6902 7102 "
    "7202 7404|7204 7602 7402 7208|7602 7702 7602 7402 7206 7402|7602 7202 "
    "7102 7402 7904 7702 7602|7704 7404 7106 7202|7402 7202 7402 7602 7704 "
    "7602 7402|7602 7702 7602 7402 7206 7402|7602 7202 7102 7402 7904 7702 "
    "7602|7704 7404 7104 7202 7402|7204 7602 7402 7208|7602 7702 7602 7402 "
    "7206 7402|7602 7202 7102 7402 7904 7702 7602|7704 7404 7106 7202|7402 "
    "7202 7402 7602 7704 7602 7402|7602 7702 7602 7402 7206 7402|7602 7202 "
    "7102 7402 7904 7702 7602|7704 7404 7104 7202 7402|7204 7602 7402 "
    "7208|7604 7604 7604 7402 7602|7702 7402 7702 7402 7604 7402 7202|7106 "
    "6902 7106 7202|7102 6902 7102 7202 7102 6902 7102 7202|7604 7604 7604 "
    "7402 7602|7702 7102 7702 7102 7604 7102 7202|7106 6902 7102 7202 "
    "7404|7204 7602 7402 7208|7604 7604 7604 7402 7602|7702 7402 7702 7402 "
    "7604 7402 7202|7106 6902 7106 7202|7102 6902 7102 7202 7102 6902 7102 "
    "7202|7604 7604 7604 7402 7602|7702 7102 7702 7102 7604 7102 7202|7106 "
    "6902 7102 7202 7404|7204 7602 7402 7208|7602 7702 7602 7402 7206 "
    "7402|7602 7202 7102 7402 7904 7702 7602|7704 7404 7106 7202|7402 7202 "
    "7402 7602 7704 7602 7402|7602 7702 7602 7402 7206 7402|7602 7202 7102 "
    "7402 7904 7702 7602|7704 7404 7104 7202 7402|7204 7602 7402 7208|7602 "
    "7702 7602 7402 7206 7402|7602 7202 7102 7402 7904 7702 7602|7704 7404 "
    "7106 7202|7402 7202 7402 7602 7704 7602 7402|7602 7702 7602 7402 7206 "
    "7402|7602 7202 7102 7402 7904 7702 7602|7704 7404 7104 7202 7402|7204 "
    "7602 7402 7216|XXXXXXXXXXXXXXXXXXXXX"};

// 10 Mathew Briggs
const char signMessage10[] PROGMEM = {
    "6902|6902 7102 6902 8106|8102 7902 7602 7906|7204 7202 7602 7402 "
    "7202|7102 7402 7902 7402 7102 6702|6702 7102 6702 8106|8102 7902 7602 "
    "7906|7602 7902 7602 7402 7602 7902|7602 7402 7102 6904|6902|6902 7102 "
    "6902 8106|8102 7902 7602 7906|7204 7202 7602 7402 7202|7102 7402 7902 "
    "7402 7102 6702|6702 7102 6702 8106|8102 7902 7602 7906|7602 7902 7602 "
    "7402 7602 7902|7602 7402 7102 6904|7102 7204 7202 7202 7202 7602 "
    "7202|7404 7402 7402 7602 7402|7204 7202 7602 7402 7202|7102 7402 7902 "
    "7402 7102 6702|7204 7202 7602 7402 7202|7202 7602 7902 8104 7902|7602 "
    "7902 7602 7402 7602 7902|7602 7402 7102 6904|7102 7204 7202 7202 7202 "
    "7602 7202|7404 7402 7402 7602 7402|7204 7202 7602 7402 7202|7102 7402 "
    "7902 7402 7102 6702|7204 7202 7602 7402 7202|7202 7602 7902 8104 "
    "7902|7602 7902 7602 7402 7602 7902|7602 7402 7102 6904|6902|6902 7102 "
    "6902 8106|8102 7902 7602 7906|7204 7202 7602 7402 7202|7102 7402 7902 "
    "7402 7102 6702|6702 7102 6702 8106|8102 7902 7602 7906|7602 7902 7602 "
    "7402 7602 7902|7602 7402 7102 6904|6902|6902 7102 6902 8106|8102 7902 "
    "7602 7906|7204 7202 7602 7402 7202|7102 7402 7902 7402 7102 6702|6702 "
    "7102 6702 8106|8102 7902 7602 7906|7602 7902 7602 7402 7602 7902|7602 "
    "7402 7102 6904|7102 7204 7202 7202 7202 7602 7202|7404 7402 7402 7602 "
    "7402|7204 7202 7602 7402 7202|7102 7402 7902 7402 7102 6702|7204 7202 "
    "7602 7402 7202|7202 7602 7902 8104 7902|7602 7902 7602 7402 7602 "
    "7902|7602 7402 7102 6904|7102 7204 7202 7202 7202 7602 7202|7404 7402 "
    "7402 7602 7402|7204 7202 7602 7402 7202|7102 7402 7902 7402 7102 "
    "6702|7204 7202 7602 7402 7202|7202 7602 7902 8104 7902|7602 7902 7602 "
    "7402 7602 7902|7602 7402 7102 6916|XXXXXXXXXXXXXXXXXXXXX"};

// 11 Monster Cafe 2
const char signMessage11[] PROGMEM = {
    "7203 7501 7401 7201 7401 7501|7702 7902 7404|7401 7201 7401 7501 7701 "
    "7501 7401 7201|7001 7201 7401 7501 7402 7202|7203 7501 7401 7201 7401 "
    "7501|7702 7902 7404|7401 7201 7401 7501 7701 7501 7401 7201|7001 7201 "
    "7401 7001 7204|7203 7501 7401 7201 7401 7501|7702 7902 7404|7401 7201 "
    "7401 7501 7701 7501 7401 7201|7001 7201 7401 7501 7402 7202|7203 7501 "
    "7401 7201 7401 7501|7702 7902 7404|7401 7201 7401 7501 7701 7501 7401 "
    "7201|7001 7201 7401 7001 7204|7202 7501 7201 7204|7002 7402 7702 "
    "7002|6903 7201 7001 6901 7001 7201|7401 7201 7001 6901 7002 6702|7202 "
    "7501 7201 7204|7002 7402 7702 7002|6903 7201 7001 6901 7001 7201|7401 "
    "7201 7001 6901 6704|7202 7501 7201 7204|7002 7402 7702 7002|6903 7201 "
    "7001 6901 7001 7201|7401 7201 7001 6901 7002 6702|7202 7501 7201 "
    "7204|7002 7402 7702 7002|6903 7201 7001 6901 7001 7201|7401 7201 7001 "
    "6901 6704|XXXXXXXXXXXXXXXX"};

// 12 Thunderstruck
const char signMessage12[] PROGMEM = {
    "8101 6901 7901 6901 7801 6901 7901 6901 7701 6901 7601 6901 7701 6901 "
    "7401 6901|7601 6901 7301 6901 7401 6901 7201 6901 7401 6901 7201 6901 "
    "7401 6901 7201 6901|8101 6901 7901 6901 7801 6901 7901 6901 7701 6901 "
    "7601 6901 7701 6901 7401 6901|7601 6901 7301 6901 7401 6901 7201 6901 "
    "7401 6901 7201 6901 7401 6901 7201 6901|8101 6901 7901 6901 7801 6901 "
    "7901 6901 7701 6901 7601 6901 7701 6901 7401 6901|7601 6901 7301 6901 "
    "7401 6901 7201 6901 7401 6901 7201 6901 7401 6901 7201 6901|8101 6901 "
    "7901 6901 7801 6901 7901 6901 7701 6901 7601 6901 7701 6901 7401 "
    "6901|7601 6901 7301 6901 7401 6901 7201 6901 7401 6901 7201 6901 7401 "
    "6901 7201 6901|8101 6901 7901 6901 7801 6901 7901 6901 7701 6901 7601 "
    "6901 7701 6901 7401 6901|7601 6901 7301 6901 7401 6901 7201 6901 7401 "
    "6901 7201 6901 7401 6901 7201 6901|8101 6901 7901 6901 7801 6901 7901 "
    "6901 7701 6901 7601 6901 7701 6901 7401 6901|7601 6901 7301 6901 7401 "
    "6901 7201 6901 7401 6901 7201 6901 7401 6901 7201 6901|8101 6901 7901 "
    "6901 7801 6901 7901 6901 7701 6901 7601 6901 7701 6901 7401 6901|7601 "
    "6901 7301 6901 7401 6901 7201 6901 7401 6901 7201 6901 7401 6901 7201 "
    "6901|8101 6901 7901 6901 7801 6901 7901 6901 7701 6901 7601 6901 7701 "
    "6901 7401 6901|7601 6901 7301 6901 7401 6901 7201 6901 7401 6901 7201 "
    "6901 7401 6901 7201 6901|8101 6901 7901 6901 7801 6901 7901 6901 7701 "
    "6901 7601 6901 7701 6901 7401 6901|7601 6901 7301 6901 7401 6901 7201 "
    "6901 7401 6901 7201 6901 7401 6901 7201 6901|8101 6901 7901 6901 7801 "
    "6901 7901 6901 7701 6901 7601 6901 7701 6901 7401 6901|7601 6901 7301 "
    "6901 7401 6901 7201 6901 7401 6901 7201 6901 7401 6901 7201 6901|8101 "
    "6901 7901 6901 7801 6901 7901 6901 7701 6901 7601 6901 7701 6901 7401 "
    "6901|7601 6901 7301 6901 7401 6901 7201 6901 7401 6901 7201 6901 7401 "
    "6901 7201 6901|8101 6901 7901 6901 7801 6901 7901 6901 7701 6901 7601 "
    "6901 7701 6901 7401 6901|7601 6901 7301 6901 7401 6901 7201 6901 7401 "
    "6901 7201 6901 7401 6901 7201 6901|8101 6901 7901 6901 7801 6901 7901 "
    "6901 7701 6901 7601 6901 7701 6901 7401 6901|7601 6901 7301 6901 7401 "
    "6901 7201 6901 7401 6901 7201 6901 7401 6901 7201 6901|7601 6901 7301 "
    "6901 7401 6901 7201 6901 7401 6901 7201 6901 7401 6901 7201 6901|8101 "
    "6901 7901 6901 7801 6901 7901 6901 7701 6901 7601 6901 7801 6901 7401 "
    "6901|7601 6901 7301 6901 7401 6901 7201 6901 7401 6901 7201 6901 7401 "
    "6901 7201 6901|8101 6901 7901 6901 7801 6901 7901 6901 7701 6901 7601 "
    "6901 7701 6901 7401 6901|7601 6901 7301 6901 7401 6901 7201 6901 7401 "
    "6901 7201 6901 7401 6901 7201 6901|7401 6901 7701 6901 7401 6901 7701 "
    "6901 7401 6901 7701 6901 7401 6901 7701 6901|7301 6901 7601 6901 7201 "
    "6901 7601 6901 7201 6901 7601 6901 7202 7602|7401 6901 7701 6901 7401 "
    "6901 7701 6901 7401 6901 7701 6901 7401 6901 7701 6901|7301 6901 7601 "
    "6901 7201 6901 7601 6901 7201 6901 7601 6901 7202 7602|XXXXXXXXXXXXXXXX"};

// 13 Sí Beag Sí Mór
const char signMessage13[] PROGMEM = {
    "0004 7901 8101|8203 8101 7902|7902 7901 8101 7902|7604 7402|7004 "
    "7402|7601 7401 7601 7701 7902|8104 7901 8101|8202 8202 8102|7904 "
    "8202|7604 8102|7404 7902|7004 6902|6704 8102|7604 8102|7404 7901 "
    "7701|7906|7904 7901 8101|8202 8201 8101 7902|8101 7901 8101 8201 "
    "8602|8804 8602|8204 8101 7901|8104 8602|8204 8102|7904 7602|7404 7601 "
    "7401|7004 6902|6704 8202|7604 8102|7404 8602|8801 8601 8401 8201 8101 "
    "7901|8104 7901 7701|7906|7904 7901 8104|7901 8101 8203 8101|7902 7902 "
    "7901 8101|7902 7604|7402 7004|7402 7601 7401 7601 7701|7902 8104|7901 "
    "8101 8202 8202|8102 7904|8202 7604|8102 7404|7902 7004|6902 6704|8102 "
    "7604|8102 7404|7901 7701 7906|7904 7901 8101|8202 8201 8101 7902|8101 "
    "7901 8101 8201 8602|8804 8602|8204 8101 7901|8104 8602|8204 8102|7904 "
    "7602|7404 7601 7401|7004 6902|6704 8202|7604 8102|7404 8602|8801 8601 "
    "8401 8201 8101 7901|8104 7901 7701|7906|7906|XXXXXXXXXXXXXXXXXXXXX"};

// 14 King Billy's March
const char signMessage14[] PROGMEM = {
    "8101 7401 7401 7601 7401 7401|8101 7401 7401 7601 7701 7901|8101 7401 "
    "7401 8201 8101 7901|7601 7201 7201 7601 7701 7901|8101 7401 7401 7601 "
    "7401 7401|8101 7401 7401 7601 7701 7901|8201 8601 8201 8401 8201 "
    "8101|7901 7601 7201 7601 7701 7901|8101 7401 7401 7601 7401 7401|8101 "
    "7401 7401 7601 7701 7901|8101 7401 7401 8201 8101 7901|7601 7201 7201 "
    "7601 7701 7901|8101 7401 7401 7601 7401 7401|8101 7401 7401 7601 7701 "
    "7901|8201 8601 8201 8401 8201 8101|7901 7601 7201 7601 7901 7601|7403 "
    "8603|8401 8101 7901 8103|7402 7401 8602 7601|7601 7401 7201 7601 7901 "
    "7601|7402 7401 8603|8401 8101 8201 8402 8201|8401 8801 8601 8402 "
    "8101|7901 7601 7201 7601 7701 7901|XXXXXXXXXXXXXXXXXXXXX"};

// 15 The Morning Dew
const char signMessage15[] PROGMEM = {
    "6903 7602 7401 7001 6701|6901 6701 6901 7601 7601 7401 7001 6701|6903 "
    "7602 7401 7001 7401|7601 7701 7901 7601 7401 7001 6701 7001|6903 7602 "
    "7401 7001 6701|6901 6701 6901 7601 7601 7401 7001 6701|6903 7602 7401 "
    "7001 7401|7601 7701 7901 7601 7401 7001 6701 7001|7602 8101 7601 8201 "
    "7601 8101 7601|7602 8101 7601 7401 7001 6701 7001|7602 8101 7601 8201 "
    "7601 8101 7601|7601 7701 7901 7601 7401 7001 6701 7001|7602 8101 7601 "
    "8201 7601 8101 7601|7602 8101 7601 7401 7001 6701 7001|7601 7901 8101 "
    "8401 8201 7901 8101 7701|7902 7901 7401 7601 7401 7001 6701|7602 6901 "
    "7601 7201 7601 6901 7601|7602 6901 7601 7401 7001 6701 7001|7602 6901 "
    "7601 7201 7601 6901 7601|7601 7701 7901 7601 7401 7001 6701 7001|7602 "
    "6901 7601 7201 7601 6901 7601|7602 6901 7601 7401 7001 6701 7001|7601 "
    "7901 8101 8401 8201 7901 8101 7701|7902 7901 7401 7601 7401 7001 "
    "6701|7601 7401 7201 7001 6901 7001 7201 7401|7602 7201 7601 7402 7201 "
    "7401|7601 7401 7201 7001 6901 7001 7201 7401|7601 7701 7901 7601 7401 "
    "7001 6701 7001|7601 7401 7201 7001 6901 7001 7201 7401|7602 7201 7601 "
    "7402 7201 7401|7601 7401 7201 7001 6901 7001 7201 7401|7601 7701 7901 "
    "7601 7401 7001 6701 7001|XXXXXXXXXXXXXXXXXXXXX"};

// 16 Banish Misfortune
const char signMessage16[] PROGMEM = {
    "8201 8101 7901 7701 7401 7201|7402 7901 7701 7401 7201|7002 6701 6701 "
    "6901 6701|7001 6901 7001 7201 7001 7201|7401 7201 7401 7701 7401 "
    "7201|7401 7201 7401 7701 7901 8101|8201 8101 7901 7701 7401 7201|7401 "
    "7901 7701 7903|8201 8101 7901 7701 7401 7201|7402 7901 7701 7401 "
    "7201|7002 6701 6701 6901 6701|7001 6901 7001 7201 7001 7201|7401 7201 "
    "7401 7701 7401 7201|7401 7201 7401 7701 7901 8101|8201 8101 7901 7701 "
    "7401 7201|7401 7901 7701 7903|8202 7901 7901 7701 7901|8202 8401 8601 "
    "8401 8201|8102 7701 7701 7601 7701|8102 8201 8401 8201 8101|8202 8401 "
    "8601 8401 8201|8102 8201 8401 8201 8101|8201 8101 7901 7701 7401 "
    "7201|7401 7901 7701 7903|8202 7901 7901 7701 7901|8202 8401 8601 8401 "
    "8201|8102 7701 7701 7601 7701|8102 8201 8401 8201 8101|8202 8401 8601 "
    "8401 8201|8102 8201 8401 8201 8101|8201 8101 7901 7701 7401 7201|7401 "
    "7901 7701 7903|8202 8401 8102 8201|7902 8101 7702 7901|7401 7601 7401 "
    "7201 7401 7201|7002 7001 7201 6901 6701|7703 7701 7401 7201|7401 7201 "
    "7401 7701 7901 8101|8201 8101 7901 7701 7401 7201|7401 7901 7701 "
    "7903|8202 8401 8102 8201|7902 8101 7702 7901|7401 7601 7401 7201 7401 "
    "7201|7002 7001 7201 6901 6701|7703 7701 7401 7201|7401 7201 7401 7701 "
    "7901 8101|8201 8101 7901 7701 7401 7201|7401 7901 7701 "
    "7903|XXXXXXXXXXXXXXXXXXXXX"};

// 17 The Blarney Pilgrim
const char signMessage17[] PROGMEM = {
    "6701 6901 6701 6701 6901 7201|7402 7401 7401 7601 7701|7601 7401 7201 "
    "7401 7201 6901|7201 6901 7401 7201 6901 6701|6701 6901 6701 6701 6901 "
    "7201|7402 7401 7401 7601 7701|7601 7401 7201 7401 7201 6901|7201 6901 "
    "6701 6703|6701 6901 6701 6701 6901 7201|7402 7401 7401 7601 7701|7601 "
    "7401 7201 7401 7201 6901|7201 6901 7401 7201 6901 6701|6701 6901 6701 "
    "6701 6901 7201|7402 7401 7401 7601 7701|7601 7401 7201 7401 7201 "
    "6901|7201 6901 6701 6703|7901 8101 7901 7901 7601 7201|7401 7201 7401 "
    "7601 7201 6901|7901 8101 7901 7901 7601 7201|7401 7201 7401 7201 7401 "
    "7601|8402 8101 7901 7601 7201|7401 7201 7401 7601 7201 6901|7602 7201 "
    "7401 7201 6901|7201 7401 7201 7203|7901 8101 7901 7901 7601 7201|7401 "
    "7201 7401 7601 7201 6901|7901 8101 7901 7901 7601 7201|7401 7201 7401 "
    "7201 7401 7601|8402 8101 7901 7601 7201|7401 7201 7401 7601 7201 "
    "6901|7602 7201 7401 7201 6901|7201 7401 7201 7203|7402 6701 7602 "
    "6701|7402 6701 7401 7601 7701|7601 7401 7201 7401 7201 6901|7201 6901 "
    "7401 7201 6901 6701|7401 6701 6701 7601 6701 6701|7401 6701 6701 7401 "
    "7601 7701|7601 7401 7201 7401 7201 6901|7201 6901 6701 6703|7402 6701 "
    "7602 6701|7402 6701 7401 7601 7701|7601 7401 7201 7401 7201 6901|7201 "
    "6901 7401 7201 6901 6701|7401 6701 6701 7601 6701 6701|7401 6701 6701 "
    "7401 7601 7701|7601 7401 7201 7401 7201 6901|7201 6901 6701 "
    "6703|XXXXXXXXXXXXXXXXXXXXX"};

// 18 The Wind That Shakes The Barley
const char signMessage18[] PROGMEM = {
    "7402 7401 7601 7401 7001 6901 6701|7602 7601 7401 7601 7701 7901 "
    "7601|7402 7401 7601 7401 7001 6901 6701|8401 8201 8101 7901 7601 7701 "
    "7901 7601|7402 7401 7601 7401 7001 6901 6701|7602 7601 7401 7601 7701 "
    "7901 7601|7402 7401 7601 7401 7001 6901 6701|8401 8201 8101 7901 7601 "
    "7701 7901 8101|8202 8201 7901 8402 8401 8101|8202 8201 7901 7601 7701 "
    "7901 8101|8202 8201 7901 8402 8201 8401|8601 8201 8101 7901 7601 7701 "
    "7901 8101|8202 8201 7901 8402 8401 8101|8202 8201 7901 7601 7701 7901 "
    "8101|7901 8101 8201 8401 8602 8601 8801|8601 8201 8101 7901 7601 7701 "
    "7901 7601|XXXXXXXXXXXXXXXXXXXXX"};

// 19 Morrison's
const char signMessage19[] PROGMEM = {
    "6903 7603|6901 7601 6901 7401 7001 6701|6901 6701 6901 7603|7901 7701 "
    "7601 7401 7001 6701|6903 7603|6901 7601 6901 7401 7001 6701|7203 7001 "
    "7201 7401|7901 7401 7201 7001 6901 6701|6903 7603|6901 7601 6901 7401 "
    "7001 6701|6901 6701 6901 7603|7901 7701 7601 7401 7001 6701|6903 "
    "7603|6901 7601 6901 7401 7001 6701|7203 7001 7201 7401|7901 7401 7201 "
    "7001 6901 6701|7601 8101 8101 8201 8101 8101|8601 8101 8101 8201 8101 "
    "8101|7601 8101 8101 8201 8101 8101|8602 8401 8201 8101 7901|7601 8101 "
    "8101 8201 8101 8101|8601 8101 8101 8201 8101 8101|8401 8201 8101 7902 "
    "7401|7601 7401 7201 7001 7201 7401|7601 8101 8101 8201 8101 8101|8601 "
    "8101 8101 8201 8101 8101|7601 8101 8101 8201 8101 8101|8201 8601 8201 "
    "7901 8101 8201|8403 8401 8201 8101|7901 8101 8201 8402 7901|8101 7901 "
    "7701 7902 7401|7601 7401 7201 7001 6901 6701|XXXXXXXXXXXXXXXXXXXXX"};

// 20 Eight Step Waltz
const char signMessage20[] PROGMEM = {
    "7402 7402 7702 7601 7701|7902 8102 7702 7402|7402 7402 7702 7601 "
    "7701|7902 7602 7404|7402 7402 7702 7601 7701|7902 8102 7702 7402|7402 "
    "7402 7702 7601 7701|7902 7602 7404|8102 8102 8102 7901 8101|8202 7902 "
    "8102 7702|8102 8102 8102 7901 8101|8202 7902 7704|8102 8102 8102 7901 "
    "8101|8202 7902 8102 7702|8102 8202 8402 8601 8401|8201 8101 7901 7701 "
    "7604|XXXXXXXXXXXXXXXXXXXXX"};

// 21 Kopanitsa (Key: Dmin) Nigel Eaton
const char signMessage21[] PROGMEM = {
    "7204 7404 7404 7202 8008|7902 7702 7902 8002 7902 8001 7901 7702 "
    "7408|7902 7702 7902 8002 7902 8001 7901 7702 7702 7502 7402 7502|7702 "
    "7402 7502 7202 7404 8002 7408|7204 7404 7404 7202 8008|7902 7702 7902 "
    "8002 7902 8001 7901 7702 7408|7902 7702 7902 8002 7902 8001 7901 7702 "
    "7702 7502 7402 7502|7702 7402 7502 7202 7404 8002 7408|7702 7902 7902 "
    "7702 7902 8001 7901 7702 7702 7502 7402 7502|7702 7902 7902 7702 8004 "
    "7902 7702 7502 7402 7202|7702 7902 7902 7702 7902 8001 7901 7702 7702 "
    "7502 7402 7502|7702 7402 7502 7202 7404 8002 7408|7702 7902 7902 7702 "
    "7902 8001 7901 7702 7702 7502 7402 7502|7702 7902 7902 7702 8004 7902 "
    "7702 7502 7402 7202|7702 7902 7902 7702 7902 8001 7901 7702 7702 7502 "
    "7402 7502|7702 7402 7502 7202 7404 8002 7408|7902 8002 8002 7702 7902 "
    "8001 7901 7702 7904 8004|7902 8002 8002 7702 7902 8001 7901 7702 7702 "
    "7901 7701 7502 7402|7902 8002 8002 7702 7902 8001 7901 7702 7904 "
    "8004|7902 8002 8002 7702 7902 8001 7901 7702 7702 7901 7701 7502 "
    "7402|7702 7902 7902 7502 7702 7901 7701 7502 7704 7904|7702 7902 7902 "
    "7502 7702 7901 7701 7502 7502 7701 7501 7402 7202|7702 7902 7902 7502 "
    "7702 7901 7701 7502 7704 7904|8001 7901 7702 7502 7202 7404 8002 "
    "7408|7902 8002 8002 7702 7902 8001 7901 7702 7904 8004|7902 8002 8002 "
    "7702 7902 8001 7901 7702 7702 7901 7701 7502 7402|7902 8002 8002 7702 "
    "7902 8001 7901 7702 7904 8004|7902 8002 8002 7702 7902 8001 7901 7702 "
    "7702 7901 7701 7502 7402|7702 7902 7902 7502 7702 7901 7701 7502 7704 "
    "7904|7702 7902 7902 7502 7702 7901 7701 7502 7502 7701 7501 7402 "
    "7202|7702 7902 7902 7502 7702 7901 7701 7502 7704 7904|8001 7901 7702 "
    "7502 7202 7404 8002 7408|7902 7702 7502 7202 7401 7501 7402 7202 7502 "
    "7702 7904|7902 7702 7502 7202 7401 7501 7402 7202 7502 7702 7904|7902 "
    "7702 7502 7202 7401 7501 7402 7202 7502 7702 7904|8001 7901 7702 7502 "
    "7202 7404 8002 7408|7902 7702 7502 7202 7401 7501 7402 7202 7502 7702 "
    "7904|7902 7702 7502 7202 7401 7501 7402 7202 7502 7702 7904|7902 7702 "
    "7502 7202 7401 7501 7402 7202 7502 7702 7904|8001 7901 7702 7502 7202 "
    "7404 8002 7408|7202 7402 7402 7702 7501 7401 7402 7702 7502 7402 7902 "
    "8002|7202 7402 7402 7702 7501 7401 7402 7702 7502 7202 7404|7202 7402 "
    "7402 7702 7501 7401 7402 7702 7502 7402 7902 8002|7202 7402 7402 7702 "
    "7501 7401 7402 7702 7502 7202 7404|7202 7402 7402 7702 7501 7401 7402 "
    "7702 7502 7402 7902 8002|7202 7402 7402 7702 7501 7401 7402 7702 7502 "
    "7202 7404|7202 7402 7402 7702 7501 7401 7402 7702 7502 7402 7902 "
    "8002|7202 7402 7402 7702 7501 7401 7402 7702 7502 7402 7204|7502 7701 "
    "7501 7302 7501 7401 7204 7002 7504 7402 7202|7502 7701 7501 7302 7501 "
    "7401 7204 7002 7202 7402 7502 7702|7502 7701 7501 7302 7501 7401 7204 "
    "7002 7504 7402 7202|7502 7701 7501 7302 7501 7401 7002 7202 7402 7202 "
    "0002 7204|7502 7701 7501 7302 7501 7401 7204 7002 7504 7402 7202|7502 "
    "7701 7501 7302 7501 7401 7204 7002 7202 7402 7502 7702|7502 7701 7501 "
    "7302 7501 7401 7204 7002 7504 7402 7202|7502 7701 7501 7302 7501 7401 "
    "7002 7202 7402 7202 0002 7204|XXXXXXXXXXXXXXXXXXXXX"};

// 22 Blowzabella (Key: Gmaj)
const char signMessage22[] PROGMEM = {
    "7402 7201 7101 6901 6701|7202 6901 7102 6701|7402 7201 7101 6901 "
    "6701|6902 7401 6703|7402 7201 7101 6901 6701|7202 6901 7102 6701|7402 "
    "7201 7101 6901 6701|6902 7401 6703|7902 7401 7101 6901 7101|7201 7101 "
    "6901 7101 6901 6701|7902 7401 7101 6901 7101|7201 7101 6901 6703|7902 "
    "7401 7101 6901 7101|7201 7101 6901 7101 6901 6701|7902 7401 7101 6901 "
    "7101|7201 7101 6901 6703|7101 6901 7101 7201 7101 7201|7403 7402 "
    "7201|7101 7201 7101 6901 7101 6901|6703 6702 6901|7101 6901 7101 7201 "
    "7101 7201|7403 7402 7201|7101 7201 7101 6901 7101 6901|6703 6702 "
    "6901|7102 6701 7102 6701|6901 7101 6901 7102 6701|7102 6701 7102 "
    "6701|6901 7101 6901 6703|7102 6701 7102 6701|6901 7101 6901 7102 "
    "6701|7102 6701 7102 6701|6901 7101 6901 6703|XXXXXXXXXXXXXXXXXXXXX"};

// 23 Herr Mannelig
const char signMessage23[] PROGMEM = {
    "0008 0004 0002 8302|8302 8402 8302 8102 7904 7602 7802|7902 8102 7902 "
    "7802 7604 7602 7802|7904 7902 7902 8104 7902 8102|8308 7904 7902 "
    "8302|8302 8402 8302 8102 7904 7602 7802|7902 8102 7902 7802 7604 7602 "
    "7802|7908 8102 8101 7902 8102|8308 7904 7902 8302|8302 8402 8302 8102 "
    "7902 7902 7602 7802|7902 8102 7902 7802 7604 7602 7802|7908 8104 7902 "
    "8102|8308 8604 0002 8302|8302 8402 8302 8102 7904 7602 7802|7902 8102 "
    "7902 7802 7604 7602 7802|7902 8102 8102 7901 "
    "7801|7608|XXXXXXXXXXXXXXXXXXXXX"};

// 9 The Bouree with no name (By Nigel Eaton, not working very well yet so
// commented out for the moment, very much a work in progress if anyone has
// music score for this please let me know).
// 15sec to 45sec      const char signMessage9[] PROGMEM  = {"7702|7002 6702
// 7901 8101 7902 7002 7902 7702 7902|8102 7902 7902 7902 7702 7902 7502
// 7702|7402 6702 7502 7402 7401 6701 7202 8302 7402|7002 6702 7002 7402 7002
// 6702 7902 8301 7901|7702 8301 7901 7702 7902 7002 7902 7702 7902|8102 7902
// 7902 7902 7702 7902 7502 7702|8602 6702 7502 7402 7501 7401 8602 8302
// 7402|8202 6702 7001 7001 7402 7002 6702 7402 7501 7401|7002 8801 8601 7002
// 7401 7401 7002 7402 7002 7402|7502 7502 7402 7402 7002 7402 7002 7202|7002
// 6702 7402 7401 7501 7902 7202 8302 7402|7002 6702 7001 6801 7402 7002 6702
// 7402 7402|7002 7501 7401 7002 7401 7501 7002 7401 7501 7002 7402|7402 6702
// 7401 7401 7402 7002 7402 8302 7202|7402 6702 7402 7402 7002 7202 7002 7402
// 7416| 45sec to 63sec      8102 6902 7402 7002 6702 7902 8302|8302 6701 7901
// 9101 8901 9102 7002 7902 8902 7902|8002 7902 7902 7901 8101 7702 7902 7001
// 7501 7702|7402 7502 7402 7402 7002 7202 7002 7402|6902 6702 7002 7402 6902
// 6702 7002 8102|7902 8301 7901 7702 7902 7002 7902 7702 7902|8002 7902 7902
// 7902 7702 7902 7502 7702|7402 6702 7502 7402 7202 8302 7402|6902 6702 8302
// 7402 7002 6702 7402 7502 7016|XXXXXXXXXXXXXXXXXXXXX"};

// const char signMessage9[] PROGMEM  = {"7702|7002 6702 7901 8101 7902 7002
// 7902 7702 7902|8102 7902 7902 7902 7702 7902 7502 7702|7402 6702 7502 7402
// 7401 6701 7202 8302 7402|7002 6702 7002 7402 7002 6702 7902 8301 7901|7702
// 8301 7901 7702 7902 7002 7902 7702 7902|8102 7902 7902 7902 7702 7902 7502
// 7702|8602 6702 7502 7402 7501 7401 8602 8302 7402|8202 6702 7001 7001 7402
// 7002 6702 7402 7501 7401|7002 8801 8601 7002 7401 7401 7002 7402 7002
// 7402|7502 7502 7402 7402 7002 7402 7002 7202|7002 6702 7402 7401 7501 7902
// 7202 8302 7402|7002 6702 7001 6801 7402 7002 6702 7402 7402|7002 7501 7401
// 7002 7401 7501 7002 7401 7501 7002 7402|7402 6702 7401 7401 7402 7002 7402
// 8302 7202|7402 6702 7402 7402 7002 7202 7002 7402 7416|8102 6902 7402 7002
// 6702 7902 8302|8302 6701 7901 9101 8901 9102 7002 7902 8902 7902|8002 7902
// 7902 7901 8101 7702 7902 7001 7501 7702|7402 7502 7402 7402 7002 7202 7002
// 7402|6902 6702 7002 7402 6902 6702 7002 8102|7902 8301 7901 7702 7902 7002
// 7902 7702 7902|8002 7902 7902 7902 7702 7902 7502 7702|7402 6702 7502 7402
// 7202 8302 7402|6902 6702 8302 7402 7002 6702 7402 7502
// 7016XXXXXXXXXXXXXXXXXXXXX"};

// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX END OF SONG LIST
// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

// XXXXXXXXXXXXXXXXXXX Parameters for demo mode
// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
char myChar;

int i;

int endoftune;
int p;
int MidiValue;
int NoteDurationSixteenths;
int NoteDurationms;
int MIDItens;
int MIDIunits;
int notedurationtens;
int notedurationunits;
int convertedstring;
int w;
int drones;
int drones_silent;
// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX User Defined Variables
int playbackspeed =
    20; // The bigger the value the slower it plays in demo mode for any given
        // speed selection using the menu presented
// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
int waiting;
int buttonstate;
int buttonstateold;
int cr;
int song;
int validsong;

// XXXXXXXXXXXXXXXXXXXXXXX End of setup for demo mode XXXXXXXXXXXXXXXXX

// ANALOG INPUTS
int crankvoltagePin = A1; // analog voltage from the crank motor connected to
                          // Pin 15 which is also analog i.e. A1
int potentiometerPin = A2; // analog voltage from potentiometer connected to Pin
                           // 16 which is also A2

// int pitchbendPin = A9;  // analog voltage from potentiometer or pedal or
// resistor strip connected to Pin 23 which is also A9

// DIGITAL INPUTS
int crankoverridePin =
    39; // Pressing the button when pressed will overrride crank and allow you
        // to play without turning the mechanical crank mechanism
int octaveupbuttonPin = 21;
int octavedownbuttonPin = 22;
int capobuttonPin = 23;

int turnrestoff;

int a;
int aold;
// NOTE: The letters aa bb etc below are identifier codes for each note.
// Also below is a commented table of what note each identifier corresponds to,
// and what pin that note's microswitch is wired to on the Teensy 3.5 board The
// board Pins seem not to be in order because all the sharp notes are wired to
// one row of pins and the main notes to another. This keeps the wiring neater,
// I think, maybe.
int SAMPLES = 500;
int s_val[500];

//        Teensy Pin || MIDI value || Note in G/C tuning               Note in
//        D/G tuning || MIDI Value
int aa; //     37            91         G6                               D6 86
int bb; //     36            89         F6                               C6 84
int cc; //     20            90         F6#                              C6# 85
int dd; //     35            88         E6                               B5 83
int ee; //     19            87         D6#                              A5# 82
int ff; //     34            86         D6                               A5 81
int gg; //     18            85         C6#                              G5# 80
int hh; //     33            84         C6                               G5 79
int ii; //     32            83         B5                               F5# 78
int jj; //     8             82         A5#                              F5 77
int kk; //     31            81         A5                               E5 76
int ll; //     7             80         G5#                              D5# 75
int mm; //     30            79         G5                               D5 74
int nn; //     6             78         F5#                              C5# 73
int oo; //     29            77         F5                               C5 72
int pp; //     28            76         E5                               B4 71
int qq; //     5             75         D5#                              A4# 70
int rr; //     27            74         D5                               A4 69
int ss; //     4             73         C5#                              G4# 68
int tt; //     26            72         C5                               G4 67
int uu; //     25            71         B4                               F4# 66
int vv; //     3             70         A4#                              F4 65
int ww; //     24            69         A4                               E4 64
int xx; //     2             68         G4#                              D4# 63
//            --            67         G4                               D4 62
//            Open string. This comes on when crank is turned

// Second melody string on channel 1 is 12 MIDI points above the First melody
// string. Main melody string is actuallu Channel 2 NOTE Since I have added more
// tunings the above table is incomplete. However it is OK for the normal
// tunings for beginners.

Bounce button2 = Bounce(2, 5);
Bounce button24 = Bounce(24, 5);
Bounce button3 = Bounce(3, 5);
Bounce button25 = Bounce(25, 5);
Bounce button26 = Bounce(26, 5);
Bounce button4 = Bounce(4, 5);
Bounce button27 = Bounce(27, 5);
Bounce button5 = Bounce(5, 5);
Bounce button28 = Bounce(28, 5);
Bounce button29 = Bounce(29, 5);
Bounce button6 = Bounce(6, 5);
Bounce button30 = Bounce(30, 5);
Bounce button7 = Bounce(7, 5);
Bounce button31 = Bounce(31, 5);
Bounce button8 = Bounce(8, 5);
Bounce button32 = Bounce(32, 5);
Bounce button33 = Bounce(33, 5);
Bounce button18 = Bounce(18, 5);
Bounce button34 = Bounce(34, 5);
Bounce button19 = Bounce(19, 5);
Bounce button35 = Bounce(35, 5);
Bounce button20 = Bounce(20, 5);
Bounce button36 = Bounce(36, 5);
Bounce button37 = Bounce(37, 5);

void setup() {
  if (debug == 1) {
    Serial.begin(38400); // For debugging
    delay(2000);
    Serial.println("Ready");
    delay(2000);
  }

  MIDI.begin(); // Turns on Serial MIDI sending MIDI out via the Tx pin which is
                // Pin 1 on any Teesny 3.x board

  // XXXXXXXXXXXXXXXXXXXXXXXXX For displaying info on OLED
  // XXXXXXXXXXXXXXXXXXXXXXXX
  //  by default, we'll generate the high voltage from the 3.3v line internally!
  //  (neat!)
  display.begin(SSD1306_SWITCHCAPVCC);
  // display.begin(SH1106_SWITCHCAPVCC);  //
  // <-------------------------------------------------------------------------------------------------------------------------------------------------------
  // Change this
  //  init done

  // Show image buffer on the display hardware.
  // internally, this will display the splashscreen.
  display.display();
  delay(1);

  // Clear the buffer.
  display.clearDisplay();

  // Intro animated sequence
  // display.clearDisplay();
  display.drawBitmap(0, 0, logo47_glcd_bmp, 128, 64, 1);
  display.display();
  delay(2000);
  display.clearDisplay();
  display.drawBitmap(0, 0, logo48_glcd_bmp, 128, 64, 1);
  display.display();
  delay(200);
  display.clearDisplay();
  display.drawBitmap(0, 0, logo49_glcd_bmp, 128, 64, 1);
  display.display();
  delay(200);
  display.clearDisplay();
  display.drawBitmap(0, 0, logo50_glcd_bmp, 128, 64, 1);
  display.display();
  delay(200);
  display.clearDisplay();
  display.drawBitmap(0, 0, logo51_glcd_bmp, 128, 64, 1);
  display.display();
  delay(200);
  display.clearDisplay();
  display.drawBitmap(0, 0, logo52_glcd_bmp, 128, 64, 1);
  display.display();
  delay(200);
  display.clearDisplay();
  display.drawBitmap(0, 0, logo53_glcd_bmp, 128, 64, 1);
  display.display();
  delay(200);
  display.clearDisplay();
  display.drawBitmap(0, 0, logo54_glcd_bmp, 128, 64, 1);
  display.display();
  // delay(2000);

  // XXXXXXXXXXXXXXXXXXXXXXXXX End of setup for displaying notes on OLED
  // XXXXXXXXXXXXXXXXXXXX

  // Set up the Analog inputs from potentiometer and the motor acting as a
  // dynamo of the crank handle
  pinMode(crankvoltagePin, INPUT);
  pinMode(potentiometerPin, INPUT);

  //  Crank overrride button
  pinMode(crankoverridePin, INPUT);
  digitalWrite(crankoverridePin, HIGH);

  // 3 extra buttons for controlling tuning and capo
  pinMode(octaveupbuttonPin, INPUT);
  digitalWrite(octaveupbuttonPin, HIGH);
  pinMode(octavedownbuttonPin, INPUT);
  digitalWrite(octavedownbuttonPin, HIGH);
  pinMode(capobuttonPin, INPUT);
  digitalWrite(capobuttonPin, HIGH);

  pinMode(2, INPUT_PULLUP);
  pinMode(24, INPUT_PULLUP);
  pinMode(3, INPUT_PULLUP);
  pinMode(25, INPUT_PULLUP);
  pinMode(26, INPUT_PULLUP);
  pinMode(4, INPUT_PULLUP);
  pinMode(27, INPUT_PULLUP);
  pinMode(5, INPUT_PULLUP);
  pinMode(28, INPUT_PULLUP);
  pinMode(29, INPUT_PULLUP);
  pinMode(6, INPUT_PULLUP);
  pinMode(30, INPUT_PULLUP);
  pinMode(7, INPUT_PULLUP);
  pinMode(31, INPUT_PULLUP);
  pinMode(8, INPUT_PULLUP);
  pinMode(32, INPUT_PULLUP);
  pinMode(33, INPUT_PULLUP);
  pinMode(18, INPUT_PULLUP);
  pinMode(34, INPUT_PULLUP);
  pinMode(19, INPUT_PULLUP);
  pinMode(35, INPUT_PULLUP);
  pinMode(20, INPUT_PULLUP);
  pinMode(36, INPUT_PULLUP);
  pinMode(37, INPUT_PULLUP);

  // SELF TEST
  // Work out of crank module is present or not
  // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Work out Standard Deviation of lots of
  // samples of analog Pin 2 i.e. the one the crank gearmotor is connected to
  // XXXXXXXXXXXXXXXXXXXXXXXX If gearmotor of the crank module is connected the
  // variation in voltage readings will be very small If crank module gearmotor
  // for any reason is not connected then voltage on analog Pin 2 will wander
  // randomly and its SD will be larger We can therefore use this to auto detect
  // whether a crank module is connected or not or motor failed for ezample.
  // NOTE: If it is not connected the pushbutton override will still allow you
  // top play the machine.

  // Gather sample data

  float sampleSum = 0;
  for (int i = 0; i < SAMPLES; i++) {
    s_val[i] = analogRead(crankvoltagePin);
    sampleSum += s_val[i];
    delay(10); // set this to whatever you want
  }
  float meanSample = sampleSum / float(SAMPLES);

  if (debug == 1) {
    Serial.print("Mean analogread value ");
    Serial.println(meanSample);
  }

  // HOW TO FIND STANDARD DEVIATION
  // STEP 1, FIND THE MEAN. (We Just did.)

  // STEP 2, sum the squares of the differences from the mean

  float sqDevSum = 0.0;

  for (int i = 0; i < SAMPLES; i++) {
    // pow(x, 2) is x squared.
    sqDevSum += pow((meanSample - float(s_val[i])), 2);
  }

  // STEP 3, FIND THE MEAN OF THAT
  // STEP 4, TAKE THE SQUARE ROOT OF THAT

  float stDev = sqrt(sqDevSum / float(SAMPLES));

  if (stDev < 10) {
    crankmodulepresent = 1;
  } // <-----------------------------------------If potrange is low then
    // gearmotor is connected to Pin 16 which is also A2, and therefore a crank
    // module IS connected

  // STANDARD DEVIATION.
  // this is in units of sensor ticks (0-1023)

  if (debug == 1) {
    Serial.print("StandardDev is ");
    Serial.println(stDev);
  }
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);

  if (crankmodulepresent == 1) {
    if (debug == 1) {
      Serial.println("Crank module detected");
    }
    display.println(" ");
    display.println(" ");
    display.println("Crank Module detected");
  } else {
    if (debug == 1) {
      Serial.println("Crank module NOT detected");
    }
    display.println(" ");
    display.println(" Crank Module");
    display.println(" NOT detected");
    display.println("Pushbutton still");
    display.println(" operational");
  }
  display.display();
  delay(2000);
  display.clearDisplay();
  // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX End of work out SD
  // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

  // Intro text display
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);
  display.println("    DigiGurdy-Baz    ");
  display.println(" ");
  display.println("     Basil Lalli     ");
  display.println("     John Dingley    ");
  display.println("     Version 0.2     ");
  display.println(" includes SerialMIDI");
  display.println("  White OLED screen");
  display.println(" ");

  display.display();
  delay(4000);

  // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  KEEP PREVIOUS DISPLAY AND
  // TUNINGS   YES OR NO  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  display.clearDisplay();
  display.setTextSize(1);
  display.setCursor(0, 0);
  display.println("KEEP LAST SETTINGS ?");
  display.println(" ");
  display.println(" ");
  display.println("(O) Key: YES");
  display.println(" ");
  display.println("(X) Key:  NO");
  display.println("(Change the Settings)");

  display.display();
  delay(1000);

  settings = 0;

  while (settings == 0) {
    button20.update(); // press upper right blue key to select NOTES display
                       // i.e. original style of display
    if (button20.fallingEdge()) {
      settings = 1; // 1 means we want to KEEP PREVIOUS SETTINGS
      display.println("  KEEPING SETTINGS");
      display.display();
      delay(1000);
    }

    button2.update(); // press upper left dark blue key to select Do Re Mi
                      // display style
    if (button2.fallingEdge()) {
      settings = 2; // 2 means we want to CHANGE THE PREVIOUS SETTINGS i.e.
                    // change the tuning and or display style
      display.println("CHANGING SETTINGS...");
      display.display();
      delay(1000);
    }
  } // end of while loop

  if (settings == 2) { // i.e. we DO want to enter menus to change the settings
    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Do RE MI or
    // original display selection
    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    //  Choose  Do Re Mi display or Original display with notes shown

    display.clearDisplay();
    display.setTextSize(1);
    display.setCursor(0, 0);
    display.println("SET THE DISPLAY STYLE");
    display.println(" ");
    display.println(" ");
    display.println("(X Key: DoReMi");
    display.println(" ");
    display.println("(O) Key: NOTES");
    display.println(" ");
    display.display();
    delay(1000);

    while (displaystyle == 0) {
      button20.update(); // press upper right blue key to select NOTES display
                         // i.e. original style of display
      if (button20.fallingEdge()) {
        displaystyle = 1; // 1 means we want Notes style display
        display.println("    NOTES DISPLAY");
        display.display();
        delay(1000);
      }

      button2.update(); // press upper left dark blue key to select Do Re Mi
                        // display style
      if (button2.fallingEdge()) {
        displaystyle = 2; // 2 means we want Do Re Mi style of display
        display.println("  Do Re Mi DISPLAY");
        display.display();
        delay(1000);
      }
    } // end of while loop

    // -------------------  SAVE THE NEW PREFERRED DISPLAY STYLE TO EEPROM
    // ---------------------------
    EEPROM.write(displaytypeaddress, displaystyle);

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX SET
    // YOUR TUNINGS
    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    tunings(); // Set up your tuning options

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Drones on or
    // off selection
    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    //  Choose  Drones ON   or   drones OFF

    display.clearDisplay();
    display.setTextSize(1);
    display.setCursor(0, 0);
    display.println(" DRONES ON/OFF?");
    display.println(" ");
    display.println("   (X) Key: OFF");
    display.println(" ");
    display.println("   (O) Key: ON");
    display.println(" ");
    display.display();
    delay(1000);

    drones_silent = 2;
    while (drones_silent == 2) {
      button20.update(); // press upper right blue key to select Drones ON
      if (button20.fallingEdge()) {
        drones_silent = 0; // 0 represents we do not want the drones silenced
        display.println("     DRONES ON");
        display.display();
        delay(2000);
      }

      button2.update(); // press upper left dark blue key to select Drones OFF
                        // i.e. silent
      if (button2.fallingEdge()) {
        drones_silent = 1; // 1 represents the fact that we do want the drones
                           // silenced i.e. OFF
        display.println("     DRONES OFF");
        display.display();
        delay(2000);
      }
    } // end of while loop

    // -------------------  SAVE THE NEW On or OFF DRONES PREFERENCE TO EEPROM
    // ---------------------------
    EEPROM.write(droneaddress, drones_silent);

  } // end of if settings equals 2 i.e. we do want to change the tunings and
    // display style potentially

  // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  RETRIEVE
  // SAVED TUNING OPTION AND DISPLAY STYLE IF APPROPRIATE
  // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  if (settings == 1) {

    // Retrieve tuning value from EEPROM
    // read a byte from the current address of the EEPROM
    value = EEPROM.read(tuningaddress);
    choosekey = value; // NOTE we also have to iupdate what trompmidi and
                       // dronemidi values are for each choosekey value

    // Retrieve display style value from EEPROM
    value = EEPROM.read(displaytypeaddress);
    displaystyle = value;

    // Retrieve drones on or off value from EEPROM
    value = EEPROM.read(droneaddress);
    drones_silent = value;

    // Retrieve tromp MIDI value from EEPROM
    value = EEPROM.read(trompmidiaddress);
    trompmidi = value;

    // Retrieve drone MIDI value from EEPROM
    value = EEPROM.read(dronemidiaddress);
    dronemidi = value;

    // Retrieve Chan1 open melody string MIDI value from EEPROM
    value = EEPROM.read(chan1midiaddress);
    chan1midi = value;

    // Retrieve Chan2 open melody string MIDI value from EEPROM
    value = EEPROM.read(chan2midiaddress);
    chan2midi = value;

    // Retrieve tonestatus value from EEPROM
    value = EEPROM.read(tonestatusaddress);
    tonestatus = value;

    // Retrieve octavestatus value from EEPROM
    value = EEPROM.read(octavestatusaddress);
    octavestatus = value;

    buzzrootkey = trompmidi; // Set the buzz pitch to match the trompette value

    display.clearDisplay();
    display.setTextSize(1);
    display.setCursor(0, 0);
    display.println("  CURRENT SETTINGS");
    // display.println(" ");
    // display.print("Tuning: ");
    // display.println(choosekey);
    if (choosekey == 1) {
      display.print("G/C C Drones");
    }
    if (choosekey == 2) {
      display.print("G/C G Drones");
    }
    if (choosekey == 3) {
      display.print("D/G D Drones");
    }
    if (choosekey == 4) {
      display.print("D/G G Drones");
    }
    if (choosekey == 5) {
      display.print("G/C CG Drones");
    }
    display.print(" Oct");
    if (octavestatus == 1) {
      display.println("UP");
    }
    if (octavestatus == 0) {
      display.println("-->");
    }
    if (octavestatus == -1) {
      display.println("DOWN");
    }
    // display.println(" ");
    // display.print("Display: ");
    if (displaystyle == 1) {
      display.print("NoteFormat ");
    }
    if (displaystyle == 2) {
      display.print("Do,Re,Mi   ");
    }
    // display.println(" ");
    // display.print("Drones: ");
    if (drones_silent == 0) {
      display.println("DronesON");
    }
    if (drones_silent == 1) {
      display.println("DronesOFF");
    }
    // display.println(" ");

    display.print("Melody Chan 1:   ");
    MIDInote = chan1midi;
    putinthenote();
    display.print("Melody Chan 2:   ");
    MIDInote = chan2midi;
    putinthenote();
    if (tonestatus == 1) {
      display.print("Tromp-Ch3 CapoON ");
    } else {
      display.print("Tromp-Ch3 CapOFF ");
    }
    MIDInote = trompmidi;
    putinthenote();
    if (tonestatus == 1) {
      display.print("Drone-Ch4 CapoON ");
    } else {
      display.print("Drone-Ch4 CapOFF ");
    }
    MIDInote = dronemidi;
    putinthenote();
    display.print("(O) Key = START");

    display.display();
    delay(1000);

    // Press O key to continue after viewing the settings as above
    waiting = 2;
    while (waiting == 2) {
      button20.update(); // press upper right blue key to continue
      if (button20.fallingEdge()) {
        waiting = 0;
      }
      delay(100);
    }

  } // end of if settingsequals 1 i.e at this point we need to pull from EEPROM
    // the values for the tuning option we saved last time and want to use now
    // and the display style we used last time and also want to use now.

  display.clearDisplay();
  display.drawBitmap(0, 0, logo55_glcd_bmp, 128, 64, 1); // Crank when ready screen display
  display.display();
  initialrun = 1;

  // Silence the buzz as for some odd reason it sometimes comes on at this point
  // and at other times it does not
  usbMIDI.sendNoteOff(buzzrootkey, 0, 5); // Chien buzz off on channel 5
  MIDI.sendNoteOff(buzzrootkey, 0, 5);

  // int midpoint = analogRead(pitchbendPin);  // 0 to 1023 in value  read once
  // on setup NOTE Make sure pitchbend knob is in middle at startup as this
  // zeroes it in effect

  //    highertrigger = midpoint + 50;   // sets up a dead zone in the pitchbend
  //    potentiometer of 50 either way of midpoint before note is bent
  //    lowertrigger = midpoint - 50;

} // end of void setup

// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
// MAIN LOOP
// XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

void loop() {

  if (crankmodulepresent == 1) {

    samplethebuzzpotentiometer = samplethebuzzpotentiometer + 1;
    samplecrankvoltage = samplecrankvoltage + 1;

    if (samplethebuzzpotentiometer == 20000) {
      samplethebuzzpotentiometer = 0;
      potvalue = analogRead(potentiometerPin);

      potvalueadjusted = (float)(potvalue / 3);

      // Temporary for debugging
      crankvoltage = analogRead(crankvoltagePin);

      // Serial.print("crankvoltage=");
      // Serial.println(crankvoltage);
      // Serial.print("     potvalue=");
      // Serial.println(potvalue);
      //       Serial.print("          potvalueadjusted=");
      // Serial.println(potvalueadjusted);
      // Serial.println(" ");
      //  End of temporary for debugging

    } // end of if samplethebuzzpotentiometer etc

    if (samplecrankvoltage == buzzsamplinginterval) {
      samplecrankvoltage = 0;
      crankvoltage = analogRead(crankvoltagePin);
    }

  } // end of if crankmodulepresent equals 1

  // XXXXXXXXXX   READ THE GAMING CONSOLE FIRE BUTTON, ONE PRESS TO START CRANK
  // PRESS AGAIN TO STOP IT   XXXXXXXXXXXXXXXXX
  cr = cr + 1;
  if (cr == 200) { // Looks at big arcade gaming button status every 200 program
                   // cycles
    buttonstateold = buttonstate;

    if (digitalRead(crankoverridePin) == LOW) {
      buttonstate = 1; // Pressing override button
    } else {
      buttonstate = 0;
    } // Not pressing override button

    if (buttonstate == 1 &&
        buttonstateold == 0) { // You have just pressed button now
      if (crankbutton == 0) {
        crankbutton = 1; // Crankbutton value changes state between 0 and 1 with
                         // each press of the button
      } else {
        crankbutton = 0;
      }
    }
    cr = 0;

    // For debugging
    // Serial.print("crankbutton =");
    // Serial.print(crankbutton);
    // Serial.print("   tempcounter =");
    // Serial.print(tempcounter);
    // Serial.print("   crankvoltage =");
    // Serial.println(crankvoltage);
    // Serial.println(" ");

    /*
    //---------------------------------------------- CHECK STATUS OF PITCHBEND
    INPUT every 200 cycles at the same time
    ----------------------------------------------- pitchbendsample =
    analogRead(pitchbendPin);  // 0 to 1023 in value

      // pitchbend value to send via MIDI should be in the range of -8192 to
    +8192 where zero is no pitchbend
      // so if we take the potentiometer value and subtract 512 from it we will
    then get a value of -512 to +511
      // NOTE: We may need to put in a dead zone between say 505 and 519 to
    account for the potentiometer not quite returning to exact centre point of
    its travel otherwise DG would always play slightly sharp or slightly flat
      // if we then multiply that value by 15 we will get a range of -7680 to
    +7665 which is within range and should give us a big swing of pitch for
    initial tests

      //PitchValue = (pitchbendsample - 512) * 15;

      PitchValue = 0;

      if(pitchbendsample < lowertrigger){ PitchValue = (lowertrigger -
    pitchbendsample) * (-15); } if(pitchbendsample > highertrigger){ PitchValue
    = (pitchbendsample - highertrigger) * 15; }



      usbMIDI.sendPitchBend(PitchValue, 1);    // Channel 1
      usbMIDI.sendPitchBend(PitchValue, 2);    // Channel 2
      MIDI.sendPitchBend(PitchValue, 1);    // Channel 1
      MIDI.sendPitchBend(PitchValue, 2);    // Channel 2

      //Serial.print("PitchValue: ");
      //Serial.println(PitchValue);
      */

  } // end of sample the gaming button status every 200 cycles
    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXX  END OF READ CRANK FIRE BUTTON STATUS
  // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

  button2.update();
  button24.update();
  button3.update();
  button25.update();
  button26.update();
  button4.update();
  button27.update();
  button5.update();
  button28.update();
  button29.update();
  button6.update();
  button30.update();
  button7.update();
  button31.update();
  button8.update();
  button32.update();
  button33.update();
  button18.update();
  button34.update();
  button19.update();
  button35.update();
  button20.update();
  button36.update();
  button37.update();

  // Note: On messages when each button is pressed

  if (button37.fallingEdge()) {
    aa = 1;
    a = a + 1; //    The term a is a variable that is used to detect if the
               //    state of any of the buttons has changed, if not we leave
               //    things as they are until a state change is detected
  }

  if (button36.fallingEdge()) {
    bb = 1;

    a = a + 1;
  }

  if (button20.fallingEdge()) {
    cc = 1;

    a = a + 1;
  }

  if (button35.fallingEdge()) {
    dd = 1;

    a = a + 1;
  }

  if (button19.fallingEdge()) {
    ee = 1;

    a = a + 1;
  }

  if (button34.fallingEdge()) {
    ff = 1;

    a = a + 1;
  }

  if (button18.fallingEdge()) {
    gg = 1;

    a = a + 1;
  }

  if (button33.fallingEdge()) {
    hh = 1;

    a = a + 1;
  }

  if (button32.fallingEdge()) {
    ii = 1;

    a = a + 1;
  }

  if (button8.fallingEdge()) {
    jj = 1;

    a = a + 1;
  }

  if (button31.fallingEdge()) {
    kk = 1;

    a = a + 1;
  }

  if (button7.fallingEdge()) {
    ll = 1;

    a = a + 1;
  }

  if (button30.fallingEdge()) {
    mm = 1;

    a = a + 1;
  }

  if (button6.fallingEdge()) {
    nn = 1;

    a = a + 1;
  }

  if (button29.fallingEdge()) {
    oo = 1;

    a = a + 1;
  }

  if (button28.fallingEdge()) {
    pp = 1;

    a = a + 1;
  }

  if (button5.fallingEdge()) {
    qq = 1;

    a = a + 1;
  }

  if (button27.fallingEdge()) {
    rr = 1;

    a = a + 1;
  }

  if (button4.fallingEdge()) {
    ss = 1;

    a = a + 1;
  }

  if (button26.fallingEdge()) {
    tt = 1;

    a = a + 1;
  }

  if (button25.fallingEdge()) {
    uu = 1;

    a = a + 1;
  }

  if (button3.fallingEdge()) {
    vv = 1;

    a = a + 1;
  }

  if (button24.fallingEdge()) {
    ww = 1;

    a = a + 1;
  }

  if (button2.fallingEdge()) {
    xx = 1;

    a = a + 1;
  }

  if (button2.risingEdge()) {
    xx = 0;
    a = a - 1;
  }
  if (button24.risingEdge()) {
    ww = 0;
    a = a - 1;
  }
  if (button3.risingEdge()) {
    vv = 0;
    a = a - 1;
  }
  if (button25.risingEdge()) {
    uu = 0;
    a = a - 1;
  }
  if (button26.risingEdge()) {
    tt = 0;
    a = a - 1;
  }
  if (button4.risingEdge()) {
    ss = 0;
    a = a - 1;
  }
  if (button27.risingEdge()) {
    rr = 0;
    a = a - 1;
  }
  if (button5.risingEdge()) {
    qq = 0;
    a = a - 1;
  }
  if (button28.risingEdge()) {
    pp = 0;
    a = a - 1;
  }
  if (button29.risingEdge()) {
    oo = 0;
    a = a - 1;
  }
  if (button6.risingEdge()) {
    nn = 0;
    a = a - 1;
  }
  if (button30.risingEdge()) {
    mm = 0;
    a = a - 1;
  }
  if (button7.risingEdge()) {
    ll = 0;
    a = a - 1;
  }
  if (button31.risingEdge()) {
    kk = 0;
    a = a - 1;
  }
  if (button8.risingEdge()) {
    jj = 0;
    a = a - 1;
  }
  if (button32.risingEdge()) {
    ii = 0;
    a = a - 1;
  }
  if (button33.risingEdge()) {
    hh = 0;
    a = a - 1;
  }
  if (button18.risingEdge()) {
    gg = 0;
    a = a - 1;
  }
  if (button34.risingEdge()) {
    ff = 0;
    a = a - 1;
  }
  if (button19.risingEdge()) {
    ee = 0;
    a = a - 1;
  }
  if (button35.risingEdge()) {
    dd = 0;
    a = a - 1;
  }
  if (button20.risingEdge()) {
    cc = 0;
    a = a - 1;
  }
  if (button36.risingEdge()) {
    bb = 0;
    a = a - 1;
  }
  if (button37.risingEdge()) {
    aa = 0;
    a = a - 1;
  }

  // xxxxxxxxxxxxxxxxx  Check for a capo change xxxxxxxxxxxxxxxxxxxxxxxxx
  if (digitalRead(capobuttonPin) == LOW) {
    checkforcapochange();
  }
  if (xx == 1) { // button 2 pressed top left
    if (gg == 1 ||
        ee ==
            1) { // button pair top right just inboard of the light blue button
      checkforcapochange();
    }
  } // end of check for a capo change while playing

  // Look to see if we are wanting to go into demo mode
  if (aa == 1 && xx == 1) { // i.e. if pressing left Blue key and lower
                            // rightmost keys at same time go into demo mode
    aa = 0;
    xx = 0;

    aold = 0;
    a = 0;

    // All MIDI cleared at start of entering demo mode so don't need it here
    // clearallMIDI();

    // delay(1000);
    demo1();

    // Serial.println("---------------- End Of Demo Back to main
    // program---------------------------");
  } // end of see if we want to go into demo mode or not

  if (digitalRead(octaveupbuttonPin) == LOW) {
    octaveupbuttonstatus = 1;
  }
  if (digitalRead(octavedownbuttonPin) == LOW) {
    octavedownbuttonstatus = 1;
  }

  // Look to see if we want to change tuning
  if ((cc == 1 && xx == 1) ||
      (octaveupbuttonstatus == 1 &&
       octavedownbuttonstatus ==
           1)) { // i.e. if pressing left upper dark BLUE key and upper
                 // rightmost light blue keys at same time go into tuning mode
    octaveupbuttonstatus = 0; // Reset these status values to zero
    octavedownbuttonstatus = 0;
    cc = 0;
    xx = 0;
    aold = 0;
    a = 0;
    choosekey = 0;
    tunings(); // Set up your tuning options
               // Choose  Drones ON   or   drones OF
    display.clearDisplay();
    display.setTextSize(1);
    display.setCursor(0, 0);
    display.println(" DRONES ON/OFF?");
    display.println(" ");
    display.println("   (X) Key: OFF");
    display.println(" ");
    display.println("   (O) Key: ON");
    display.println(" ");
    display.display();
    delay(1000);

    drones_silent = 2;
    while (drones_silent == 2) {
      button20.update(); // press upper right blue key to select Drones ON
      if (button20.fallingEdge()) {
        drones_silent = 0; // 0 represents we do not want the drones silenced
        display.println("   DRONES ON");
        display.display();
        delay(2000);
      }

      button2.update(); // press upper left dark blue key to select Drones OFF
                        // i.e. silent
      if (button2.fallingEdge()) {
        drones_silent = 1; // 1 represents the fact that we do want the drones
                           // silenced i.e. OFF
        display.println("   DRONES OFF");
        display.display();
        delay(2000);
      }
    } // end of while loop

    // -------------------  SAVE THE NEW On or OFF DRONES PREFERENCE TO EEPROM
    // ---------------------------
    EEPROM.write(droneaddress, drones_silent);

    display.clearDisplay();
    display.drawBitmap(0, 0, logo55_glcd_bmp, 128, 64,
                       1); // Crank when ready screen display
    display.display();
    initialrun = 1;

    delay(1000);
  } // end of see if you want to change the tuning or not

  if (aold != a &&
      tempcounter > 50) { // i.e. a key is being pressed and we are cranking, so
                          // we need to cut the G4 open string
    // Analyse status of each button and sound the highest note among them while
    // silencing the rest. Sequence of anaylysis starts at the highest note and
    // works down to the lowest. The reason I compare aold with a is to use it
    // as a mechanism to look for a change in status of any of the buttons. If
    // no change, let the attached PC or phone play the last note that was sent
    // a bit longer. If you keep sending it unecessary MIDI data you get a
    // stacatto effect from the attached device. Only need to send it new MIDI
    // data when the overall button status changes i.e. you let go of a button
    // or press a new one. tempcounter is greater than zer if cranking or
    // pressing the big gaming FIRE button. If doing neither then no notes will
    // be playable.

    turnrestoff = 0;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  Melody string
    // section start, both variants as regards the drones
    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

    // if(choosekey == 1 || choosekey == 2 || choosekey == 10){

    if (aa == 1) {
      turnrestoff = 1;
      shift = 24;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (cc == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 23;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (bb == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 22;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (dd == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 21;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (ee == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 20;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (ff == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 19;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (gg == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 18;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (hh == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 17;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (ii == 1 && turnrestoff == 0) {

      turnrestoff = 1;
      shift = 16;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (jj == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 15;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (kk == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 14;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (ll == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 13;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (mm == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 12;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (nn == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 11;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (oo == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 10;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (pp == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 9;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (qq == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 8;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (rr == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 7;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (ss == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 6;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (tt == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 5;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (uu == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 4;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (vv == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 3;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (ww == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 2;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (xx == 1 && turnrestoff == 0) {
      turnrestoff = 1;
      shift = 1;
      highestnotebeingplayed = chan2midi + shift;
    }

    if (dronestate == 1 && turnrestoff == 0) { // open string
      highestnotebeingplayed = chan2midi;
      shift = 0;
    }

    // Serial.print("Highestnotebeingplayed =");
    // Serial.print(highestnotebeingplayed);
    // Serial.print("    PreviousHighestnotebeingplayed =");
    // Serial.println(prevhighestnotebeingplayed);

    secondmelodyhighest =
        chan1midi +
        shift; // Defines the MIDI note to sound for the second melody string
               // which is on Chan1 which is a bit confusing

    soundnote();

    prevhighestnotebeingplayed = highestnotebeingplayed;
    prevsecondmelodyhighest = secondmelodyhighest;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  Play melody
    // string section end XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

  } // end of if aold not equal to a

  aold = a;

  // XXXXXXXXXXXXXXX LOOK AT crank situation AND DECIDE WHAT TO DO RE DRONES AND
  // THE OPEN MELODY STRING XXXXXXXXXXXXXXXX

  if (crankvoltage >
      dronethreshold) { // Crank voltage at analog pin will be 0 to 1023 so a
                        // threshold of about 20 here is chosen by trial and
                        // error just to detect that you are actually turning
                        // the crank, even just slowly.

    tempcounter =
        tempcounter +
        500; // If turning crank this counter goes up and maximises at 1500
    if (tempcounter > 1500) {
      tempcounter = 1500;
    }
  } else {
    tempcounter = tempcounter - 1; // If not turning crank this count decays to
                                   // zero over a couple of seconds
    if (tempcounter < 0) {
      tempcounter = 0;
    }
  }

  //  Why have this tempcounter? Reason is so that if one momentary voltage-read
  //  of the analog pin is zero for some reason, dirt on motor brush or
  //  something, but actually you are still cranking, it smoothes out any such
  //  glitches i.e. drone will only stop if you genuinely do stop cranking.

  if (crankbutton == 1) {
    tempcounter = 1500;
  } // If pressing override button then simulate turning the crank by making
    // tempcounter higher than 100
  if (crankmodulepresent == 0 && crankbutton == 0) {
    tempcounter = 0;
  }
  // If no crank module and using crankbutton to turn notes off then need to
  // command tempcounter to be 0 not just let it decay which is what you would
  // do if crank was present

  if (tempcounter >= 50 &&
      dronestate == 0) { // Drones currently off, now we want to turn Drones ON

    pausecounter = 0;
    initialrun = 0;
    if (drones_silent == 0) { // Drones silent not activated i.e. we do want to
                              // have the drone code turining them on and off

      // Serial.println("DronesOn");
      usbMIDI.sendNoteOn(trompmidi, DVol,
                         3); //   Turns ON trompette you have chosen to link to
                             //   Channel 3 in the phone app.
      usbMIDI.sendNoteOn(dronemidi, DVol,
                         4); //   Turns ON drone you have chosen to link to
                             //   Channel 4 in the phone app.
      MIDI.sendNoteOn(trompmidi, DVol,
                      3); //   Turns ON trompette you have chosen to link to
                          //   Channel 3 in the phone app.
      MIDI.sendNoteOn(dronemidi, DVol,
                      4); //   Turns ON drone you have chosen to link to Channel
                          //   4 in the phone app.
    }
    dronestate = 1; // i.e. drones are ON

    recrank = 1; // This means when goes through keyscanner, i.e. next step, the
                 // keyclicks will not sound as key already is pressed.
    a = a + 1; // Triggers a first run through the key scanner ending in the bit
               // that turns on open melody string if no keys are pressed but
               // dronestate == 1
  }

  if (tempcounter < 50 &&
      dronestate == 1) { // Drones currently on, now we want to turn drones OFF

    if (drones_silent == 0) { // Drones silent not activated i.e. we do want to
                              // have the drone code turning them on and off

      // Serial.println("DronesOff");
      usbMIDI.sendNoteOff(trompmidi, 0,
                          3); //   Turns off trompette you have chosen to link
                              //   to Channel 3 in the phone app.
      usbMIDI.sendNoteOff(dronemidi, 0,
                          4); //   Turns off drone you have chosen to link to
                              //   Channel 4 in the phone app.
      MIDI.sendNoteOff(trompmidi, 0,
                       3); //   Turns off trompette you have chosen to link to
                           //   Channel 3 in the phone app.
      MIDI.sendNoteOff(dronemidi, 0,
                       4); //   Turns off drone you have chosen to link to
                           //   Channel 4 in the phone app.
    }

    dronestate = 0; // i.e. Drones are OFF

    // We have covered drone state above when we stop cranking, but also we have
    // to silence any note being played as well
    // Serial.print("highestnotebeingplayed = ");
    // Serial.print(highestnotebeingplayed);
    // Serial.println(" TURNED OFF AS YOU STOPPED CRANKING");
    usbMIDI.sendNoteOff(highestnotebeingplayed, noteVol,
                        2); // The basic note is on Ch2
    usbMIDI.sendNoteOff(secondmelodyhighest, noteVol,
                        1); // The one octave higher note is on Ch 1
    usbMIDI.sendNoteOff(83, clickvolume, 6); // Key click OFF   on channel 6
    MIDI.sendNoteOff(highestnotebeingplayed, noteVol,
                     2); // The basic note is on Ch2
    MIDI.sendNoteOff(secondmelodyhighest, noteVol,
                     1); // The one octave higher note is on Ch 1
    MIDI.sendNoteOff(83, clickvolume, 6); // Key click OFF   on channel 6

    tempcounter =
        0; // Stops a scan through the key states until we start cranking again

  } // End of if tempcounter < 50 and dronestate == 1

  if (tempcounter < 50) {

    pausecounter = pausecounter + 1;

    if (pausecounter == 1 && initialrun != 1) {
      display.clearDisplay();
      display.display();
    } // When stop cranking screen initially goes black

    if (pausecounter == 25000) {
      // This makes sure all melody notes are OFF when you stop cranking, a kind
      // of safety backup to prevent any notes getting stuck in on state
      // Serial.println("Turning all melody notes off as backup procedure");
      // So, if you stop cranking for more than about 1 second then this code
      // will run to turn off all the notes that might still be stuck in ON
      // state. Strictly this should not be required but especially with iPad
      // software like bs-16i sometimes it is to prevent odd notes being left in
      // ON state when you stop cranking.

      clearallMIDI(); // Precautionary blitz clearout of any MIDI notes that
                      // might be in the ON state on any channel

      // display.clearDisplay();
      // display.setTextSize(1);
      // display.setCursor(0,30);
      // display.print("      All Stop");
      // display.display();
    }

    if (pausecounter == 30000) {
      // pausecounter = 30000;   // This makes it put up the Crank When Ready
      // message after a delay, just the once when it first hits 30000, it will
      // be 30001 thereafter
      display.clearDisplay();
      display.drawBitmap(0, 0, logo55_glcd_bmp, 128, 64,
                         1); // Crank when ready screen display
      display.display();
    }

    if (pausecounter > 30001) {
      pausecounter = 30001;
    } // Stops pause counter going up to some huge value if stopped cranking for
      // a long time

  } // End of if tempcounter < 50
    // XXXXXXXXXXXXXXXX  BUZZ
  // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

  buzzcountdown2 = buzzcountdown2 - 1;
  if (buzzcountdown2 <= 0) {
    buzzcountdown2 = 0;
  }

  // Buzz initiated by measured voltage from crank exceeding a set value
  // controlled by the potentiometer knob.
  if (crankvoltage > potvalueadjusted &&
      chienstatus == 0) { // Chien Buzz on via channel 5  assuming buzz is
                          // starting in off status

    if (drones_silent ==
        0) { // i.e. we DO want to hear the drones and the chien buzz
      if (buzzcountdown2 == 0) {
        // usbMIDI.sendNoteOff(buzzrootkey, buzzvolume, 5);   // Chien buzz off
        // on channel 5    NOT SURE WHY WE TURN IT OFF THEN STRAIGHT ON AGAIN
        // NEED TO COME BACK TO THIS LATER <--------------------

        usbMIDI.sendNoteOn(buzzrootkey, buzzvolume, 5); // Chien buzz ON
        MIDI.sendNoteOn(buzzrootkey, buzzvolume, 5);    // Chien buzz ON
      }
    }
    buzzcountdown = buzzcountdownstartvalue;
    buzzcountdown2 = buzzcountdown2startvalue;
    chienstatus = 1;
  }

  if (crankvoltage < potvalueadjusted &&
      chienstatus ==
          1) { // Chien buzz off assumining buzz is starting in the on status
    if (drones_silent == 0) { // Drones silent not activated i.e. we do want to
                              // have the drone code turining them on and off

      buzzcountdown = buzzcountdown - 1;

      if (buzzcountdown <= 0) {
        buzzcountdown = 0;
      }
      if (buzzcountdown <= 0) {
        usbMIDI.sendNoteOff(buzzrootkey, buzzvolume,
                            5); // Chien buzz off on channel 5
        MIDI.sendNoteOff(buzzrootkey, buzzvolume,
                         5); // Chien buzz off on channel 5
        // Serial.println("Buzz OFF");
        // Serial.println(" ");
        chienstatus = 0;
      }
    }
  }

  /*
  // Alternative way of ending the buzz i.e. it times out rather than being
  stopped by decay in voltage below set threshold. Time is set in user settings
  at start of program listing. if(buzzcountdown > 0){ buzzcountdown =
  buzzcountdown - 1;} if (buzzcountdown <= 0 && chienstatus == 1){   //Chien
  buzz off assumining buzz is starting in the on status if(drones_silent == 0){
  // Drones silent not activated i.e. we do want to have the drone code turining
  them on and off usbMIDI.sendNoteOff(middy, buzzvolume, 4);   // Chien buzz off
  on channel 4
          //Serial.println("Buzz OFF");
                               }
          chienstatus = 0;
                                                           }

  */
  // XXXXXXXXXXXXXXXXXXXXXXXX End of look at crank situation
  // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

  // MIDI Controllers should discard incoming MIDI messages.
  while (MIDI.read()) {
  }
  while (usbMIDI.read()) {
  }
} // end of void loop

void demo1() {

  // Serial.println("demo mode");

  // text display
  display.clearDisplay();
  display.setTextSize(3);
  display.setCursor(0, 0);
  display.println(" DEMO");
  display.println(" MODE");
  display.display();
  delay(2000);

  clearallMIDI(); // Precautionary blitz clearout of any MIDI notes that might
                  // be in the ON state on any channel

  display.clearDisplay();

  // text display
  display.setTextSize(2);

  display.setCursor(0, 0);
  display.println("DEMO MODE");
  display.setTextSize(1);

  display.println(" Choose your song:");
  display.println(" ");
  display.println("Each key = a song");
  display.println(" ");
  display.println("Press (O) key");
  display.println("to confirm selection");

  display.display();

  // Serial.println("Choose your song");

  song = 1; // if you dont choose a song it will just default to song 1
  int choosesong = 0;
  while (choosesong == 0) {
    button24.update(); // A4 key  in G/C tuning
    if (button24.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 1");
      display.println(" ");
      display.println("The Congress");
      display.println("(reel)");
      display.display();
      validsong = 1; // if no song for this button saved yet, then give it a
                     // zero

      song = 1;
    }

    button25.update(); // B4 key
    if (button25.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 2");
      display.println(" ");
      display.println("The Gravel Walks");
      display.println("(reel)");
      display.display();
      validsong = 1;

      song = 2;
    }

    button26.update(); // C5 key
    if (button26.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 3");
      display.println(" ");
      display.println("La Jument de Michao");
      display.display();
      validsong = 1;

      song = 3;
    }

    button27.update(); // D5 key
    if (button27.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 4");
      display.println(" ");
      display.println("Brenda Stubbert's");
      display.println("(reel)");
      display.display();
      validsong = 1;

      song = 4;
    }

    button28.update(); // E5 key
    if (button28.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 5");
      display.println(" ");
      display.println("Father Kelly");
      display.println("(reel)");
      display.display();
      validsong = 1;

      song = 5;
    }

    button29.update(); // F5 key
    if (button29.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 6");
      display.println(" ");
      display.println("The High");
      display.println("(reel)");
      display.display();
      validsong = 1;

      song = 6;
    }

    button30.update(); // G5 key
    if (button30.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 7");
      display.println(" ");
      display.println("Medieval");
      display.println("Andrey Vinogradov");
      display.display();
      validsong = 1;

      song = 7;
    }

    button31.update(); // A5 key
    if (button31.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 8");
      display.println(" ");
      display.println("She Sells Sanctuary");
      display.println("(The Cult)");
      display.display();
      validsong = 1;

      song = 8;
    }

    button32.update(); // B5 key
    if (button32.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 9");
      display.println(" ");
      display.println("Alan's SCottische");
      display.println("(after Dede)");
      display.display();
      validsong = 1;

      song = 9;
    }

    button33.update(); // C6 key
    if (button33.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 10");
      display.println(" ");
      display.println("Mathew Briggs");
      display.display();
      validsong = 1;

      song = 10;
    }

    button34.update(); // D6 key
    if (button34.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 11");
      display.println(" ");
      display.println("Monster Cafe II");
      display.print("Nigel Eaton");
      display.display();
      validsong = 1;

      song = 11;
    }

    button35.update(); // E6 key
    if (button35.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 12");
      display.println(" ");
      display.println("Thunderstruck");
      display.print("   AC/DC");
      display.display();
      validsong = 1;

      song = 12;
    }

    button36.update(); // F6 key
    if (button36.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("    Song 13");
      display.println(" ");
      display.println("Si Beag Si Mor");
      display.display();
      validsong = 1;

      song = 13;
    }

    button37.update(); // G6 key
    if (button37.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 14");
      display.println(" ");
      display.println("King Billy's March");
      display.display();
      validsong = 1;

      song = 14;
    }

    button2.update(); // G4# key
    if (button2.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 15");
      display.println(" ");
      display.println("The Morning Dew");
      display.display();
      validsong = 1;

      song = 15;
    }

    button3.update(); // A4# key
    if (button3.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 16");
      display.println(" ");
      display.println("Banish Misfortune");
      display.display();
      validsong = 1;

      song = 16;
    }

    button4.update(); // C5# key
    if (button4.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 17");
      display.println(" ");
      display.println("The Blarney Pilgrim");
      display.display();
      validsong = 1;

      song = 17;
    }

    button5.update(); // D5# key
    if (button5.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 18");
      display.println(" ");
      display.println("The Wind That");
      display.println(" ");
      display.println("Shakes The Barley");
      display.display();
      validsong = 1;

      song = 18;
    }

    button6.update(); // F5# key
    if (button6.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 19");
      display.println(" ");
      display.println("Morrison's");
      display.display();
      validsong = 1;

      song = 19;
    }

    button7.update(); // G5# key
    if (button7.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 20");
      display.println(" ");
      display.println("Eight Step Waltz");
      display.display();
      validsong = 1;

      song = 20;
    }

    button8.update(); // A5# key
    if (button8.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 21");
      display.println(" ");
      display.println("   Kopanitsa");
      display.display();
      validsong = 1;

      song = 21;
    }

    button18.update(); // C6# key
    if (button18.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 22");
      display.println(" ");
      display.println("Blowzabella");
      display.display();
      validsong = 1;

      song = 22;
    }

    button19.update(); // D6# key
    if (button19.fallingEdge()) {
      display.clearDisplay();
      display.setCursor(0, 0);
      display.setTextSize(1);
      display.println("   Song 23");
      display.println(" ");
      display.println("Herr Mannelig");
      display.display();
      validsong = 1;

      song = 23;
    }

    // Confirm the song selection and continue, by pressing the top right blue
    // key
    button20.update();
    if (button20.fallingEdge()) {
      choosesong = 1;
    }

  } // end of while choosesong equals zero

  if (validsong == 1) {

    display.clearDisplay();
    display.setCursor(0, 0);
    display.println("SELECTION CONFIRMED.");
    display.println(" ");
    display.println(" ");
    display.println("CHOOSE PLAYBACK");
    display.println(" ");
    display.println("SPEED:Lower Keys 1-14");
    display.display();

    choosespeed();

    display.clearDisplay();
    display.setTextSize(2);
    display.setCursor(0, 0);
    if (playbackspeed == 16) {
      display.println("    1");
    }
    if (playbackspeed == 17) {
      display.println("    2");
    }
    if (playbackspeed == 18) {
      display.println("    3");
    }
    if (playbackspeed == 19) {
      display.println("    4");
    }
    if (playbackspeed == 20) {
      display.println("    5");
    }
    if (playbackspeed == 21) {
      display.println("    6");
    }
    if (playbackspeed == 22) {
      display.println("    7");
    }
    if (playbackspeed == 23) {
      display.println("    8");
    }
    if (playbackspeed == 24) {
      display.println("    9");
    }
    if (playbackspeed == 25) {
      display.println("    10");
    }
    if (playbackspeed == 26) {
      display.println("    11");
    }
    if (playbackspeed == 27) {
      display.println("    12");
    }
    if (playbackspeed == 28) {
      display.println("    13");
    }
    if (playbackspeed == 29) {
      display.println("    14");
    }

    display.setTextSize(1);
    display.println(" ");
    display.println("Press (O) key");
    display.println("to start playback.");
    display.println("Press again to abort");
    display.println("during playback.");
    display.display();

    int startdemo = 0;

    while (startdemo == 0) {
      button20.update();
      if (button20.fallingEdge()) { // if pressing upper right white key,
                                    // falling edge will be true
        startdemo = 1;

        // Drones in demo mode are disabled for now as may not sound the correct
        // drones, best to just not have them in demo mode for simplicity.
      }

      delay(50);
    } // end of while

    display.clearDisplay();
    display.setTextSize(2);
    display.setCursor(0, 0);
    display.println(" PLAYING");
    display.println("  DEMO");
    display.println(" ");
    display.print("3->");
    delay(1000);
    display.display();
    display.print("2->");
    delay(1000);
    display.display();
    display.print("1->");
    delay(1000);
    display.display();
    delay(1000);

    // Serial.println("sending out MIDI demo now");

    // XXXXXXXXXXXXXXXX Play the tune XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

    // Select tune you want
    p = 0;
    endoftune = 0;
    noteVol = 127;

    while (endoftune == 0) {
      playtune();
      button20.update(); // press upper right blue key to exit playback
      if (button20.fallingEdge()) {
        break;
      }
    } // end of while end of tune equals zero
    // Turn off these 2 notes just in case they were left on, albeit with a
    // volume of zero, now we are at the end of the demo tune to be played.
    usbMIDI.sendNoteOff(103, 0, 1);
    usbMIDI.sendNoteOff(103, 0, 2);
    MIDI.sendNoteOff(103, 0, 1);
    MIDI.sendNoteOff(103, 0, 2);

    // We have already done a MIDI clearout at start of demo mode to make sure
    // everything is off
    /*
    //Turn off the drones anyway even if they werent turned on, just to make
    sure we have cancelled them at end of demo tune playback if(drones_silent ==
    0){                     // Drones silent not activated i.e. we do want to
    have the drone code turining them on and off


          usbMIDI.sendNoteOff(62, 0, 3);
          usbMIDI.sendNoteOff(43, 0, 4);
                           }

          usbMIDI.sendNoteOff(67, 0, 2);  // Turn off open melody string on
    channel 2 if in G/C mode usbMIDI.sendNoteOff(79, 0, 1);  // Turn off open
    second melody melody string on channel 1 if in G/C mode

          usbMIDI.sendNoteOff(62, 0, 2);  // Turn off open melody string on
    channel 2 if in D/G mode usbMIDI.sendNoteOff(74, 0, 1);  // Turn off open
    second melody string on channel 1 if in D/G mode

          usbMIDI.sendNoteOff(55, 0, 2);  // Turn off open melody string on
    channel 2 if in other tuning usbMIDI.sendNoteOff(67, 0, 1);  // Turn off
    open second melody string on channel if in other tuning

          usbMIDI.sendNoteOff(69, 0, 2);  // Turn off open melody string on
    channel 2 if in other tuning usbMIDI.sendNoteOff(81, 0, 1);  // Turn off
    open second melody string on channel if in other tuning
    */

    dronestate = 0;

    // Serial.println("XXXXXXXXXXXX end of tune XXXXXXXXXXXXXXXXXXXX");
    display.clearDisplay();
    display.setTextSize(2);
    // display.setTextColor(WHITE);
    display.setCursor(0, 0);
    display.println("END OF");
    display.println("DEMO MODE");
    display.setTextSize(1);
    display.println("Play normally");

    display.display();

  } // end of if validsong == 1
  delay(1000);

  if (validsong == 0) {
    display.clearDisplay();
    display.setCursor(0, 0);
    display.println(" ");
    display.println("INVALID SONG CHOICE");
    display.println(" ");
    display.println("Play keyboard");
    display.println("as normal");
    display.display();
    delay(2000);
  }

  clearallMIDI();

  // Display the Crank On Screen
  display.clearDisplay();
  display.drawBitmap(0, 0, logo55_glcd_bmp, 128, 64,
                     1); // Crank when ready screen display
  display.display();

} // end of void demo

void playtune() {

  getnote();
  // Print the  midi value and duration followed by a space for debugging
  // Serial.print(MidiValue);
  // Serial.print(NoteDurationSixteenths);
  // Serial.print(" ");

  // Play the note
  if (endoftune == 0) {
    if (MidiValue == 0) {
      usbMIDI.sendNoteOn(103, 0, 1);
      usbMIDI.sendNoteOn(103, 0, 2);
      MIDI.sendNoteOn(103, 0, 1);
      MIDI.sendNoteOn(103, 0, 2);
      // If MidiValue is zero that means we want silence. So we send out a high
      // note, but a real existing note value in this case 103, at a volume of
      // zero for required duration. Not sure if this is best way to do it but
      // it works OK
      if (dronestate == 1) {
        if (drones_silent ==
            0) { // Drones silent not activated i.e. we do want to have the
                 // drone code turining them on and off
                 // usbMIDI.sendNoteOff(62, 0, 2);   // Drone off
          // usbMIDI.sendNoteOff(43, 0, 3);   // Drone off
        }
        dronestate = 0;
      }
    } else {
      usbMIDI.sendNoteOn(MidiValue, noteVol, 2); // Lower melody string on Ch2
      MIDI.sendNoteOn(MidiValue, noteVol, 2);    // Lower melody string on Ch2
      note2 = MidiValue + 12;
      usbMIDI.sendNoteOn(note2, noteVol, 1); // Higher melody string on Ch1
      MIDI.sendNoteOn(note2, noteVol, 1);    // Higher melody string on Ch1
      if (MidiValue != 67) {
        usbMIDI.sendNoteOn(MidiValue, clickvolume, 6);
      } // Key click ON on channel 6 unless the note is open G string when you
        // would not get a key click
      if (MidiValue != 67) {
        MIDI.sendNoteOn(MidiValue, clickvolume, 6);
      }
      if (dronestate == 0) {
        // Turn drones back on if they were off during a period of silence
        if (drones_silent ==
            0) { // Drones silent not activated i.e. we do want to have the
                 // drone code turining them on and off
          // usbMIDI.sendNoteOn(62, DVol, 2);     //   Drone we have associated
          // with Channel 2 lusbMIDI.sendNoteOn(43, DVol, 3);     //   Drone we
          // have associated with Channel 3
        }
        dronestate = 1;
      }
    }
    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX DISPLAY THE NOTE
    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    switch (MidiValue) {
    case 0:
      display.clearDisplay();
      // just clear display during a pause where no sound is required
      display.display();
      break;
    case 91:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo31_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 89:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo30_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 90:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo41_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 88:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo29_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 87:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo40_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 86:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo28_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 85:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo39_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 84:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo27_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 83:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo26_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 82:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo38_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 81:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo25_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 80:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo37_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 79:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo24_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 78:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo36_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 77:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo23_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 76:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo22_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 75:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo35_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 74:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo21_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 73:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo34_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 72:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo20_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 71:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo19_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 70:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo33_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 69:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo18_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 68:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo32_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 67:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo17_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 66:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo42_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 65:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo43_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 64:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo44_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 63:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo45_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    case 62:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo46_glcd_bmp, 128, 64, 1);
      display.display();
      break;
    } // end of case series
      // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX END OF DISPLAY THE NOTE
    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
    delay(NoteDurationms); // sound note for required time
    usbMIDI.sendNoteOff(
        MidiValue, 0,
        2); // then stop sounding the base note on melody channel 2
    usbMIDI.sendNoteOff(
        note2, 0,
        1); // then stop sounding higher octave one on melody channel 1
    usbMIDI.sendNoteOff(MidiValue, 0, 6); // Key click OFF   on channel 6
    MIDI.sendNoteOff(MidiValue, 0,
                     2); // then stop sounding the base note on melody channel 2
    MIDI.sendNoteOff(
        note2, 0,
        1); // then stop sounding higher octave one on melody channel 1
    MIDI.sendNoteOff(MidiValue, 0, 6); // Key click OFF   on channel 6

    if (MidiValue == 0) {
      usbMIDI.sendNoteOff(103, 0,
                          1); // If there was a silent pause we turn this off
                              // now it is over, on melody channels 1 and 2
      usbMIDI.sendNoteOff(103, 0, 2);
      MIDI.sendNoteOff(103, 0,
                       1); // If there was a silent pause we turn this off now
                           // it is over, on melody channels 1 and 2
      MIDI.sendNoteOff(103, 0, 2);
    }
    p = p + 5; // jump from start of current quadruplet to start position of
               // next quadruplet of values. We jump 5 as there is a space
               // between each set of 4 characters to make the notes they
               // represent easier to create and read.
  } // end of endoftune equals zero

} // end of playtune

void getnote() {

  switch (song) {
    // XXXXXXXXXXXXXXXXXX  Song 1 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 0:
    myChar = pgm_read_byte_near(signMessage1 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage1 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage1 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage1 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage1 + p + 4);
    convertedstring = myChar - '0';
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXX Song 2 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 2:
    myChar = pgm_read_byte_near(signMessage2 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage2 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage2 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage2 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXX Song 3 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 3:
    myChar = pgm_read_byte_near(signMessage3 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage3 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage3 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage3 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXX Song 4 XXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 4:
    myChar = pgm_read_byte_near(signMessage4 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage4 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage4 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage4 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXX Song 5 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 5:
    myChar = pgm_read_byte_near(signMessage5 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage5 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage5 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage5 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXX Song 6 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 6:
    myChar = pgm_read_byte_near(signMessage6 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage6 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage6 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage6 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXX Song 7 XXXXXXXXXXXXXXXXXXXXXXXX
  case 7:
    myChar = pgm_read_byte_near(signMessage7 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage7 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage7 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage7 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXX Song 8 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 8:
    myChar = pgm_read_byte_near(signMessage8 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage8 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage8 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage8 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXX Song 9 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 9:
    myChar = pgm_read_byte_near(signMessage9 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage9 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage9 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage9 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Song 10 XXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 10:
    myChar = pgm_read_byte_near(signMessage10 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage10 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage10 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage10 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXX Song 11 XXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 11:
    myChar = pgm_read_byte_near(signMessage11 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage11 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage11 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage11 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXX Song 12 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 12:
    myChar = pgm_read_byte_near(signMessage12 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage12 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage12 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage12 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Song 13 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 13:
    myChar = pgm_read_byte_near(signMessage13 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage13 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage13 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage13 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Song 14 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 14:
    myChar = pgm_read_byte_near(signMessage14 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage14 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage14 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage14 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Song 15 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 15:
    myChar = pgm_read_byte_near(signMessage15 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage15 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage15 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage15 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Song 16 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 16:
    myChar = pgm_read_byte_near(signMessage16 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage16 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage16 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage16 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Song 17 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 17:
    myChar = pgm_read_byte_near(signMessage17 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage17 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage17 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage17 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Song 18 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 18:
    myChar = pgm_read_byte_near(signMessage18 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage18 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage18 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage18 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Song 19 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 19:
    myChar = pgm_read_byte_near(signMessage19 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage19 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage19 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage19 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Song 20 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 20:
    myChar = pgm_read_byte_near(signMessage20 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage20 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage20 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage20 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Song 21 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 21:
    myChar = pgm_read_byte_near(signMessage21 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage21 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage21 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage21 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Song 22 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 22:
    myChar = pgm_read_byte_near(signMessage22 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage22 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage22 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage22 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

    // XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX Song 23 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  case 23:
    myChar = pgm_read_byte_near(signMessage23 + p);
    convertedstring = myChar - '0';
    MIDItens = convertedstring;
    myChar = pgm_read_byte_near(signMessage23 + p + 1);
    convertedstring = myChar - '0';
    MIDIunits = convertedstring;
    myChar = pgm_read_byte_near(signMessage23 + p + 2);
    convertedstring = myChar - '0';
    notedurationtens = convertedstring;
    myChar = pgm_read_byte_near(signMessage23 + p + 3);
    convertedstring = myChar - '0';
    notedurationunits = convertedstring;
    if (myChar == 'X') {
      endoftune = 1;
    }
    break;

  } // End of switch

  // For debugging purposes
  // Serial.print("Acquired MIDI value = ");
  // Serial.print(MIDItens);
  // Serial.print(MIDIunits);
  // Serial.print(notedurationtens);
  // Serial.println(notedurationunits);

  MidiValue = (MIDItens * 10) + MIDIunits;
  NoteDurationSixteenths =
      (notedurationtens * 10) + notedurationunits; // duration in sixteenths
  NoteDurationms = NoteDurationSixteenths * 20 * (30 - playbackspeed);

} // end of getnote

void choosespeed() {
  int choosespd = 0;
  playbackspeed = 6; // default speed
  while (choosespd == 0) {
    button24.update();            // A4 key
    if (button24.fallingEdge()) { // if pressing handle button, falling edge
                                  // will be true
      choosespd = 1;
      playbackspeed = 16;
    }

    button25.update();            // B4 key
    if (button25.fallingEdge()) { // if pressing handle button, falling edge
                                  // will be true
      choosespd = 1;
      playbackspeed = 17;
    }

    button26.update();            // C5 key
    if (button26.fallingEdge()) { // if pressing handle button, falling edge
                                  // will be true
      choosespd = 1;
      playbackspeed = 18;
    }

    button27.update();            // D5 key
    if (button27.fallingEdge()) { // if pressing handle button, falling edge
                                  // will be true
      choosespd = 1;
      playbackspeed = 19;
    }

    button28.update();            // E5 key
    if (button28.fallingEdge()) { // if pressing handle button, falling edge
                                  // will be true
      choosespd = 1;
      playbackspeed = 20;
    }

    button29.update();            // F5 key
    if (button29.fallingEdge()) { // if pressing handle button, falling edge
                                  // will be true
      choosespd = 1;
      playbackspeed = 21;
    }

    button30.update();            // G5 key
    if (button30.fallingEdge()) { // if pressing handle button, falling edge
                                  // will be true
      choosespd = 1;
      playbackspeed = 22;
    }

    button31.update();            // A5 key
    if (button31.fallingEdge()) { // if pressing handle button, falling edge
                                  // will be true
      choosespd = 1;
      playbackspeed = 23;
    }

    button32.update();            // A5 key
    if (button32.fallingEdge()) { // if pressing handle button, falling edge
                                  // will be true
      choosespd = 1;
      playbackspeed = 24;
    }

    button33.update();            // C6 key
    if (button33.fallingEdge()) { // if pressing handle button, falling edge
                                  // will be true
      choosespd = 1;
      playbackspeed = 25;
    }

    button34.update();            // D6 key
    if (button34.fallingEdge()) { // if pressing handle button, falling edge
                                  // will be true
      choosespd = 1;
      playbackspeed = 26;
    }

    button35.update();            // E6 key
    if (button35.fallingEdge()) { // if pressing handle button, falling edge
                                  // will be true
      choosespd = 1;
      playbackspeed = 27;
    }

    button36.update();            // F6 key
    if (button36.fallingEdge()) { // if pressing handle button, falling edge
                                  // will be true
      choosespd = 1;
      playbackspeed = 28;
    }

    button37.update();            // G6 key
    if (button37.fallingEdge()) { // if pressing handle button, falling edge
                                  // will be true
      choosespd = 1;
      playbackspeed = 29;
    }

    delay(50);
  } // end of while choosespd equals zero

} // end of choose speed

void soundnote() {

  if (highestnotebeingplayed != prevhighestnotebeingplayed) {
    // Stop playing the previous note, ready to sound the new one
    usbMIDI.sendNoteOff(prevhighestnotebeingplayed, noteVol,
                        2); // Base melody string on channel 2
    usbMIDI.sendNoteOff(prevsecondmelodyhighest, noteVol,
                        1); // Higher melody string on channel 1
    usbMIDI.sendNoteOff(83, clickvolume, 6); // Key click OFF   on channel 6
    MIDI.sendNoteOff(prevhighestnotebeingplayed, noteVol,
                     2); // Base melody string on channel 2
    MIDI.sendNoteOff(prevsecondmelodyhighest, noteVol,
                     1);                  // Higher melody string on channel 1
    MIDI.sendNoteOff(83, clickvolume, 6); // Key click OFF   on channel 6

    // Serial.print("Note ");
    // Serial.print(prevhighestnotebeingplayed);
    // Serial.println(" silenced.");

    // Play the new note
    usbMIDI.sendNoteOn(highestnotebeingplayed, noteVol,
                       2); // Base melody string on channel 2
    usbMIDI.sendNoteOn(secondmelodyhighest, noteVol,
                       1); // Higher melody string on channel 1
    MIDI.sendNoteOn(highestnotebeingplayed, noteVol,
                    2); // Base melody string on channel 2
    MIDI.sendNoteOn(secondmelodyhighest, noteVol,
                    1); // Higher melody string on channel 1

    // Put in keyclick sounds except for when we are playing the open note AND
    // except for when we are recranking with a key still held down, whwre you
    // would also not hear a click normally.
    if (recrank != 1) {

      if (highestnotebeingplayed !=
          chan2midi) { // i.e. if we are NOT playing the open string thenm we DO
                       // need to sound a keyclick
        usbMIDI.sendNoteOn(83, clickvolume, 6); // Key click ON on channel 6
        MIDI.sendNoteOn(83, clickvolume, 6);    // Key click ON on channel 6
      }
    }

  } // end of if highestnote being played is not equal to previous one

  // When we start cranking after having stopped, recrank will be 1 the first
  // time, we want last note to sound again without keyclicks, if same key still
  // being held down
  if (recrank == 1) {

    usbMIDI.sendNoteOff(highestnotebeingplayed, noteVol,
                        2); // Base melody string on channel 2
    usbMIDI.sendNoteOff(secondmelodyhighest, noteVol,
                        1); // Higher melody string on channel 1
    // usbMIDI.sendNoteOff(prevhighestnotebeingplayed, noteVol, 2);  // Base
    // melody string on channel 2 usbMIDI.sendNoteOff(prevsecondmelodyhighest,
    // noteVol, 1); // Higher melody string on channel 1
    usbMIDI.sendNoteOff(83, clickvolume, 6); // Key click OFF   on channel 6
    MIDI.sendNoteOff(highestnotebeingplayed, noteVol,
                     2); // Base melody string on channel 2
    MIDI.sendNoteOff(secondmelodyhighest, noteVol,
                     1); // Higher melody string on channel 1
    // MIDI.sendNoteOff(prevhighestnotebeingplayed, noteVol, 2);  // Base melody
    // string on channel 2 MIDI.sendNoteOff(prevsecondmelodyhighest, noteVol,
    // 1); // Higher melody string on channel 1
    MIDI.sendNoteOff(83, clickvolume, 6); // Key click OFF   on channel 6

    // Play the new note
    usbMIDI.sendNoteOn(highestnotebeingplayed, noteVol,
                       2); // Base melody string on channel 2
    usbMIDI.sendNoteOn(secondmelodyhighest, noteVol,
                       1); // Higher melody string on channel 1
    MIDI.sendNoteOn(highestnotebeingplayed, noteVol,
                    2); // Base melody string on channel 2
    MIDI.sendNoteOn(secondmelodyhighest, noteVol,
                    1); // Higher melody string on channel 1
  }

  // For debugging
  // Serial.print("Recrank = ");
  // Serial.println(recrank);
  recrank = 0; // Resets it to zero
               // Serial.print("Recrank set to 0.  New note ");
  // Serial.print(highestnotebeingplayed);
  // Serial.println(" being played.");

  if (displaystyle == 1) {
    switch (highestnotebeingplayed) {
      /*
        case 117:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("A8");
            display.display();
            break;

        case 116:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("G8#");
            display.display();
            break;
      */
    case 115:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("G8");
      display.display();
      break;

    case 114:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("F8#");
      display.display();
      break;

    case 113:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("F8");
      display.display();
      break;

    case 112:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("E8");
      display.display();
      break;

    case 111:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("D8#");
      display.display();
      break;

    case 110:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("D8");
      display.display();
      break;

    case 109:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("C9#");
      display.display();
      break;

    case 108:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("C8");
      display.display();
      break;

    case 107:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("B7");
      display.display();
      break;

    case 106:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("A7#");
      display.display();
      break;

    case 105:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("A7");
      display.display();
      break;

    case 104:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("G7#");
      display.display();
      break;

      // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

    case 103:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("G7");
      display.display();
      break;

    case 102:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("F7#");
      display.display();
      break;

    case 101:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("F7");
      display.display();
      break;

    case 100:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("E7");
      display.display();
      break;

    case 99:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("D7#");
      display.display();
      break;

      // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    case 98:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("D7");
      display.display();
      break;

    case 97:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("C7#");
      display.display();
      break;

    case 96:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("C7");
      display.display();
      break;

    case 95:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("B6");
      display.display();
      break;

    case 94:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("A6#");
      display.display();
      break;

    case 93:
      display.clearDisplay();
      // display.setTextSize(3);
      // display.setCursor(40,20);
      // display.println("A6");
      display.drawBitmap(0, 0, logo56_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 92:
      display.clearDisplay();
      // display.setTextSize(3);
      // display.setCursor(40,20);
      // display.println("G6#");
      display.drawBitmap(0, 0, logo57_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 91:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo31_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 90:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo41_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 89:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo30_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 88:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo29_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 87:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo40_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 86:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo28_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 85:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo39_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 84:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo27_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 83:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo26_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 82:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo38_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 81:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo25_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 80:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo37_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 79:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo24_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 78:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo36_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 77:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo23_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 76:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo22_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 75:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo35_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 74:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo21_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 73:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo34_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 72:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo20_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 71:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo19_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 70:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo33_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 69:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo18_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 68:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo32_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 67:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo17_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 66:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo42_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 65:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo43_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 64:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo44_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 63:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo45_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 62:
      display.clearDisplay();
      display.drawBitmap(0, 0, logo46_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 61:
      display.clearDisplay();
      // display.setTextSize(3);
      // display.setCursor(40,20);
      // display.println("C4#");
      display.drawBitmap(0, 0, logo58_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 60:
      display.clearDisplay();
      // display.setTextSize(3);
      // display.setCursor(40,20);
      // display.println("C4");
      display.drawBitmap(0, 0, logo59_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 59:
      display.clearDisplay();
      // display.setTextSize(3);
      // display.setCursor(40,20);
      // display.println("B3");
      display.drawBitmap(0, 0, logo60_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 58:
      display.clearDisplay();
      // display.setTextSize(3);
      // display.setCursor(40,20);
      // display.println("A3#");
      display.drawBitmap(0, 0, logo61_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 57:
      display.clearDisplay();
      // display.setTextSize(3);
      // display.setCursor(40,20);
      // display.println("A3");
      display.drawBitmap(0, 0, logo62_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 56:
      display.clearDisplay();
      // display.setTextSize(3);
      // display.setCursor(40,20);
      // display.println("G3#");
      display.drawBitmap(0, 0, logo63_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 55:
      display.clearDisplay();
      // display.setTextSize(3);
      // display.setCursor(40,20);
      // display.println("G3");
      display.drawBitmap(0, 0, logo64_glcd_bmp, 128, 64, 1);
      display.display();
      break;

    case 54:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("F3#");
      display.display();
      break;

    case 53:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("F3");
      display.display();
      break;

    case 52:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("E3");
      display.display();
      break;

    case 51:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("D3#");
      display.display();
      break;

    case 50:
      display.clearDisplay();
      display.setTextSize(3);
      display.setCursor(40, 20);
      display.println("D3");
      display.display();
      break;

      /*
        //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

        case 49:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("C3#");
            display.display();
            break;

        case 48:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("C3");
            display.display();
            break;

        case 47:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("B2");
            display.display();
            break;

        case 46:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("A2#");
            display.display();
            break;

        case 45:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("A2");
            display.display();
            break;

        case 44:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("G2#");
            display.display();
            break;

        case 43:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("G2");
            display.display();
            break;

      //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
        case 42:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("F2#");
            display.display();
            break;

        case 41:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("F2");
            display.display();
            break;

        case 40:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("E2");
            display.display();
            break;

        case 39:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("D2#");
            display.display();
            break;

        case 38:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("D2");
            display.display();
            break;

        case 37:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("C2#");
            display.display();
            break;

        case 36:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("C2");
            display.display();
            break;

        case 35:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("B1");
            display.display();
            break;

        case 34:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("A1#");
            display.display();
            break;

        case 33:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("A1");
            display.display();
            break;

        case 32:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("G1#");
            display.display();
            break;

        case 31:
            display.clearDisplay();
            display.setTextSize(3);
            display.setCursor(40,20);
            display.println("G1");
            display.display();
            break;
       */

    } // Closed bracket after switch
  }   // Closed bracket after if displaystyle equals 1

  else {

    switch (highestnotebeingplayed) {
      /*
        case 117:
            display.clearDisplay();
            //display.println("A8");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("A");
            display.println("   8");
            display.println(" ");
            display.display();
            break;

        case 116:
            display.clearDisplay();
            //display.println("G8#");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("G");
            display.println("   8#");
            display.println(" ");
            display.display();
            break;
      */
    case 115:
      display.clearDisplay();
      // display.println("G8");
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("G");
      display.println("   8");
      display.println(" ");
      display.display();
      break;

    case 114:
      display.clearDisplay();
      // display.println("F8#");
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("F");
      display.println("   8#");
      display.println(" ");
      display.display();
      break;

    case 113:
      display.clearDisplay();
      // display.println("F8");
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("F");
      display.println("   8");
      display.println(" ");
      display.display();
      break;

    case 112:
      display.clearDisplay();
      // display.println("E8");
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("E");
      display.println("   8");
      display.println(" ");
      display.display();
      break;

    case 111:
      display.clearDisplay();
      // display.println("D8#");
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("D");
      display.println("   8#");
      display.println(" ");
      display.display();
      break;

    case 110:
      display.clearDisplay();
      // display.println("D8");
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("D");
      display.println("   8");
      display.println(" ");
      display.display();
      break;

    case 109:
      display.clearDisplay();
      // display.println("C8#");
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("C");
      display.println("   8#");
      display.println(" ");
      display.display();
      break;

    case 108:
      display.clearDisplay();
      // display.println("C8");
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("C");
      display.println("   8");
      display.println(" ");
      display.display();
      break;

    case 107:
      display.clearDisplay();
      // display.println("B7");
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("B");
      display.println("   7");
      display.println(" ");
      display.display();
      break;

    case 106:
      display.clearDisplay();
      // display.println("A7#");
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("A");
      display.println("   7#");
      display.println(" ");
      display.display();
      break;

    case 105:
      display.clearDisplay();
      // display.println("A7");
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("A");
      display.println("   7");
      display.println(" ");
      display.display();
      break;

    case 104:
      display.clearDisplay();
      // display.println("G7#");
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("G");
      display.println("   7#");
      display.println(" ");
      display.display();
      break;

      // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
    case 103:
      display.clearDisplay();
      // display.println("G7");
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("G");
      display.println("   7");
      display.println(" ");
      display.display();
      break;

    case 102:
      display.clearDisplay();
      // display.println("F7#");
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("F");
      display.println("   7#");
      display.println(" ");
      display.display();
      break;

    case 101:
      display.clearDisplay();
      // display.println("F7");
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("F");
      display.println("   7");
      display.println(" ");
      display.display();
      break;

    case 100:
      display.clearDisplay();
      // display.println("E7");
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("E");
      display.println("   7");
      display.println(" ");
      display.display();
      break;

    case 99:
      display.clearDisplay();
      // display.println("D7#");
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("D");
      display.println("   7#");
      display.println(" ");
      display.display();
      break;

      // xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

    case 98:
      display.clearDisplay();
      /* display.setTextSize(3);
       display.setCursor(40,20);*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("D");
      display.println("   7");
      display.println("Mib/Re#");
      display.display();
      break;

    case 97:
      display.clearDisplay();
      /*display.setTextSize(3);
      display.setCursor(40,20);*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("C#");
      display.println("   7");
      display.println("Do#");
      display.display();
      break;

    case 96:
      display.clearDisplay();
      /*display.setTextSize(3);
      display.setCursor(40,20);*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("C");
      display.println("   7");
      display.println("Do");
      display.display();
      break;

    case 95:
      display.clearDisplay();
      /*display.setTextSize(3);
      display.setCursor(40,20);*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("B");
      display.println("   6");
      display.println("Ti#");
      display.display();
      break;

    case 94:
      display.clearDisplay();
      /*display.setTextSize(3);
      display.setCursor(40,20);*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("A#");
      display.println("   6");
      display.println("Sib/La#");
      display.display();
      break;

    case 93:
      display.clearDisplay();
      /*display.setTextSize(3);
      display.setCursor(40,20);*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("A");
      display.println("   6");
      display.println("La");
      display.display();
      break;

    case 92:
      display.clearDisplay();
      /*display.setTextSize(3);
      display.setCursor(40,20);*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("G#");
      display.println("   6");
      display.println("Sol#");
      display.display();
      break;

    case 91:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo31_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("G");
      display.println("   6");
      display.println("Sol");
      display.display();
      break;

    case 90:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo41_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("F#");
      display.println("   6");
      display.println("Fa#");
      display.display();
      break;

    case 89:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo30_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("F");
      display.println("   6");
      display.println("Fa");
      display.display();
      break;

    case 88:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo29_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("E");
      display.println("   6");
      display.println("Mi");
      display.display();
      break;

    case 87:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo40_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("D#");
      display.println("   6");
      display.println("Mib/Re#");
      display.display();
      break;

    case 86:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo28_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("D");
      display.println("   6");
      display.println("Re");
      display.display();
      break;

    case 85:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo39_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("C#");
      display.println("   6");
      display.println("Do#");
      display.display();
      break;

    case 84:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo27_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("C");
      display.println("   6");
      display.println("Do");
      display.display();
      break;

    case 83:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo26_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("B");
      display.println("   5");
      display.println("Si");
      display.display();
      break;

    case 82:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo38_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("Bb/A#");
      display.println("   5");
      display.println("La#/Sib");
      display.display();
      break;

    case 81:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo25_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("A");
      display.println("   5");
      display.println("La");
      display.display();
      break;

    case 80:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo37_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("G#");
      display.println("   5");
      display.println("Sol#");
      display.display();
      break;

    case 79:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo24_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("G");
      display.println("   5");
      display.println("Sol");
      display.display();
      break;

    case 78:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo36_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("F#");
      display.println("   5");
      display.println("Fa#");
      display.display();
      break;

    case 77:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo23_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("F");
      display.println("   5");
      display.println("Fa");
      display.display();
      break;

    case 76:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo22_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("E");
      display.println("   5");
      display.println("Mi");
      display.display();
      break;

    case 75:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo35_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("Eb/D#");
      display.println("   5");
      display.println("Mib/Re#");
      display.display();
      break;

    case 74:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo21_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("D");
      display.println("   5");
      display.println("Re");
      display.display();
      break;

    case 73:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo34_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("C#");
      display.println("   5");
      display.println("Do#");
      display.display();
      break;

    case 72:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo20_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("C");
      display.println("   5");
      display.println("Do");
      display.display();
      break;

    case 71:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo19_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("B");
      display.println("   4");
      display.println("Si");
      display.display();
      break;

    case 70:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo33_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("Bb/A#");
      display.println("   4");
      display.println("Sib/La#");
      display.display();
      break;

    case 69:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo18_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("A");
      display.println("   4");
      display.println("La");
      display.display();
      break;

    case 68:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo32_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("G#");
      display.println("   4");
      display.println("Sol#");
      display.display();
      break;

    case 67:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo17_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("G");
      display.println("   4");
      display.println("Sol");
      display.display();
      break;

    case 66:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo42_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("F#");
      display.println("   4");
      display.println("Fa#");
      display.display();
      break;

    case 65:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo43_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("F");
      display.println("   4");
      display.println("Fa");
      display.display();
      break;

    case 64:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo44_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("E");
      display.println("   4");
      display.println("Mi");
      display.display();
      break;

    case 63:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo45_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("Eb/D#");
      display.println("   4");
      display.println("Mib/Re#");
      display.display();
      break;

    case 62:
      display.clearDisplay();
      // display.drawBitmap(0, 0,  logo46_glcd_bmp, 128, 64, 1);
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("D");
      display.println("   4");
      display.println("Re");
      display.display();
      break;

    case 61:
      display.clearDisplay();
      /*display.setTextSize(3);
      display.setCursor(40,20);
      display.println("C4#");*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("C#");
      display.println("   4");
      display.println("Do#");
      display.display();
      break;

    case 60:
      display.clearDisplay();
      /* display.setTextSize(3);
       display.setCursor(40,20);
       display.println("C4");*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("C");
      display.println("   4");
      display.println("Do");
      display.display();
      break;

    case 59:
      display.clearDisplay();
      /*display.setTextSize(3);
      display.setCursor(40,20);
      display.println("B3");*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("B");
      display.println("   3");
      display.println("Si");
      display.display();
      break;

    case 58:
      display.clearDisplay();
      /*display.setTextSize(3);
      display.setCursor(40,20);
      display.println("A3#");*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("Bb/A#");
      display.println("   3");
      display.println("Mib/La#");
      display.display();
      break;

    case 57:
      display.clearDisplay();
      /*display.setTextSize(3);
      display.setCursor(40,20);
      display.println("A3");*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("A");
      display.println("   3");
      display.println("La");
      display.display();
      break;

    case 56:
      display.clearDisplay();
      /* display.setTextSize(3);
       display.setCursor(40,20);
       display.println("G3#");*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("G#");
      display.println("   3");
      display.println("Sol#");
      display.display();
      break;

    case 55:
      display.clearDisplay();
      /*display.setTextSize(3);
      display.setCursor(40,20);
      display.println("G3");*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("G");
      display.println("   3");
      display.println("Sol");
      display.display();
      break;

    case 54:
      display.clearDisplay();
      /*display.setTextSize(3);
      display.setCursor(40,20);
      display.println("F3#");*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("F#");
      display.println("   3");
      display.println("Fa#");
      display.display();
      break;

    case 53:
      display.clearDisplay();
      /* display.setTextSize(3);
       display.setCursor(40,20);
       display.println("F3");*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("F");
      display.println("   3");
      display.println("Fa");
      display.display();
      break;

    case 52:
      display.clearDisplay();
      /*display.setTextSize(3);
      display.setCursor(40,20);
      display.println("E3");*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("E");
      display.println("   3");
      display.println("Mi");
      display.display();
      break;

    case 51:
      display.clearDisplay();
      /*display.setTextSize(3);
      display.setCursor(40,20);
      display.println("D3#");*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("Eb/D#");
      display.println("   3");
      display.println("Mib/Re#");
      display.display();
      break;

    case 50:
      display.clearDisplay();
      /*display.setTextSize(3);
      display.setCursor(40,20);
      display.println("D3");*/
      display.setTextSize(2);
      display.setCursor(10, 5);
      display.println("D");
      display.println("   3");
      display.println("Re");
      display.display();

      /*
      //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

        case 49:
            display.clearDisplay();
            //display.println("C3#");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("C");
            display.println("   3#");
            display.println("  ");
            display.display();
            break;

        case 48:
            display.clearDisplay();
            //display.println("C3");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("C");
            display.println("   3");
            display.println("  ");
            display.display();
            break;

        case 47:
            display.clearDisplay();
            //display.println("B2");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("B");
            display.println("   2");
            display.println("  ");
            display.display();
            break;

        case 46:
            display.clearDisplay();
            //display.println("A2#");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("A");
            display.println("   2#");
            display.println("  ");
            display.display();
            break;

        case 45:
            display.clearDisplay();
            //display.println("A2");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("A");
            display.println("   2");
            display.println("  ");
            display.display();
            break;

        case 44:
            display.clearDisplay();
            //display.println("G2#");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("G");
            display.println("   2#");
            display.println("  ");
            display.display();
            break;

        case 43:
            display.clearDisplay();
            //display.println("G2");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("G");
            display.println("   2");
            display.println("  ");
            display.display();
            break;


        //xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
         case 42:
            display.clearDisplay();
            //display.println(F2#");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("F");
            display.println("   2#");
            display.println("  ");
            display.display();
            break;

         case 41:
            display.clearDisplay();
            //display.println("F2");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("F");
            display.println("   2");
            display.println("  ");
            display.display();
            break;

        case 40:
            display.clearDisplay();
            //display.println("E2");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("E");
            display.println("   2");
            display.println("  ");
            display.display();
            break;

        case 39:
            display.clearDisplay();
            //display.println("D2#");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("D");
            display.println("   2#");
            display.println("  ");
            display.display();
            break;

        case 38:
            display.clearDisplay();
            //display.println("D2");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("D");
            display.println("   2");
            display.println("  ");
            display.display();
            break;

        case 37:
            display.clearDisplay();
            //display.println("C2#");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("C");
            display.println("   2");
            display.println("  ");
            display.display();
            break;

        case 36:
            display.clearDisplay();
            //display.println("C2");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("C");
            display.println("   2");
            display.println("  ");
            display.display();
            break;

        case 35:
            display.clearDisplay();
            //display.println("B1");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("B");
            display.println("   1");
            display.println("  ");
            display.display();
            break;

        case 34:
            display.clearDisplay();
            //display.println("A1#");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("A");
            display.println("   1#");
            display.println("  ");
            display.display();
            break;

        case 33:
            display.clearDisplay();
            //display.println("A1");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("A");
            display.println("   1");
            display.println("  ");
            display.display();
            break;

        case 32:
            display.clearDisplay();
            //display.println("G1");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("G");
            display.println("   1#");
            display.println("  ");
            display.display();
            break;

        case 31:
            display.clearDisplay();
            //display.println("G1");
            display.setTextSize(2);
            display.setCursor(10,5);
            display.println("G");
            display.println("   1");
            display.println("  ");
            display.display();
            break;
       */

    } // Closed bracket after second switch

  } // closed bracket after else

} // end of soundnotekey

void clearallMIDI() { // Precautionary step that turns everything off that might
                      // still be accidentally turned on

  //  if (debug == 1){
  // Serial.print("choosekey at start of MIDI reset = ");
  // Serial.println(choosekey);
  //               }

  display.clearDisplay();
  display.setTextSize(1);
  display.setCursor(0, 0);
  display.println(" ");
  display.println(" ");
  display.println("--Clearing all MIDI--");
  display.display();

  // int i2;
  usbMIDI.sendNoteOff(chan2midi, 0, 2); // Turns OFF last used note on Ch2
  usbMIDI.sendNoteOff(chan1midi, 0, 1); //  Turns OFF last used note on Ch1
  MIDI.sendNoteOff(chan2midi, 0, 2);    // Turns OFF last used note on Ch2
  MIDI.sendNoteOff(chan1midi, 0, 1);    // Turns OFF last used note on Ch1

  for (int i = 43; i <= 103; i++) {

    usbMIDI.sendNoteOff(i, 0,
                        2); // Turns OFF any notes that might still be on, on
                            // channel 2, the base melody notes channel.
    usbMIDI.sendNoteOff(i, 0,
                        1);    // Turns OFF any notes that might still be on, on
                               // channel 1, the high melody notes channel.
    MIDI.sendNoteOff(i, 0, 2); // Turns OFF any notes that might still be on, on
                               // channel 2, the base melody notes channel.
    MIDI.sendNoteOff(i, 0, 1); // Turns OFF any notes that might still be on, on
                               // channel 1, the high melody notes channel.

    // delay(20);
  }

  /*
                     for (int i = 50; i <= 110; i++) {
                                          usbMIDI.sendNoteOff(i, 0, 6);
                                          MIDI.sendNoteOff(i, 0, 6); // Turns
     OFF any keyclicks that might be associated with each of these notes too on
     channel 6 delay(20);
                                                     }
  */

  usbMIDI.sendNoteOff(83, clickvolume, 6);
  MIDI.sendNoteOff(83, clickvolume, 6); // Turns OFF any keyclicks on channel 6

  /*
  // Then do exactly the same for the drones. Any drones that might still be on
  for any reason get turned off if crank stopped for more than about 1 second.
  if(choosekey ==1){   // melody string is G and we want Trompette D4   and a
  drone of G2 turned OFF usbMIDI.sendNoteOff(62, 0, 3);     //   Plays Trompette
  D4 you have chosen to link to Channel 3 in the phone app.
  usbMIDI.sendNoteOff(43, 0, 4);     //   Plays drone G2 you have chosen to
  lionk to Channel 4 in the phone app. MIDI.sendNoteOff(62, 0, 3);     // Plays
  Trompette D4 you have chosen to link to Channel 3 in the phone app.
  MIDI.sendNoteOff(43, 0, 4);     //   Plays drone G2 you have chosen to lionk
  to Channel 4 in the phone app.

          }
  if(choosekey == 2){   // melody string is G and we want Trompette C4   and a
  drone of C3 turned OFF usbMIDI.sendNoteOff(60, 0, 3);     //   Plays Trompette
  C4 you have chosen to link to Channel 3 in the phone app.
  usbMIDI.sendNoteOff(48, 0, 4);     //   Plays drone C3 you have chosen to
  lionk to Channel 4 in the phone app. MIDI.sendNoteOff(60, 0, 3);     // Plays
  Trompette C4 you have chosen to link to Channel 3 in the phone app.
  MIDI.sendNoteOff(48, 0, 4);     //   Plays drone C3 you have chosen to lionk
  to Channel 4 in the phone app.

          }
  if(choosekey == 3){   // melody string is D and we want Trompette D4   and a
  drone of D2 turned OFF usbMIDI.sendNoteOff(62, 0, 3);     //   Plays Trompette
  D4 you have chosen to link to Channel 3 in the phone app.
  usbMIDI.sendNoteOff(38, 0, 4);     //   Plays drone D2 you have chosen to
  lionk to Channel 4 in the phone app. MIDI.sendNoteOff(62, 0, 3);     // Plays
  Trompette D4 you have chosen to link to Channel 3 in the phone app.
  MIDI.sendNoteOff(38, 0, 4);     //   Plays drone D2 you have chosen to lionk
  to Channel 4 in the phone app.

          }
  if(choosekey == 4){   // melody string is D and we want Trompette D4   and a
  drone of G2 turned OFF usbMIDI.sendNoteOff(62, 0, 3);     //   Plays Trompette
  D4 you have chosen to link to Channel 3 in the phone app.
  usbMIDI.sendNoteOff(43, 0, 4);     //   Plays drone G2 you have chosen to link
  to Channel 4 in the phone app. MIDI.sendNoteOff(62, 0, 3);     //   Plays
  Trompette D4 you have chosen to link to Channel 3 in the phone app.
  MIDI.sendNoteOff(43, 0, 4);     //   Plays drone G2 you have chosen to link to
  Channel 4 in the phone app.

          }
  if(choosekey == 5){   // melody string is D and we want Trompette D4   and a
  drone of A3 turned OFF usbMIDI.sendNoteOff(62, 0, 3);     //   Plays Trompette
  D4 you have chosen to link to Channel 3 in the phone app.
  usbMIDI.sendNoteOff(57, 0, 4);     //   Plays drone A3 you have chosen to link
  to Channel 4 in the phone app. MIDI.sendNoteOff(62, 0, 3);     //   Plays
  Trompette D4 you have chosen to link to Channel 3 in the phone app.
  MIDI.sendNoteOff(57, 0, 4);     //   Plays drone A3 you have chosen to link to
  Channel 4 in the phone app.

          }
  if(choosekey == 6){   // melody string is G3 very low G and we want Trompette
  D4   and a drone of D3 turned OFF usbMIDI.sendNoteOff(62, 0, 3);     // Plays
  Trompette A3 you have chosen to link to Channel 3 in the phone app.
  usbMIDI.sendNoteOff(50, 0, 4);     //   Plays drone D3 you have chosen to link
  to Channel 4 in the phone app. MIDI.sendNoteOff(62, 0, 3);     //   Plays
  Trompette A3 you have chosen to link to Channel 3 in the phone app.
  MIDI.sendNoteOff(50, 0, 4);     //   Plays drone D3 you have chosen to link to
  Channel 4 in the phone app.

          }
  if(choosekey == 7){   // melody string is D4 and we want Trompette D4   and a
  drone of D3 turned OFF usbMIDI.sendNoteOff(62, DVol, 3);     //   Plays
  Trompette D4 you have chosen to link to Channel 3 in the phone app.
  usbMIDI.sendNoteOff(50, DVol, 4);     //   Plays drone D3 you have chosen to
  link to Channel 4 in the phone app. MIDI.sendNoteOff(62, DVol, 3);     //
  Plays Trompette D4 you have chosen to link to Channel 3 in the phone app.
  MIDI.sendNoteOff(50, DVol, 4);     //   Plays drone D3 you have chosen to link
  to Channel 4 in the phone app.

                  }
  if(choosekey == 8){   // melody string is A4 and we want Trompette E4   and a
  drone of A2 turned OFF usbMIDI.sendNoteOff(64, DVol, 3);     //   Plays
  Trompette E4 you have chosen to link to Channel 3 in the phone app.
  usbMIDI.sendNoteOff(45, DVol, 4);     //   Plays drone A2 you have chosen to
  link to Channel 4 in the phone app. MIDI.sendNoteOff(64, DVol, 3);     //
  Plays Trompette E4 you have chosen to link to Channel 3 in the phone app.
  MIDI.sendNoteOff(45, DVol, 4);
                  }
  if(choosekey == 9){   // melody string is G3 and we want Trompette C4   and a
  drone of G2 turned OFF usbMIDI.sendNoteOff(60, 0, 3);     //   Plays Trompette
  C4 you have chosen to link to Channel 3 in the phone app.
  usbMIDI.sendNoteOff(43, 0, 4);     //   Plays drone G2 you have chosen to link
  to Channel 4 in the phone app. MIDI.sendNoteOff(60, 0, 3);     //   Plays
  Trompette C4 you have chosen to link to Channel 3 in the phone app.
  MIDI.sendNoteOff(43, 0, 4);     //   Plays drone G2 you have chosen to link to
  Channel 4 in the phone app.

                  }
  if(choosekey == 10){   // melody string is G4 and we want Trompette C4   and a
  drone of G2 turned OFF usbMIDI.sendNoteOff(60, 0, 3);     //   Plays Trompette
  C4 you have chosen to link to Channel 3 in the phone app.
  usbMIDI.sendNoteOff(43, 0, 4);     //   Plays drone G2 you have chosen to link
  to Channel 4 in the phone app. MIDI.sendNoteOff(60, 0, 3);     //   Plays
  Trompette C4 you have chosen to link to Channel 3 in the phone app.
  MIDI.sendNoteOff(43, 0, 4);
                  }

  if(choosekey == 11){   // melody string is G3 and we want Trompette C4   and a
  drone of G2 turned OFF usbMIDI.sendNoteOff(60, 0, 3);     //   Plays Trompette
  C4 you have chosen to link to Channel 3 in the phone app.
  usbMIDI.sendNoteOff(36, 0, 4);     //   Plays drone G2 you have chosen to link
  to Channel 4 in the phone app. MIDI.sendNoteOff(60, 0, 3);     //   Plays
  Trompette C4 you have chosen to link to Channel 3 in the phone app.
  MIDI.sendNoteOff(36, 0, 4);     //   Plays drone G2 you have chosen to link to
  Channel 4 in the phone app.

                  }

  if(choosekey == 12){   // melody string is G3 and we want Trompette D4   and a
  drone of D2 turned OFF usbMIDI.sendNoteOff(62, 0, 3);     //   Plays Trompette
  D4 you have chosen to link to Channel 3 in the phone app.
  usbMIDI.sendNoteOff(38, 0, 4);     //   Plays drone D2 you have chosen to link
  to Channel 4 in the phone app. MIDI.sendNoteOff(62, 0, 3);     //   Plays
  Trompette D4 you have chosen to link to Channel 3 in the phone app.
  MIDI.sendNoteOff(38, 0, 4);
                  }

  if(choosekey == 13){   // melody string is G3 and we want Trompette G4   and a
  drone of G2 turned OFF usbMIDI.sendNoteOff(67, 0, 3);     //   Plays Trompette
  G4 you have chosen to link to Channel 3 in the phone app.
  usbMIDI.sendNoteOff(43, 0, 4);     //   Plays drone G2 you have chosen to link
  to Channel 4 in the phone app. MIDI.sendNoteOff(67, 0, 3);     //   Plays
  Trompette G4 you have chosen to link to Channel 3 in the phone app.
  MIDI.sendNoteOff(43, 0, 4);
                  }

  if(choosekey == 14){   // melody string is D3 and we want Trompette D4   and a
  drone of G2 turned OFF usbMIDI.sendNoteOff(62, 0, 3);     //   Plays Trompette
  D4 you have chosen to link to Channel 3 in the phone app.
  usbMIDI.sendNoteOff(43, 0, 4);     //   Plays drone G2 you have chosen to link
  to Channel 4 in the phone app. MIDI.sendNoteOff(62, 0, 3);     //   Plays
  Trompette D4 you have chosen to link to Channel 3 in the phone app.
  MIDI.sendNoteOff(43, 0, 4);
                  }
  */
  // Turn off last used trompette on Chan 3
  usbMIDI.sendNoteOff(trompmidi, 0, 3);
  MIDI.sendNoteOff(trompmidi, 0, 3);

  // Turn off last used drone on Chan 4
  usbMIDI.sendNoteOff(dronemidi, 0, 4);
  MIDI.sendNoteOff(dronemidi, 0, 4);

  // Turn off all possible drones that might be on channel 3
  usbMIDI.sendNoteOff(62, 0, 3);
  MIDI.sendNoteOff(62, 0, 3);

  usbMIDI.sendNoteOff(60, 0, 3);
  MIDI.sendNoteOff(60, 0, 3);

  usbMIDI.sendNoteOff(64, 0, 3);
  MIDI.sendNoteOff(64, 0, 3);

  usbMIDI.sendNoteOff(67, 0, 3);
  MIDI.sendNoteOff(67, 0, 3);

  // Turn off all possible drones that might be on channel 4
  usbMIDI.sendNoteOff(36, 0, 4);
  MIDI.sendNoteOff(36, 0, 4);

  usbMIDI.sendNoteOff(38, 0, 4);
  MIDI.sendNoteOff(38, 0, 4);

  usbMIDI.sendNoteOff(43, 0, 4);
  MIDI.sendNoteOff(43, 0, 4);

  usbMIDI.sendNoteOff(45, 0, 4);
  MIDI.sendNoteOff(45, 0, 4);

  usbMIDI.sendNoteOff(48, 0, 4);
  MIDI.sendNoteOff(48, 0, 4);

  usbMIDI.sendNoteOff(50, 0, 4);
  MIDI.sendNoteOff(50, 0, 4);

  usbMIDI.sendNoteOff(57, 0, 4);
  MIDI.sendNoteOff(57, 0, 4);

  // Then do same for the buzz on channel 5just to make sure
  usbMIDI.sendNoteOff(buzzrootkey, buzzvolume,
                      5); // Chien buzz off on channel 5
  MIDI.sendNoteOff(buzzrootkey, buzzvolume, 5);
  MidiValue = 0; // Reset the current midi value to silence

  display.clearDisplay();
  display.setTextSize(1);
  display.setCursor(0, 0);
  display.display();

} // end of clearallMIDI

// enum Note maps absolute note names to MIDI note numbers (middle C4 = 60), which range from
// 0 to 127.
enum Note {
  c_1, c_1s, d_1, d_1s, e_1, f_1, f_1s, g_1, g_1s, a_1, a_1s, b_1,
  c0, c0s, d0, d0s, e0, f0, f0s, g0, g0s, a0, a0s, b0,
  c1, c1s, d1, d1s, e1, f1, f1s, g1, g1s, a1, a1s, b1,
  c2, c2s, d2, d2s, e2, f2, f2s, g2, g2s, a2, a2s, b2,
  c3, c3s, d3, d3s, e3, f3, f3s, g3, g3s, a3, a3s, b3,
  c4, c4s, d4, d4s, e4, f4, f4s, g4, g4s, a4, a4s, b4,
  c5, c5s, d5, d5s, e5, f5, f5s, g5, g5s, a5, a5s, b5,
  c6, c6s, d6, d6s, e6, f6, f6s, g6, g6s, a6, a6s, b6,
  c7, c7s, d7, d7s, e7, f7, f7s, g7, g7s, a7, a7s, b7,
  c8, c8s, d8, d8s, e8, f8, f8s, g8, g8s, a8, a8s, b8,
  c9, c9s, d9, d9s, e9, f9, f9s, g9
};

// string array NoteNum is the reverse of the above Note enum.  It maps MIDI note numbers to
// screen-friendly note names.
string NoteNum[] = {
  "C-1", "C-1#", "D-1", "D-1#", "E-1", "F-1", "F-1#", "G-1", "G-1#", "A-1", "A-1#", "B-1",
  "C0", "C0#", "D0", "D0#", "E0", "F0", "F0#", "G0", "G0#", "A0", "A0#", "B0",
  "C1", "C1#", "D1", "D1#", "E1", "F1", "F1#", "G1", "G1#", "A1", "A1#", "B1",
  "C2", "C2#", "D2", "D2#", "E2", "F2", "F2#", "G2", "G2#", "A2", "A2#", "B2",
  "C3", "C3#", "D3", "D3#", "E3", "F3", "F3#", "G3", "G3#", "A3", "A3#", "B3",
  "C4", "C4#", "D4", "D4#", "E4", "F4", "F4#", "G4", "G4#", "A4", "A4#", "B4",
  "C5", "C5#", "D5", "D5#", "E5", "F5", "F5#", "G5", "G5#", "A5", "A5#", "B5",
  "C6", "C6#", "D6", "D6#", "E6", "F6", "F6#", "G6", "G6#", "A6", "A6#", "B6",
  "C7", "C7#", "D7", "D7#", "E7", "F7", "F7#", "G7", "G7#", "A7", "A7#", "B7",
  "C8", "C8#", "D8", "D8#", "E8", "F8", "F8#", "G8", "G8#", "A8", "A8#", "B8",
  "C9", "C9#", "D9", "D9#", "E9", "F9", "F9#", "G9"
};

int gc_or_dg; // 0 = G/C tuning, 1 = D/G tuning
bool finished_tuning = false;
string base_str;
string display_str;
bool completed;

// Function choose_base_tuning() runs the first screen: G/C or D/G tuning.
// This part just determines the gc_or_dg variable.
void choose_base_tuning() {
  display.clearDisplay();
  display.setTextSize(1);
  display.setCursor(0, 0);
  display.print(
    " Choose Base Tuning: \n"
    "  (Use bottom keys)  \n"
    "                     \n"
    "       1. G/C        \n"
    "                     \n"
    "       2. D/G        \n"
    "                     \n"
    "                     \n"
  );
  display.display();
  delay(1000); // I'm not sure what we're waiting for but John did it so I'm doing it for now

  completed = false;

  while(!completed) {
    // Button24 is button #1 and they count up from there
    button24.update();
    if(button24.fallingEdge()) {
      gc_or_dg = 0;
      completed = true;
    };

    button25.update();
    if(button25.fallingEdge()) {
      gc_or_dg = 1;
      completed = true;
    };
  };
};

// Function choose_chanter_tuning() runs the chanter selection screen.
// This sets chan1midi and chan2midi
void choose_chanter_tuning() {

  if (gc_or_dg == 0) {
    base_str = "G/C";
    chan1midi = Note(g4); // high chanter
    chan2midi = Note(g3); // low chanter
  } else {
    base_str = "D/G";
    chan1midi = Note(d4);
    chan2midi = Note(d3);
  };

  display.clearDisplay();
  display.setTextSize(1);
  display.setCursor(0, 0);
  display_str = "         " + base_str + "         \n"
                "  Select Chanters:   \n"
                "                     \n"
                "   1. Norm: " + NoteNum[chan2midi] + "/" + NoteNum[chan1midi] + "    \n"
                "   2. Low:  " + NoteNum[chan2midi - 12] + "/" + NoteNum[chan1midi - 12] + "    \n"
                "   3. High: " + NoteNum[chan2midi + 12] + "/" + NoteNum[chan1midi + 12] + "    \n"
                "                     \n"
                "                     \n";
  display.print(display_str.c_str());
  display.display();
  delay(1000); // I'm not sure what we're waiting for but John did it so I'm doing it for now

  // Poll for buttons 1-3 and adjust chanter tuning if necessary.
  completed = false;

  while(!completed) {
    button24.update();
    if (button24.fallingEdge()) {
      completed = true;
    };

    button25.update();
    if (button25.fallingEdge()) {
      chan1midi = chan1midi - 12;
      chan2midi = chan2midi - 12;
      completed = true;
    };

    button26.update();
    if (button26.fallingEdge()) {
      chan1midi = chan1midi + 12;
      chan2midi = chan2midi + 12;
      completed = true;
    };
  };
};

// Function choose_drone_tuning() runs the drone/trompette selection.
// This sets dronemidi and trompmidi
void choose_drone_tuning() {

  display.clearDisplay();
  display.setTextSize(1);
  display.setCursor(0, 0);
  if (gc_or_dg == 0) {
    display_str = " " + base_str + ", " + NoteNum[chan2midi] + "/" + NoteNum[chan1midi] + " Chanters \n"
             " Select Drone/Tromp: \n"
             " 1. C2/G2 | 6. G2/C4 \n"
             " 2. C2/C3 | 7. C3/G3 \n"
             " 3. C2/G4 | 8. C3/C4 \n"
             " 4. G2/C3 | 9. G3/C4 \n"
             " 5. G2/G3 |10. G3/G4 \n"
             "                     \n";
    display.print(display_str.c_str());
  } else {
    display_str = " " + base_str + ", " + NoteNum[chan2midi] + "/" + NoteNum[chan1midi] + " Chanters \n"
             " Select Drone/Tromp: \n"
             " 1. D2/G2 | 6. G2/D4 \n"
             " 2. D2/D3 | 7. D3/G3 \n"
             " 3. D2/G4 | 8. D3/D4 \n"
             " 4. G2/D3 | 9. G3/D4 \n"
             " 5. G2/G3 |10. G3/G4 \n"
             "                     \n";
    display.print(display_str.c_str());
  };
  display.display();
  delay(1000);

  // Poll for buttons 1-10 and adjust drone/trompette as per the above strings
  completed = false;

  while(!completed) {
    button24.update();
    if (button24.fallingEdge()) {
      dronemidi = (gc_or_dg == 0) ? Note(c2) : Note(d2);
      trompmidi = Note(g2);
      completed = true;
    };

    button25.update();
    if (button25.fallingEdge()) {
      dronemidi = (gc_or_dg == 0) ? Note(c2) : Note(d2);
      trompmidi = (gc_or_dg == 0) ? Note(c3) : Note(d3);
      completed = true;
    };

    button26.update();
    if (button26.fallingEdge()) {
      dronemidi = (gc_or_dg == 0) ? Note(c2) : Note(d2);
      trompmidi = Note(g4);
      completed = true;
    };

    button27.update();
    if (button27.fallingEdge()) {
      dronemidi = Note(g2);
      trompmidi = (gc_or_dg == 0) ? Note(c3) : Note(d3);
      completed = true;
    };

    button28.update();
    if (button28.fallingEdge()) {
      dronemidi = Note(g2);
      trompmidi = Note(g3);
      completed = true;
    };

    button29.update();
    if (button29.fallingEdge()) {
      dronemidi = Note(g2);
      trompmidi = (gc_or_dg == 0) ? Note(c4) : Note(d4);
      completed = true;
    };

    button30.update();
    if (button30.fallingEdge()) {
      dronemidi = (gc_or_dg == 0) ? Note(c3) : Note(d3);
      trompmidi = Note(g3);
      completed = true;
    };

    button31.update(); // 8
    if (button31.fallingEdge()) {
      dronemidi = (gc_or_dg == 0) ? Note(c3) : Note(d3);
      trompmidi = (gc_or_dg == 0) ? Note(c4) : Note(d4);
      completed = true;
    };

    button32.update(); // 9
    if (button32.fallingEdge()) {
      dronemidi = Note(g3);
      trompmidi = (gc_or_dg == 0) ? Note(c4) : Note(d4);
      completed = true;
    };

    button33.update(); // 10
    if (button33.fallingEdge()) {
      dronemidi = Note(g3);
      trompmidi = Note(g4);
      completed = true;
    };
  };
};

// Function choose_capo_tuning() runt the capo selection.
// This optionally pushes the drone and tromp notes up a full step (+2 MIDI notes).
void choose_capo_tuning() {
  display.clearDisplay();
  display.setTextSize(1);
  display.setCursor(0, 0);
  display_str = " " + base_str + ", " + NoteNum[chan2midi] + "/" + NoteNum[chan1midi] + " Chanters \n"
           "  " + NoteNum[dronemidi] + "/" + NoteNum[trompmidi] + " Drone/Tromp  \n"
           "      Use Capo?      \n"
           "                     \n"
           "  1. No              \n"
           "  2. +1 Whole Step   \n"
           "                     \n"
           "                     \n";
  display.print(display_str.c_str());
  display.display();
  delay(1000); // I'm not sure what we're waiting for but John did it so I'm doing it for now

  completed = false;

  while(!completed) {
    // Button24 is button #1 and they count up from there
    button24.update();
    if(button24.fallingEdge()) {
      // +0, nothing to do here...
      completed = true;
    };

    button25.update();
    if(button25.fallingEdge()) {
      // Up whole step
      dronemidi = dronemidi + 2;
      trompmidi = trompmidi + 2;
      completed = true;
    };
  };
};

// Function summary_tuning() prints a summary of all these selections and prompts the user to
// accept them or not.
void summary_tuning() {
  display.clearDisplay();
  display.setTextSize(1);
  display.setCursor(0, 0);
  display_str = "      SUMMARY:       \n"
           " " + base_str + ", " + NoteNum[chan2midi] + "/" + NoteNum[chan1midi] + " Chanters \n"
           "  " + NoteNum[dronemidi] + "/" + NoteNum[trompmidi] + " Drone/Tromp  \n"
           "                     \n"
           "      Accept?        \n"
           "                     \n"
           "    1. Continue      \n"
           "    2. Start Over    \n";
  display.print(display_str.c_str());
  display.display();
  delay(1000); // I'm not sure what we're waiting for but John did it so I'm doing it for now

  completed = false;

  while(!completed) {
    // Button24 is button #1 and they count up from there
    button24.update();
    if(button24.fallingEdge()) {
      finished_tuning = true;
      completed = true;
    };

    button25.update();
    if(button25.fallingEdge()) {
      completed = true;
    };
  };
};

// Function tunings() accepts no arguments and presents the user with a series of menu prompts
// on-screen in order to set a tuning for the gurdy.  Function returns no data, however it modifies
// these global variables.  These are int values that correspond to MIDI note numbers.  A table of
// them can be found here: https://studiocode.dev/resources/midi-middle-c/
//
// NOTE: MIDI note numbers are _not_ standard.  In this case we are using a middle C4 (C4 = note 60).
//
// VARIABLES MODIFIED:
//  chan1midi - high chanter
//  chan2midi - low chanter
//  trompmidi - trompette a.k.a. high drone
//  dronemidi - drone (low)
void tunings() {

  // MAIN FUNCTION LOGIC
  while (!finished_tuning) {
    choose_base_tuning();
    choose_chanter_tuning();
    choose_drone_tuning();
    choose_capo_tuning();
    buzzrootkey = trompmidi;
    summary_tuning();
  };

  finished_tuning = false; // For if/when it's called again.

  // set the buzz to match the tromp.
  // TODO: In the future I want to set a low limit for this because the buzz starts to break up.
  buzzrootkey = trompmidi;

  // I'm basically not using the octave or capo feature as written.
  octavestatus = 0;
  tonestatus = 0;

  // I think if I just do this the save feature still works, but I'm not sure if I need to
  // deal with choosekey...
  EEPROM.write(tuningaddress, choosekey);
  EEPROM.write(chan1midiaddress, chan1midi);
  EEPROM.write(chan2midiaddress, chan2midi);
  EEPROM.write(trompmidiaddress, trompmidi);
  EEPROM.write(dronemidiaddress, dronemidi);
  EEPROM.write(tonestatusaddress, tonestatus);
  EEPROM.write(octavestatusaddress, octavestatus);

  clearallMIDI();

};

void lookforanewtuning() {

  // display.clearDisplay();
  // display.setTextSize(1);
  // display.setCursor(0,0);
  // display.println("Looking");
  // display.display();
  // delay(500);

  // Look at the key combinations to move the Trompette and Drone up or down a
  // full tone i.e. 2 MIDI steps
  button2.update();
  if (button2.fallingEdge()) {
    but2status = 1;
  }
  if (button2.risingEdge()) {
    but2status = 0;
  }
  // button18.update();
  button19.update();
  if (button19.fallingEdge()) {
    but19status = 1;
  }
  if (button19.risingEdge()) {
    but19status = 0;
  }
  button24.update();
  if (button24.fallingEdge()) {
    but24status = 1;
  }
  if (button24.risingEdge()) {
    but24status = 0;
  }
  button36.update();
  if (button36.fallingEdge()) {
    but36status = 1;
  }
  if (button36.risingEdge()) {
    but36status = 0;
  }
  button37.update();
  if (button37.fallingEdge()) {
    but37status = 1;
  }
  if (button37.risingEdge()) {
    but37status = 0;
  }

  if (digitalRead(capobuttonPin) == LOW) {
    capobuttonstatus = 1;
  }

  if ((but2status == 1 && but19status == 1) ||
      capobuttonstatus == 1) { // i.e. selecting capo on off

    capobuttonstatus = 0; // Reset this if required

    // Serial.println("UP or DOWN one tone");

    display.clearDisplay();
    display.setTextSize(1);
    display.setCursor(0, 0);
    int temporaryvalue = tonestatus;
    if (temporaryvalue == 1) {
      trompmidi = trompmidi - 2;
      dronemidi = dronemidi - 2;
      tonestatus = 0; // tonestatus is bistable between 1 and 0 each time you
                      // press button 2 with button 19 which is one in from
                      // right hand light blue button.
    }
    if (temporaryvalue == 0) { // Only allows it to go up one full tone or back
      trompmidi = trompmidi + 2;
      dronemidi = dronemidi + 2;
      tonestatus = 1;
    }
    // Add in max min limits later
    if (choosekey == 1) {
      display.println("   G/C C Drones");
    }
    if (choosekey == 2) {
      display.println("   G/C G Drones");
    }
    if (choosekey == 3) {
      display.println("   D/G D Drones");
    }
    if (choosekey == 4) {
      display.println("   D/G G Drones");
    }
    if (choosekey == 5) {
      display.println("  G/C CG Drones");
    }
    // display.println(" ");
    display.print("Melody Chan 1:   ");
    // display.println(chan1midi);
    MIDInote = chan1midi;
    // if(MIDInote > 91 || MIDInote < 43){ display.println("ERR"); }
    // else{ putinthenote(); }
    putinthenote();
    display.print("Melody Chan 2:   ");
    // display.println(chan2midi);
    MIDInote = chan2midi;
    // if(MIDInote > 91 || MIDInote < 43){ display.println("ERR"); }
    // else{ putinthenote(); }
    putinthenote();
    display.print("Tromp  Chan 3:   ");
    // display.println(trompmidi);
    MIDInote = trompmidi;
    // if(MIDInote > 103 || MIDInote < 43){ display.println("ERR"); }
    // else{ putinthenote(); }
    putinthenote();
    display.print("Drone  Chan 4:   ");
    // display.println(dronemidi);
    MIDInote = dronemidi;
    // if(MIDInote > 103 || MIDInote < 43){ display.println("ERR"); }
    // else{ putinthenote(); }
    putinthenote();

    display.print("OCTAVE=");
    if (octavestatus == 1) {
      display.print("UP");
    }
    if (octavestatus == 0) {
      display.print("-->");
    }
    if (octavestatus == -1) {
      display.print("DOWN");
    }
    display.print(" CAPO=");
    if (tonestatus == 0) {
      display.println("OFF");
    }
    if (tonestatus == 1) {
      display.println("ON");
    }

    display.println("Adjust Capo/Octaves");
    display.println("(O) Key = CONFIRM");
    display.display();
    delay(2000);

  } // end of if capo on or off required

  // Look at the key combinations to move ALL channels up or down one OCTAVE
  // i.e. 12 MIDI steps

  if (digitalRead(octaveupbuttonPin) == LOW) {
    octaveupbuttonstatus = 1;
  }
  if (digitalRead(octavedownbuttonPin) == LOW) {
    octavedownbuttonstatus = 1;
  }

  if (but24status == 1 || octaveupbuttonstatus == 1 ||
      octavedownbuttonstatus == 1) {

    if (but37status == 1 || octaveupbuttonstatus == 1) { // UP one OCTAVE
      // Serial.println("UP one octave");
      octaveupbuttonstatus = 0; // Reset this
      display.clearDisplay();
      display.setTextSize(1);
      display.setCursor(0, 0);
      if (octavestatus < 1) { // It can go up but to no more than +1
        chan1midi = chan1midi + 12;
        chan2midi = chan2midi + 12;
        trompmidi = trompmidi + 12;
        dronemidi = dronemidi + 12;
        octavestatus = octavestatus + 1;
      }
      if (octavestatus > 1) {
        octavestatus = 1;
      }
      // Add in max min limits later
      if (choosekey == 1) {
        display.println("   G/C C Drones");
      }
      if (choosekey == 2) {
        display.println("   G/C G Drones");
      }
      if (choosekey == 3) {
        display.println("   D/G D Drones");
      }
      if (choosekey == 4) {
        display.println("   D/G G Drones");
      }
      if (choosekey == 5) {
        display.println("  G/C CG Drones");
      }
      // if(choosekey == 5){ display.println("Trad G/C in C"); }
      // display.println(" ");
      display.print("Melody Chan 1:   ");
      // display.println(chan1midi);
      MIDInote = chan1midi;
      // if(MIDInote > 91 || MIDInote < 43){ display.println("ERR"); }
      // else{ putinthenote(); }
      putinthenote();
      display.print("Melody Chan 2:   ");
      // display.println(chan2midi);
      MIDInote = chan2midi;
      // if(MIDInote > 91 || MIDInote < 43){ display.println("ERR"); }
      // else{ putinthenote(); }
      putinthenote();
      display.print("Tromp  Chan 3:   ");
      // display.println(trompmidi);
      MIDInote = trompmidi;
      // if(MIDInote > 103 || MIDInote < 43){ display.println("ERR"); }
      // else{ putinthenote(); }
      putinthenote();
      display.print("Drone  Chan 4:   ");
      // display.println(dronemidi);
      MIDInote = dronemidi;
      // if(MIDInote > 103 || MIDInote < 43){ display.println("ERR"); }
      // else{ putinthenote(); }
      putinthenote();

      display.print("OCTAVE=");
      if (octavestatus == 1) {
        display.print("UP");
      }
      if (octavestatus == 0) {
        display.print("-->");
      }
      if (octavestatus == -1) {
        display.print("DOWN");
      }
      display.print(" CAPO=");
      if (tonestatus == 0) {
        display.println("OFF");
      }
      if (tonestatus == 1) {
        display.println("ON");
      }

      display.println("Adjust Capo/Octaves");
      display.println("(O) Key = CONFIRM");
      display.display();
      delay(2000);
    }

    if (but36status == 1 || octavedownbuttonstatus == 1) { // DOWN one OCTAVE
      octavedownbuttonstatus = 0;                          // Reset this
      // Serial.println("DOWN one octave");

      display.clearDisplay();
      display.setTextSize(1);
      display.setCursor(0, 0);
      if (octavestatus >
          -1) { // It can go down in steps but to no lower than -1
        chan1midi = chan1midi - 12;
        chan2midi = chan2midi - 12;
        trompmidi = trompmidi - 12;
        dronemidi = dronemidi - 12;
        octavestatus = octavestatus - 1;
      }
      if (octavestatus < -1) {
        octavestatus = -1;
      }
      // Add in max min limits later
      if (choosekey == 1) {
        display.println("   G/C C Drones");
      }
      if (choosekey == 2) {
        display.println("   G/C G Drones");
      }
      if (choosekey == 3) {
        display.println("   D/G D Drones");
      }
      if (choosekey == 4) {
        display.println("   D/G G Drones");
      }
      if (choosekey == 5) {
        display.println("  G/C CG Drones");
      }
      // if(choosekey == 5){ display.println("Trad G/C in C"); }
      // display.println(" ");
      display.print("Melody Chan 1:   ");
      // display.println(chan1midi);
      MIDInote = chan1midi;
      // if(MIDInote > 91 || MIDInote < 43){ display.println("ERR"); }
      // else{ putinthenote(); }
      putinthenote();
      display.print("Melody Chan 2:   ");
      // display.println(chan2midi);
      MIDInote = chan2midi;
      // if(MIDInote > 91 || MIDInote < 43){ display.println("ERR"); }
      // else{ putinthenote(); }
      putinthenote();
      display.print("Tromp  Chan 3:   ");
      // display.println(trompmidi);
      MIDInote = trompmidi;
      // if(MIDInote > 103 || MIDInote < 43){ display.println("ERR"); }
      // else{ putinthenote(); }
      putinthenote();
      display.print("Drone  Chan 4:   ");
      // display.println(dronemidi);
      MIDInote = dronemidi;
      // if(MIDInote > 103 || MIDInote < 43){ display.println("ERR"); }
      // else{ putinthenote(); }
      putinthenote();

      display.print("OCTAVE=");
      if (octavestatus == 1) {
        display.print("UP");
      }
      if (octavestatus == 0) {
        display.print("-->");
      }
      if (octavestatus == -1) {
        display.print("DOWN");
      }
      display.print(" CAPO=");
      if (tonestatus == 0) {
        display.println("OFF");
      }
      if (tonestatus == 1) {
        display.println("ON");
      }

      display.println("Adjust Capo/Octaves");
      display.println("(O) Key = CONFIRM");
      display.display();
      delay(2000);
    }

  } // end of if button 24 falling edge

  delay(200);
  but20status = 0; // Keeps it to 0 ready for a new status check to see if it is
                   // being pressed.
  button20.update(); // Light blue button press to exit the tweaktunings
                     // adjustment loop
  if (button20.fallingEdge()) {
    but20status = 1;
  }
  if (button20.risingEdge()) {
    but20status = 0;
  }
  if (but20status == 1) { // i.e. pressing the light blue button

    but20status = 0;
    // break;
    tweaktuning = 1;

  } else {
    tweaktuning = 0;
  }

  // display.clearDisplay();
  // display.setTextSize(1);
  // display.setCursor(0,0);
  // display.println("STILL Looking");
  // display.print("tweaktuning=");
  // display.println(tweaktuning);
  // display.display();
  delay(50);

} // end of void look for a new tuning

void putinthenote() {
  switch (MIDInote) {

    /*
      case 127:
          display.println("G9");
          break;

      case 126:
          display.println("F9#");
          break;

      case 125:
          display.println("F9");
          break;

      case 124:
          display.println("E9");
          break;

      case 123:
          display.println("D9#");
          break;

      case 122:
          display.println("D9");
          break;

      case 121:
          display.println("C9#");
          break;

      case 120:
          display.println("C9");
          break;

      case 119:
          display.println("B8");
          break;

      case 118:
          display.println("A8#");
          break;
    */

  case 117:
    display.println("A8");
    break;

  case 116:
    display.println("G8#");
    break;

  case 115:
    display.println("G8");
    break;

  case 114:
    display.println("F8#");
    break;

  case 113:
    display.println("F8");
    break;

  case 112:
    display.println("E8");
    break;

  case 111:
    display.println("D8#");
    break;

  case 110:
    display.println("D8");
    break;

  case 109:
    display.println("C8#");
    break;

  case 108:
    display.println("C8");
    break;

  case 107:
    display.println("B7");
    break;

  case 106:
    display.println("A7#");
    break;

  case 105:
    display.println("A5");
    break;

  case 104:
    display.println("G7#");
    break;

  case 103:
    display.println("G7");
    break;

  case 102:
    display.println("F7#");
    break;

  case 101:
    display.println("F7");
    break;

  case 100:
    display.println("E7");
    break;

  case 99:
    display.println("D7#");
    break;

  case 98:
    display.println("D7");
    break;

  case 97:
    display.println("C7#");
    break;

  case 96:
    display.println("C7");
    break;

  case 95:
    display.println("B6");
    break;

  case 94:
    display.println("A6#");
    break;

  case 93:
    display.println("A6");
    break;

  case 92:
    display.println("G6#");
    break;

  case 91:
    display.println("G6");
    break;

  case 90:
    display.println("F6#");
    break;

  case 89:
    display.println("F6");
    break;

  case 88:
    display.println("E6");
    break;

  case 87:
    display.println("D6#");
    break;

  case 86:
    display.println("D6");
    break;

  case 85:
    display.println("C6#");
    break;

  case 84:
    display.println("C6");
    break;

  case 83:
    display.println("B5");
    break;

  case 82:
    display.println("A5#");
    break;

  case 81:
    display.println("A5");
    break;

  case 80:
    display.println("G5#");
    break;

  case 79:
    display.println("G5");
    break;

  case 78:
    display.println("F5#");
    break;

  case 77:
    display.println("F5");
    break;

  case 76:
    display.println("E5");
    break;

  case 75:
    display.println("D5#");
    break;

  case 74:
    display.println("D5");
    break;

  case 73:
    display.println("C5#");
    break;

  case 72:
    display.println("C5");
    break;

  case 71:
    display.println("B4");
    break;

  case 70:
    display.println("A4#");
    break;

  case 69:
    display.println("A4");
    break;

  case 68:
    display.println("G4#");
    break;

  case 67:
    display.println("G4");
    break;

  case 66:
    display.println("F4#");
    break;

  case 65:
    display.println("F4");
    break;

  case 64:
    display.println("E4");
    break;

  case 63:
    display.println("D4#");
    break;

  case 62:
    display.println("D4");
    break;

  case 61:
    display.println("C4#");
    break;

  case 60:
    display.println("C4");
    break;

  case 59:
    display.println("B3");
    break;

  case 58:
    display.println("A3#");
    break;

  case 57:
    display.println("A3");
    break;

  case 56:
    display.println("G3#");
    break;

  case 55:
    display.println("G3");
    break;

  case 54:
    display.println("F3#");
    break;

  case 53:
    display.println("F3");
    break;

  case 52:
    display.println("E3");
    break;

  case 51:
    display.println("D3#");
    break;

  case 50:
    display.println("D3");
    break;

  case 49:
    display.println("C3#");
    break;

  case 48:
    display.println("C3");
    break;

  case 47:
    display.println("B2");
    break;

  case 46:
    display.println("A2#");
    break;

  case 45:
    display.println("A2");
    break;

  case 44:
    display.println("G2#");
    break;

  case 43:
    display.println("G2");
    break;

  case 42:
    display.println("F2#");
    break;

  case 41:
    display.println("F2");
    break;

  case 40:
    display.println("E2");
    break;

  case 39:
    display.println("D2#");
    break;

  case 38:
    display.println("D2");
    break;

  case 37:
    display.println("C2#");
    break;

  case 36:
    display.println("C2");
    break;

  case 35:
    display.println("B1");
    break;

  case 34:
    display.println("A1#");
    break;

  case 33:
    display.println("A1");
    break;

  case 32:
    display.println("G1#");
    break;

  case 31:
    display.println("G1");
    break;
    /*

      case 30:
          display.println("F1#");
          break;

      case 29:
          display.println("F1");
          break;

      case 28:
          display.println("E1");
          break;

      case 27:
          display.println("D1#");
          break;

      case 26:
          display.println("D1");
          break;

      case 25:
          display.println("C1#");
          break;

      case 24:
          display.println("C1");
          break;

      case 23:
          display.println("B0");
          break;

      case 22:
          display.println("A0#");
          break;

      case 21:
          display.println("A0");
          break;

      case 20:
          display.println("G0#");
          break;

      case 19:
          display.println("G0");
          break;

      case 18:
          display.println("F0#");
          break;

      case 17:
          display.println("F0");
          break;

      case 16:
          display.println("E0");
          break;

      case 15:
          display.println("D0#");
          break;

      case 14:
          display.println("D0");
          break;

      case 13:
          display.println("C0#");
          break;

      case 12:
          display.println("C0");
          break;
    */

  } // Closed bracket after switch

} // end of void putinthenote

void checkforcapochange() { // check for a capo change on the fly while playing

  // we already know button 2 is being pressed, that is why we are in this
  // subroutine so next thing is to see if button 19, the capo button, is being
  // pressed if so we move capo up or back down accordingly

  /*
 if (gg == 1){      // Tr and Dr UP one full tone       button 18


               //Serial.println("UP one tone");
               display.clearDisplay();
               display.setTextSize(1);
               display.setCursor(0,0);
               //display.println(" ");
               //display.println(" ");
               if(tonestatus == 0){    // Only allows it to go up one full tone
 or back tonestatus = 1; trompmidi = trompmidi + 2; dronemidi = dronemidi + 2;
               EEPROM.write(tonestatusaddress, tonestatus);
               EEPROM.write(trompmidiaddress, trompmidi);
               EEPROM.write(dronemidiaddress, dronemidi);
               display.println("    CAPO APPLIED");
                                   }
                          else{  display.println("CAPO ALREADY APPLIED");    }

               // Add in max min limits later
               display.println(" ");
               display.println("Play when ready");

               display.display();
               delay(2000);

                                                     }
*/
  if (digitalRead(capobuttonPin) == LOW) {
    capobuttonstatus = 1;
  }
  if (ee == 1 ||
      capobuttonstatus == 1) { // Tr and Dr DOWN one full tone    button 19
                               // capobutton is pin 23 on new circuit board
    capobuttonstatus = 0;      // Reset this
    // Serial.println("DOWN one tone");
    display.clearDisplay();
    display.setTextSize(1);
    display.setCursor(0, 0);
    // display.println(" ");
    // display.println(" ");
    int temporaryvalue = tonestatus;
    if (temporaryvalue == 1) {
      display.println("      CAPO OFF");
      tonestatus = 0; // tonestatus is bistable between 1 and 0
      trompmidi = trompmidi - 2;
      dronemidi = dronemidi - 2;
    }
    if (temporaryvalue == 0) { // Only allows it to go up one full tone or back
      tonestatus = 1;
      trompmidi = trompmidi + 2;
      dronemidi = dronemidi + 2;
      display.println("      CAPO ON");
    }

    EEPROM.write(tonestatusaddress, tonestatus);
    EEPROM.write(trompmidiaddress, trompmidi);
    EEPROM.write(dronemidiaddress, dronemidi);
    // Add in max min limits later

    if (choosekey == 1) {
      display.println("   G/C C Drones");
    }
    if (choosekey == 2) {
      display.println("   G/C G Drones");
    }
    if (choosekey == 3) {
      display.println("   D/G D Drones");
    }
    if (choosekey == 4) {
      display.println("   D/G G Drones");
    }
    if (choosekey == 5) {
      display.println("  G/C CG Drones");
    }
    // if(choosekey == 5){ display.println("Trad G/C in C"); }
    // display.println(" ");
    display.print("Melody Chan 1:   ");
    // display.println(chan1midi);
    MIDInote = chan1midi;
    // if(MIDInote > 91 || MIDInote < 43){ display.println("ERR"); }
    // else{ putinthenote(); }
    putinthenote();
    display.print("Melody Chan 2:   ");
    // display.println(chan2midi);
    MIDInote = chan2midi;
    // if(MIDInote > 91 || MIDInote < 43){ display.println("ERR"); }
    // else{ putinthenote(); }
    putinthenote();
    display.print("Tromp  Chan 3:   ");
    // display.println(trompmidi);
    MIDInote = trompmidi;
    // if(MIDInote > 103 || MIDInote < 43){ display.println("ERR"); }
    // else{ putinthenote(); }
    putinthenote();
    display.print("Drone  Chan 4:   ");
    // display.println(dronemidi);
    MIDInote = dronemidi;
    // if(MIDInote > 103 || MIDInote < 43){ display.println("ERR"); }
    // else{ putinthenote(); }
    putinthenote();
    display.println(" ");
    display.println("Play when ready");

    display.display();
    delay(2000);
  }

  buzzrootkey =
      trompmidi; // Set the buzz pitch to match the new trompette value

} // end of check for capo change on the fly while playing
